{"version":3,"sources":["access.min.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","mbedCloudSDK","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","__extends","d","b","__","constructor","p","hasOwnProperty","prototype","Object","create","apiBase_1","AccountAdminApi","_super","apply","arguments","addAlias","accountID","alias","callback","undefined","headerParams","queryParameters","useFormData","formParams","request","url","replace","String","method","headers","query","json","addCertificate","body","addMyAccountAlias","addSubjectsToGroup","groupID","addUsersToGroup","createGroup","createUser","action","deleteCertificate","caCertId","deleteGroup","deleteUser","userId","force","getAllCertificates","limit","after","order","include","filter","getAllUsers","getCertificate","getUser","getUsersOfGroup","removeAlias","removeMyAccountAlias","removeUsersFromGroup","resetUserPassword","setAliases","setMyAccountAliases","updateAccount","updateCertificate","updateMyAccount","updateUser","ApiBase","DefaultApi","activateUser","invitationId","applyPasswordRecovery","xForwardedFor","cleanUnconfirmedAccounts","getAllAccountsAllCertificates","service","ifNoneMatch","issuer","accountId","getInvitedUser","getSelfEnrollingUser","signupId","headAllAccounts","headAllApiKeys","headAllCertificates","headAllGroups","headAllInternalCertificates","headAllUsers","headInternalLimits","headInvitations","headMyAccount","headMyApiKey","headMyUser","headRecovery","headRegister","registerAccount","requestPasswordRecovery","setLoggingLevel","signup","verifySelfEnrollment","DeveloperApi","addApiKeysToGroup","changeMyPassword","createApiKey","deleteApiKey","apiKey","getAccountAttributes","name","getAliases","getAllApiKeys","owner","getAllGroups","getApiKey","getApiKeysOfGroup","getGroupSummary","getMyAccountAliases","getMyAccountAttributes","getMyAccountInfo","getMyApiKey","getMyUser","removeApiKeysFromGroup","resetSecret","updateApiKey","updateMyApiKey","updateMyUser","RootAdminApi","addAccountCertificate","addApiKeysToAccountGroup","addSubjectsToAccountGroup","addUsersToAccountGroup","changeAccountUserPassword","checkAccountUserPassword","createAccount","createAccountApiKey","createAccountGroup","createAccountTemplate","createAccountUser","deleteAccount","deleteAccountApiKey","deleteAccountCertificate","deleteAccountGroup","deleteAccountTemplate","templateId","deleteAccountUser","getAccountApiKey","getAccountCertificate","getAccountGroupSummary","getAccountInfo","getAccountLimits","getAccountTemplate","getAccountUser","getAllAccountApiKeys","getAllAccountCertificates","getAllAccountGroups","getAllAccountTemplates","getAllAccountUsers","getAllAccounts","status","tier","parent","getAllAccountsAllUsers","getApiKeysOfAccountGroup","getUsersOfAccountGroup","manageAccount","isProvisioningAllowed","removeApiKeysFromAccountGroup","removeUsersFromAccountGroup","resetAccountApiKeySecret","resetAccountUserPassword","updateAccountApiKey","updateAccountCertificate","updateAccountTemplate","updateAccountUser","../common/apiBase","2","functions_1","Account","options","_api","key","map","from","api","type","addressLine1","address_line1","addressLine2","address_line2","aliases","city","company","contact","country","createdAt","created_at","displayName","display_name","email","id","limits","parentId","parentID","phoneNumber","phone_number","postcode","postal_code","provisioningAllowed","is_provisioning_allowed","state","template_id","upgradedAt","upgraded_at","reverseMap","update","_this","asyncStyle","done","updateAccountDetails","../common/functions","3","ApiKey","groups","lastLoginTime","last_login_time","listGroups","error","userGroups","group","indexOf","delete","4","Certificate","account_id","data","cert_data","subject","validity","certificateData","signature","5","iam_1","Endpoints","access","host","developer","admin","../_api/iam","6","Group","apiKeyCount","creationTime","lastUpdateTime","userCount","7","endpoints_1","account_1","certificate_1","user_1","apiKey_1","group_1","AccessApi","_endpoints","getAccountDetails","account","listApiKeys","_a","attributes","encodeAttributes","encodeInclude","keys","mapListResponse","addApiKey","listCertificates","certificates","certificate","listUsers","users","user","User","addUser","apiUser","./account","./apiKey","./certificate","./endpoints","./group","./user","8","address","creation_time","emailVerified","email_verified","fullName","full_name","termsAccepted","is_gtc_accepted","marketingAccepted","is_marketing_accepted","password","passwordChangedTime","password_changed_time","username","9","Buffer","DEFAULT_HOST","superagent","substr","toLowerCase","$0","$1","normalizeParams","set","timeout","accept","isFileParam","attach","field","send","end","response","text","params","newParams","value","Array","isArray","paramToString","param","ReadStream","Blob","File","Date","toJSON","toString","buffer","fs","10","asyncFn","callbackFn","Promise","resolve","reject","decodeBase64","payload","contentType","result","atob","JSON","parse","camelToSnake","join","snakeToCamel","snake","match","toUpperCase","camel","to","hasMore","has_more","totalCount","total_count","prefix","decodeAttributes","noMatch","re","RegExp","decodeURIComponent","split","forEach","attrib","encodeFilter","customPrefix","custom","customAttributes","11","12","noop","serialize","obj","isObject","pairs","pushEncodedKeyValuePair","val","v","subkey","push","encodeURIComponent","parseString","str","pair","pos","len","slice","parseHeader","index","line","lines","fields","pop","trim","isJSON","mime","test","Response","req","xhr","responseType","responseText","statusText","_setStatusProperties","header","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","_parseBody","Request","_query","_header","on","err","res","original","rawResponse","statusCode","emit","new_err","_isResponseOK","del","fn","root","console","warn","Emitter","RequestBase","isFunction","ResponseBase","shouldRetry","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","serializeObject","types","html","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","stringify","_parser","toError","msg","auth","pass","btoa","file","_data","_getFormData","append","_formData","FormData","_maxRetries","_retries","_retry","_callback","clearTimeout","retries","crossDomainError","crossDomain","ca","agent","pipe","write","_appendQueryString","_sort","queryArr","substring","sort","_isHost","_endCalled","_end","_setTimeouts","onreadystatechange","readyState","_responseTimeoutTimer","timedout","_aborted","handleProgress","direction","total","percent","loaded","hasListeners","onprogress","bind","upload","open","_withCredentials","withCredentials","_serializer","setRequestHeader","get","head","patch","post","put","./is-function","./is-object","./request-base","./response-base","./should-retry","emitter","13","tag","14","15","mixin","_timer","deadline","_timeout","_responseTimeout","retry","count","then","_fullfilledPromise","innerResolve","innerReject","catch","cb","use","ok","_okCallback","getHeader","unset","abort","redirects","_maxRedirects","isObj","sortQuery","_timeoutError","reason","setTimeout","16","utils","ct","links","link","parseLinks","statusType","info","redirect","clientError","serverError","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","./utils","17","ERROR_CODES","18","shift","reduce","parts","rel","cleanHeader","shouldStripCookie","19","addEventListener","event","_callbacks","once","off","removeListener","removeAllListeners","removeEventListener","callbacks","splice","args","listeners"],"mappings":"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","file":"access.min.js","sourcesContent":["(function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.mbedCloudSDK = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n/**\n * IAM Identities REST API\n * REST API to manage accounts, groups, users and API keys\n *\n * OpenAPI spec version: v3\n *\n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n */\n\"use strict\";\nvar __extends = (this && this.__extends) || function (d, b) {\n    for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p];\n    function __() { this.constructor = d; }\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\n};\nvar apiBase_1 = require(\"../common/apiBase\");\n/**\n * AccountAdminApi\n */\nvar AccountAdminApi = (function (_super) {\n    __extends(AccountAdminApi, _super);\n    function AccountAdminApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add an alias.\n     * Adds an alias to the account.\n     * @param accountID The ID of the account to be updated.\n     * @param alias The account alias to be added.\n     */\n    AccountAdminApi.prototype.addAlias = function (accountID, alias, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'addAlias'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"alias\" is set\n        if (alias === null || alias === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'alias' missing when calling 'addAlias'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/alias/{alias}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'alias' + '}', String(alias)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Upload a new CA certificate.\n     * An endpoint for uploading new CA certificates.\n     * @param body A CA certificate object with attributes.\n     */\n    AccountAdminApi.prototype.addCertificate = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'addCertificate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/ca-certificates',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add an alias.\n     * Adds an alias to the account.\n     * @param alias\n     */\n    AccountAdminApi.prototype.addMyAccountAlias = function (alias, callback) {\n        // verify required parameter \"alias\" is set\n        if (alias === null || alias === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'alias' missing when calling 'addMyAccountAlias'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/me/alias/{alias}'.replace('{' + 'alias' + '}', String(alias)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Add members to a group.\n     * An endpoint for adding users and API keys to groups.\n     * @param groupID The ID of the group to be updated.\n     * @param body A list of users and API keys to be added to the group.\n     */\n    AccountAdminApi.prototype.addSubjectsToGroup = function (groupID, body, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'addSubjectsToGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'addSubjectsToGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add users to a group.\n     * An endpoint for adding users to groups.\n     * @param groupID The ID of the group to be updated.\n     * @param body A list of users to be added to the group.\n     */\n    AccountAdminApi.prototype.addUsersToGroup = function (groupID, body, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'addUsersToGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'addUsersToGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}/users'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new group.\n     * An endpoint for creating a new group.\n     * @param body Details of the group to be created.\n     */\n    AccountAdminApi.prototype.createGroup = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'createGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new user.\n     * An endpoint for creating a new user.\n     * @param body A user object with attributes.\n     * @param action Action, either &#39;create&#39; or &#39;invite&#39;.\n     */\n    AccountAdminApi.prototype.createUser = function (body, action, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'createUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (action !== undefined) {\n            queryParameters['action'] = action;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Delete a CA certificate by ID.\n     * An endpoint for deleting a CA certificate.\n     * @param caCertId The ID of the CA certificate to be deleted.\n     */\n    AccountAdminApi.prototype.deleteCertificate = function (caCertId, callback) {\n        // verify required parameter \"caCertId\" is set\n        if (caCertId === null || caCertId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'caCertId' missing when calling 'deleteCertificate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/ca-certificates/{ca-cert-id}'.replace('{' + 'ca-cert-id' + '}', String(caCertId)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Delete a group.\n     * An endpoint for deleting a group.\n     * @param groupID The ID of the group to be deleted.\n     */\n    AccountAdminApi.prototype.deleteGroup = function (groupID, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'deleteGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Delete a user.\n     * An endpoint for deleting a user.\n     * @param userId The ID of the user to be deleted.\n     * @param force A flag indicating that the user is forced to be deleted.\n     */\n    AccountAdminApi.prototype.deleteUser = function (userId, force, callback) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'deleteUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (force !== undefined) {\n            queryParameters['force'] = force;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users/{user-id}'.replace('{' + 'user-id' + '}', String(userId)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all CA certificates.\n     * An endpoint for retrieving CA certificates in an array.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param filter Filter by service or expiring days, for example filter&#x3D;service%3Dlwm2m,expire%3D180\n     */\n    AccountAdminApi.prototype.getAllCertificates = function (limit, after, order, include, filter, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        if (filter !== undefined) {\n            queryParameters['filter'] = filter;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/ca-certificates',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get the details of all users.\n     * An endpoint for retrieving the details of all users.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param filter Filter for the query, for example filter&#x3D;status%3Dactive,status%3Dreset.\n     */\n    AccountAdminApi.prototype.getAllUsers = function (limit, after, order, include, filter, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        if (filter !== undefined) {\n            queryParameters['filter'] = filter;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get CA certificate by ID.\n     * An endpoint for retrieving a CA certificate by ID.\n     * @param caCertId The ID or name of the CA certificate to be retrieved.\n     */\n    AccountAdminApi.prototype.getCertificate = function (caCertId, callback) {\n        // verify required parameter \"caCertId\" is set\n        if (caCertId === null || caCertId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'caCertId' missing when calling 'getCertificate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/ca-certificates/{ca-cert-id}'.replace('{' + 'ca-cert-id' + '}', String(caCertId)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Details of a user.\n     * An endpoint for retrieving the details of a user.\n     * @param userId The ID or name of the user whose details are retrieved.\n     */\n    AccountAdminApi.prototype.getUser = function (userId, callback) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'getUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users/{user-id}'.replace('{' + 'user-id' + '}', String(userId)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get users of a group.\n     * An endpoint for listing the users of a group with details.\n     * @param groupID The ID of the group whose users are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    AccountAdminApi.prototype.getUsersOfGroup = function (groupID, limit, after, order, include, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'getUsersOfGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}/users'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Remove an alias.\n     * Removes an alias from the account.\n     * @param accountID The ID of the account to be updated.\n     * @param alias The account alias to be removed.\n     */\n    AccountAdminApi.prototype.removeAlias = function (accountID, alias, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'removeAlias'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"alias\" is set\n        if (alias === null || alias === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'alias' missing when calling 'removeAlias'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/alias/{alias}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'alias' + '}', String(alias)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Remove an alias.\n     * Removes an alias from the account.\n     * @param alias Account alias to be removed.\n     */\n    AccountAdminApi.prototype.removeMyAccountAlias = function (alias, callback) {\n        // verify required parameter \"alias\" is set\n        if (alias === null || alias === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'alias' missing when calling 'removeMyAccountAlias'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/me/alias/{alias}'.replace('{' + 'alias' + '}', String(alias)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Remove users from a group.\n     * An endpoint for removing users from groups.\n     * @param groupID The ID of the group whose users are removed.\n     * @param body A list of users to be removed from the group.\n     */\n    AccountAdminApi.prototype.removeUsersFromGroup = function (groupID, body, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'removeUsersFromGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'removeUsersFromGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}/users'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Reset the user password.\n     * An endpoint for resetting the user password. The new password will visible in the response.\n     * @param userId The ID of the user whose password is reset.\n     */\n    AccountAdminApi.prototype.resetUserPassword = function (userId, callback) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'resetUserPassword'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users/{user-id}/reset-password'.replace('{' + 'user-id' + '}', String(userId)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Set aliases.\n     * Defines aliases of the account and overwrites the previous set of aliases.\n     * @param accountID The ID of the account to be updated.\n     * @param body A list of aliases to be set.\n     */\n    AccountAdminApi.prototype.setAliases = function (accountID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'setAliases'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'setAliases'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/alias'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Set aliases.\n     * Defines the aliases of the account and overwrites the previous set of aliases.\n     * @param body List of aliases to be set.\n     */\n    AccountAdminApi.prototype.setMyAccountAliases = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'setMyAccountAliases'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/me/alias',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update attributes of an existing account.\n     * An endpoint for updating an account.\n     * @param accountID The ID of the account to be updated.\n     * @param body Details of the account to be updated.\n     */\n    AccountAdminApi.prototype.updateAccount = function (accountID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'updateAccount'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateAccount'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update CA certificate.\n     * An endpoint for updating existing CA certificates.\n     * @param caCertId The ID of the CA certificate to be updated.\n     * @param body A CA certificate object with attributes.\n     */\n    AccountAdminApi.prototype.updateCertificate = function (caCertId, body, callback) {\n        // verify required parameter \"caCertId\" is set\n        if (caCertId === null || caCertId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'caCertId' missing when calling 'updateCertificate'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateCertificate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/ca-certificates/{ca-cert-id}'.replace('{' + 'ca-cert-id' + '}', String(caCertId)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Updates attributes of the account.\n     * An endpoint for updating the account.\n     * @param body Details of the account to be updated.\n     */\n    AccountAdminApi.prototype.updateMyAccount = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateMyAccount'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/me',\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update user details.\n     * An endpoint for updating user details.\n     * @param userId The ID of the user whose details are updated.\n     * @param body A user object with attributes.\n     */\n    AccountAdminApi.prototype.updateUser = function (userId, body, callback) {\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'updateUser'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users/{user-id}'.replace('{' + 'user-id' + '}', String(userId)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    return AccountAdminApi;\n}(apiBase_1.ApiBase));\nexports.AccountAdminApi = AccountAdminApi;\n/**\n * DefaultApi\n */\nvar DefaultApi = (function (_super) {\n    __extends(DefaultApi, _super);\n    function DefaultApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Accept invitation.\n     * Accepting pending invitation and providing missing details.\n     * @param invitationId Invitation ID received in email.\n     * @param body Details of the user accepting the invitation.\n     */\n    DefaultApi.prototype.activateUser = function (invitationId, body, callback) {\n        // verify required parameter \"invitationId\" is set\n        if (invitationId === null || invitationId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'invitationId' missing when calling 'activateUser'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'activateUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/invitations/{invitation-id}'.replace('{' + 'invitation-id' + '}', String(invitationId)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Apply password recovery.\n     * Applying password recovery by providing a secret hash code.\n     * @param body Hash received by email and new password.\n     * @param xForwardedFor\n     */\n    DefaultApi.prototype.applyPasswordRecovery = function (body, xForwardedFor, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'applyPasswordRecovery'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        headerParams['X-Forwarded-For'] = xForwardedFor;\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/recover',\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Remove unconfirmed accounts.\n     * An endpoint for removing unconfirmed accounts.\n     * @param body Duration in seconds to determine how old accounts are to be removed.\n     */\n    DefaultApi.prototype.cleanUnconfirmedAccounts = function (body, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/internal/v1/gc/register',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Get all accounts all CA certificates.\n     * An endpoint for retrieving all accounts&#39; all CA certificates in an array.\n     * @param service Filter certificates by service.\n     * @param ifNoneMatch\n     * @param issuer Optional filter for a certain issuer name.\n     * @param accountId Optional filter for a certain account ID.\n     */\n    DefaultApi.prototype.getAllAccountsAllCertificates = function (service, ifNoneMatch, issuer, accountId, callback) {\n        // verify required parameter \"service\" is set\n        if (service === null || service === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'service' missing when calling 'getAllAccountsAllCertificates'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        headerParams['If-None-Match'] = ifNoneMatch;\n        var queryParameters = {};\n        if (service !== undefined) {\n            queryParameters['service'] = service;\n        }\n        if (issuer !== undefined) {\n            queryParameters['issuer'] = issuer;\n        }\n        if (accountId !== undefined) {\n            queryParameters['account_id'] = accountId;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/internal/v1/ca-certificates',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get invited user.\n     * Returns information about the user being invited.\n     * @param invitationId Invitation ID received in email.\n     */\n    DefaultApi.prototype.getInvitedUser = function (invitationId, callback) {\n        // verify required parameter \"invitationId\" is set\n        if (invitationId === null || invitationId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'invitationId' missing when calling 'getInvitedUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/invitations/{invitation-id}'.replace('{' + 'invitation-id' + '}', String(invitationId)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get registering user.\n     * Retrieving the details of a user to register.\n     * @param signupId ID received while signing up.\n     */\n    DefaultApi.prototype.getSelfEnrollingUser = function (signupId, callback) {\n        // verify required parameter \"signupId\" is set\n        if (signupId === null || signupId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'signupId' missing when calling 'getSelfEnrollingUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/register/{signup-id}'.replace('{' + 'signup-id' + '}', String(signupId)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headAllAccounts = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headAllApiKeys = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headAllCertificates = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/ca-certificates',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headAllGroups = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headAllInternalCertificates = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/internal/v1/ca-certificates',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headAllUsers = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headInternalLimits = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/internal/v1/limits',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headInvitations = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/invitations',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headMyAccount = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/me',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headMyApiKey = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys/me',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headMyUser = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users/me',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headRecovery = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/recover',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * The heartbeat method for this API.\n     *\n     */\n    DefaultApi.prototype.headRegister = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/register',\n            method: 'HEAD',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Register a new account.\n     * An endpoint for registering a new account.\n     * @param signupId ID received while signing up.\n     * @param body Details of the account to be created.\n     */\n    DefaultApi.prototype.registerAccount = function (signupId, body, callback) {\n        // verify required parameter \"signupId\" is set\n        if (signupId === null || signupId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'signupId' missing when calling 'registerAccount'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'registerAccount'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/register/{signup-id}'.replace('{' + 'signup-id' + '}', String(signupId)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Request password recovery.\n     * Requesting password recovery by email address.\n     * @param body Email address of the user whose password needs to be recovered.\n     * @param xForwardedFor\n     */\n    DefaultApi.prototype.requestPasswordRecovery = function (body, xForwardedFor, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'requestPasswordRecovery'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        headerParams['X-Forwarded-For'] = xForwardedFor;\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/recover',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Set the logging level\n     * An endpoint for setting the wanted level of logging.\n     * @param body Logging level, either &#39;debug&#39;, &#39;info&#39; or &#39;warn&#39;\n     */\n    DefaultApi.prototype.setLoggingLevel = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'setLoggingLevel'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/admin/v3/logging',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Sign up for a new account.\n     * Signing up for a new free tier account with email address.\n     * @param body Email address of the user to be signed up.\n     */\n    DefaultApi.prototype.signup = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'signup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/register',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Verify self-enrollment code and aliases.\n     * Verifying whether the code received by email is valid. Optionally, it also verifies whether an account with the given aliases exists.\n     * @param signupId ID received while signing up.\n     * @param body Verification code received by email and aliases to be checked.\n     */\n    DefaultApi.prototype.verifySelfEnrollment = function (signupId, body, callback) {\n        // verify required parameter \"signupId\" is set\n        if (signupId === null || signupId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'signupId' missing when calling 'verifySelfEnrollment'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/auth/register/{signup-id}'.replace('{' + 'signup-id' + '}', String(signupId)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    return DefaultApi;\n}(apiBase_1.ApiBase));\nexports.DefaultApi = DefaultApi;\n/**\n * DeveloperApi\n */\nvar DeveloperApi = (function (_super) {\n    __extends(DeveloperApi, _super);\n    function DeveloperApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Add API keys to a group.\n     * Ann endpoint for adding API keys to groups.\n     * @param groupID The ID of the group to be updated.\n     * @param body A list of API keys to be added to the group.\n     */\n    DeveloperApi.prototype.addApiKeysToGroup = function (groupID, body, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'addApiKeysToGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'addApiKeysToGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}/api-keys'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Change the password of the current user.\n     * An endpoint for changing the password of the logged in user.\n     * @param body Old and new password.\n     */\n    DeveloperApi.prototype.changeMyPassword = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'changeMyPassword'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users/me/password',\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new API key.\n     * An endpoint for creating a new API key.\n     * @param body The details of the API key to be created.\n     */\n    DeveloperApi.prototype.createApiKey = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'createApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Delete API key.\n     * An endpoint for deleting the API key.\n     * @param apiKey The ID of the API key to be deleted.\n     */\n    DeveloperApi.prototype.deleteApiKey = function (apiKey, callback) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'apiKey' missing when calling 'deleteApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys/{apiKey}'.replace('{' + 'apiKey' + '}', String(apiKey)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Read account attributes.\n     * Reads all account attributes as map.\n     * @param accountID The ID of the account to be read.\n     * @param name A comma separated list of attribute names.\n     */\n    DeveloperApi.prototype.getAccountAttributes = function (accountID, name, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAccountAttributes'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (name !== undefined) {\n            queryParameters['name'] = name;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/attributes'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get aliases.\n     * Retrieves the aliases of the account as an array.\n     * @param accountID The ID of the account whose aliases are retrieved.\n     */\n    DeveloperApi.prototype.getAliases = function (accountID, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAliases'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/alias'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all API keys\n     * An endpoint for retrieving API keys in an array, optionally filtered by the owner.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param filter A filter for the query, for example filter&#x3D;owner%3Duuid.\n     * @param owner Owner name filter.\n     */\n    DeveloperApi.prototype.getAllApiKeys = function (limit, after, order, include, filter, owner, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        if (filter !== undefined) {\n            queryParameters['filter'] = filter;\n        }\n        if (owner !== undefined) {\n            queryParameters['owner'] = owner;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all group information.\n     * An endpoint for retrieving all group information.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    DeveloperApi.prototype.getAllGroups = function (limit, after, order, include, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get API key details.\n     * An endpoint for retrieving API key details.\n     * @param apiKey The ID of the API key to be retrieved.\n     */\n    DeveloperApi.prototype.getApiKey = function (apiKey, callback) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'apiKey' missing when calling 'getApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys/{apiKey}'.replace('{' + 'apiKey' + '}', String(apiKey)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get the API keys of a group.\n     * An endpoint for listing the API keys of the group with details.\n     * @param groupID The ID of the group whose API keys are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    DeveloperApi.prototype.getApiKeysOfGroup = function (groupID, limit, after, order, include, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'getApiKeysOfGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}/api-keys'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get group information.\n     * An endpoint for getting general information about the group.\n     * @param groupID The ID or name of the group to be retrieved.\n     */\n    DeveloperApi.prototype.getGroupSummary = function (groupID, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'getGroupSummary'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get aliases.\n     * Retrieves the aliases of the account as an array.\n     */\n    DeveloperApi.prototype.getMyAccountAliases = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/me/alias',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Read account attributes.\n     * Reads all account attributes as map.\n     * @param name A comma separated list of attribute names.\n     */\n    DeveloperApi.prototype.getMyAccountAttributes = function (name, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (name !== undefined) {\n            queryParameters['name'] = name;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/me/attributes',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get account info.\n     * Returns detailed information about the account.\n     * @param include Comma separated additional data to return. Currently supported: limits\n     */\n    DeveloperApi.prototype.getMyAccountInfo = function (include, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/me',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get API key details.\n     * An endpoint for retrieving API key details.\n     */\n    DeveloperApi.prototype.getMyApiKey = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys/me',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Details of the current user.\n     * An endpoint for retrieving the details of the logged in user.\n     */\n    DeveloperApi.prototype.getMyUser = function (callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users/me',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Remove API keys from a group.\n     * An endpoint for removing API keys from groups.\n     * @param groupID The ID of the group whose API keys are removed.\n     * @param body A list of API keys to be removed from the group.\n     */\n    DeveloperApi.prototype.removeApiKeysFromGroup = function (groupID, body, callback) {\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'removeApiKeysFromGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'removeApiKeysFromGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/policy-groups/{groupID}/api-keys'.replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Reset secret key.\n     * An endpoint for resetting the secret key of the API key. The new secret key will visible in the response.\n     * @param apiKey The ID of the API key to be reset.\n     */\n    DeveloperApi.prototype.resetSecret = function (apiKey, callback) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'apiKey' missing when calling 'resetSecret'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys/{apiKey}/reset-secret'.replace('{' + 'apiKey' + '}', String(apiKey)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Update API key details.\n     * An endpoint for updating API key details.\n     * @param apiKey The ID of the API key to be updated.\n     * @param body New API key attributes to be stored.\n     */\n    DeveloperApi.prototype.updateApiKey = function (apiKey, body, callback) {\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'apiKey' missing when calling 'updateApiKey'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys/{apiKey}'.replace('{' + 'apiKey' + '}', String(apiKey)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update API key details.\n     * An endpoint for updating API key details.\n     * @param body New API key attributes to be stored.\n     */\n    DeveloperApi.prototype.updateMyApiKey = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateMyApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/api-keys/me',\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update user details.\n     * An endpoint for updating the details of the logged in user.\n     * @param body New attributes for the logged in user.\n     */\n    DeveloperApi.prototype.updateMyUser = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateMyUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/users/me',\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    return DeveloperApi;\n}(apiBase_1.ApiBase));\nexports.DeveloperApi = DeveloperApi;\n/**\n * RootAdminApi\n */\nvar RootAdminApi = (function (_super) {\n    __extends(RootAdminApi, _super);\n    function RootAdminApi() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    /**\n     * Upload new CA certificate.\n     * An endpoint for uploading new CA certificates.\n     * @param accountID Account ID.\n     * @param body A CA certificate object with attributes.\n     */\n    RootAdminApi.prototype.addAccountCertificate = function (accountID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'addAccountCertificate'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'addAccountCertificate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/ca-certificates'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add API keys to a group.\n     * An endpoint for adding API keys to groups.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group to be updated.\n     * @param body A list of API keys to be added to the group.\n     */\n    RootAdminApi.prototype.addApiKeysToAccountGroup = function (accountID, groupID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'addApiKeysToAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'addApiKeysToAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'addApiKeysToAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}/api-keys'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add members to a group.\n     * An endpoint for adding users and API keys to groups.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group to be updated.\n     * @param body A list of users and API keys to be added to the group.\n     */\n    RootAdminApi.prototype.addSubjectsToAccountGroup = function (accountID, groupID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'addSubjectsToAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'addSubjectsToAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'addSubjectsToAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Add users to a group.\n     * An endpoint for adding users to groups.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group to be updated.\n     * @param body A list of users to be added to the group.\n     */\n    RootAdminApi.prototype.addUsersToAccountGroup = function (accountID, groupID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'addUsersToAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'addUsersToAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'addUsersToAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}/users'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Change the password of a user.\n     * An endpoint for changing the user password. The old password is not checked.\n     * @param accountID Account ID.\n     * @param userId The ID of the user whose password is changed.\n     * @param body New password only.\n     */\n    RootAdminApi.prototype.changeAccountUserPassword = function (accountID, userId, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'changeAccountUserPassword'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'changeAccountUserPassword'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'changeAccountUserPassword'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/users/{user-id}/password'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'user-id' + '}', String(userId)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Check the password of a user.\n     * An endpoint for checking user&#39;s current password.\n     * @param accountID Account ID.\n     * @param userId The ID of the user whose password is checked.\n     * @param body Current password only.\n     */\n    RootAdminApi.prototype.checkAccountUserPassword = function (accountID, userId, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'checkAccountUserPassword'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'checkAccountUserPassword'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'checkAccountUserPassword'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/users/{user-id}/password'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'user-id' + '}', String(userId)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new account.\n     * An endpoint for creating a new account.\n     * @param body Details of the account to be created.\n     */\n    RootAdminApi.prototype.createAccount = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'createAccount'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new API key.\n     * An endpoint for creating a new API key.\n     * @param accountID Account ID.\n     * @param body Details of the API key to be created.\n     */\n    RootAdminApi.prototype.createAccountApiKey = function (accountID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'createAccountApiKey'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'createAccountApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/api-keys'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new group.\n     * An endpoint for creating a new group.\n     * @param accountID Account ID.\n     * @param body Details of the group to be created.\n     */\n    RootAdminApi.prototype.createAccountGroup = function (accountID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'createAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'createAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new account template.\n     * An endpoint for creating a new account template.\n     * @param body Details of the account template to be created.\n     */\n    RootAdminApi.prototype.createAccountTemplate = function (body, callback) {\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'createAccountTemplate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/admin/v3/account-templates',\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Create a new user.\n     * An endpoint for creating a new user.\n     * @param accountID Account ID.\n     * @param body A user object with attributes.\n     * @param action Create or invite user.\n     */\n    RootAdminApi.prototype.createAccountUser = function (accountID, body, action, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'createAccountUser'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'createAccountUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (action !== undefined) {\n            queryParameters['action'] = action;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/users'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Delete an existing account.\n     * An endpoint for deleting an account.\n     * @param accountID The ID of the account to be deleted.\n     */\n    RootAdminApi.prototype.deleteAccount = function (accountID, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'deleteAccount'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Delete the API key.\n     * An endpoint for deleting an API key.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be deleted.\n     */\n    RootAdminApi.prototype.deleteAccountApiKey = function (accountID, apiKey, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'deleteAccountApiKey'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'apiKey' missing when calling 'deleteAccountApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/api-keys/{apiKey}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'apiKey' + '}', String(apiKey)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Delete CA certificate by ID.\n     * An endpoint for deleting the CA certificate.\n     * @param accountID Account ID.\n     * @param caCertId The ID of the CA certificate to be deleted.\n     */\n    RootAdminApi.prototype.deleteAccountCertificate = function (accountID, caCertId, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'deleteAccountCertificate'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"caCertId\" is set\n        if (caCertId === null || caCertId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'caCertId' missing when calling 'deleteAccountCertificate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/ca-certificates/{ca-cert-id}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'ca-cert-id' + '}', String(caCertId)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Delete a group.\n     * An endpoint for deleting a group.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group to be deleted.\n     */\n    RootAdminApi.prototype.deleteAccountGroup = function (accountID, groupID, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'deleteAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'deleteAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Delete account template by ID.\n     * An endpoint for deleting a account template by ID.\n     * @param templateId The ID of the account template to be deleted.\n     */\n    RootAdminApi.prototype.deleteAccountTemplate = function (templateId, callback) {\n        // verify required parameter \"templateId\" is set\n        if (templateId === null || templateId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'templateId' missing when calling 'deleteAccountTemplate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/admin/v3/account-templates/{template-id}'.replace('{' + 'template-id' + '}', String(templateId)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Delete a user.\n     * An endpoint for deleting a user.\n     * @param accountID Account ID.\n     * @param userId The ID of the user to be deleted.\n     * @param force A flag indicating that the user is forced to be deleted.\n     */\n    RootAdminApi.prototype.deleteAccountUser = function (accountID, userId, force, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'deleteAccountUser'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'deleteAccountUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (force !== undefined) {\n            queryParameters['force'] = force;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/users/{user-id}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'user-id' + '}', String(userId)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get API key details.\n     * An endpoint for retrieving API key details.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be retrieved.\n     */\n    RootAdminApi.prototype.getAccountApiKey = function (accountID, apiKey, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAccountApiKey'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'apiKey' missing when calling 'getAccountApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/api-keys/{apiKey}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'apiKey' + '}', String(apiKey)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get CA certificate by ID.\n     * An endpoint for retrieving a CA certificate by ID.\n     * @param accountID Account ID.\n     * @param caCertId The ID or name of the CA certificate to be retrieved.\n     */\n    RootAdminApi.prototype.getAccountCertificate = function (accountID, caCertId, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAccountCertificate'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"caCertId\" is set\n        if (caCertId === null || caCertId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'caCertId' missing when calling 'getAccountCertificate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/ca-certificates/{ca-cert-id}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'ca-cert-id' + '}', String(caCertId)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get group information.\n     * An endpoint for getting general information about the group.\n     * @param accountID Account ID.\n     * @param groupID The ID or name of the group to be retrieved.\n     */\n    RootAdminApi.prototype.getAccountGroupSummary = function (accountID, groupID, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAccountGroupSummary'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'getAccountGroupSummary'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get account info.\n     * Returns detailed information about the account.\n     * @param accountID The ID or alias of the account to be fetched.\n     * @param include Comma separated additional data to return. Currently supported: limits, policies\n     */\n    RootAdminApi.prototype.getAccountInfo = function (accountID, include, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAccountInfo'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get limits for account.\n     * Endpoint for retrieving limits by account ID.\n     * @param accountId The ID of the account whose limits to be retrieved.\n     */\n    RootAdminApi.prototype.getAccountLimits = function (accountId, callback) {\n        // verify required parameter \"accountId\" is set\n        if (accountId === null || accountId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountId' missing when calling 'getAccountLimits'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/internal/v1/limits/{account-id}'.replace('{' + 'account-id' + '}', String(accountId)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get account template by ID.\n     * An endpoint for retrieving a account template by ID.\n     * @param templateId The ID of the account template to be retrieved.\n     */\n    RootAdminApi.prototype.getAccountTemplate = function (templateId, callback) {\n        // verify required parameter \"templateId\" is set\n        if (templateId === null || templateId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'templateId' missing when calling 'getAccountTemplate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/admin/v3/account-templates/{template-id}'.replace('{' + 'template-id' + '}', String(templateId)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Details of the user.\n     * An endpoint for retrieving details of the user.\n     * @param accountID Account ID.\n     * @param userId The ID or name of the user to be retrieved.\n     */\n    RootAdminApi.prototype.getAccountUser = function (accountID, userId, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAccountUser'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'getAccountUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/users/{user-id}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'user-id' + '}', String(userId)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all API keys.\n     * An endpoint for retrieving the API keys in an array, optionally filtered by the owner.\n     * @param accountID Account ID.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param filter Filter for the query, for example filter&#x3D;owner%3Duuid.\n     * @param owner Owner name filter.\n     */\n    RootAdminApi.prototype.getAllAccountApiKeys = function (accountID, limit, after, order, include, filter, owner, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAllAccountApiKeys'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        if (filter !== undefined) {\n            queryParameters['filter'] = filter;\n        }\n        if (owner !== undefined) {\n            queryParameters['owner'] = owner;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/api-keys'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all CA certificates.\n     * An endpoint for retrieving CA certificates in an array.\n     * @param accountID Account ID.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param filter Filter for the query, for example filter&#x3D;service%3Dlwm2m,expire%3D180.\n     */\n    RootAdminApi.prototype.getAllAccountCertificates = function (accountID, limit, after, order, include, filter, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAllAccountCertificates'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        if (filter !== undefined) {\n            queryParameters['filter'] = filter;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/ca-certificates'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all group information.\n     * An endpoint for retrieving all group information.\n     * @param accountID Account ID.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    RootAdminApi.prototype.getAllAccountGroups = function (accountID, limit, after, order, include, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAllAccountGroups'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all account templates.\n     * An endpoint for retrieving account templates in an array.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; default ASC.\n     * @param include Comma separated additional data to return. Currently supported: total_count.\n     */\n    RootAdminApi.prototype.getAllAccountTemplates = function (limit, after, order, include, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/admin/v3/account-templates',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all user details.\n     * An endpoint for retrieving details of all users.\n     * @param accountID Account ID.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param filter Filter for the query, for example filter&#x3D;status%3Dactive,status%3Dreset.\n     */\n    RootAdminApi.prototype.getAllAccountUsers = function (accountID, limit, after, order, include, filter, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getAllAccountUsers'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        if (filter !== undefined) {\n            queryParameters['filter'] = filter;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/users'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all accounts.\n     * Returns an array of account objects, optionally filtered by status and tier level.\n     * @param status An optional filter for account status, ENROLLING, ACTIVE, SUSPENDED or DISABLED.\n     * @param tier An optional filter for tier level, must be 0, 1 or omitted.\n     * @param parent An optional filter for parent account ID.\n     * @param limit The number of results to return (2-1000). By default, it is unlimited.\n     * @param after The entity ID to fetch after the given one.\n     * @param include Comma separated additional data to return. Currently supported: total_count,limits\n     * @param filter Filter for the query, for example filter&#x3D;tier%3D1 or status%3DACTIVE.\n     */\n    RootAdminApi.prototype.getAllAccounts = function (status, tier, parent, limit, after, include, filter, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (status !== undefined) {\n            queryParameters['status'] = status;\n        }\n        if (tier !== undefined) {\n            queryParameters['tier'] = tier;\n        }\n        if (parent !== undefined) {\n            queryParameters['parent'] = parent;\n        }\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        if (filter !== undefined) {\n            queryParameters['filter'] = filter;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get all users from all accounts\n     * Endpoint for retrieving user info from all accounts\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     * @param filter Filter for the query, for example filter&#x3D;status%3Dactive,status%3Dreset.\n     */\n    RootAdminApi.prototype.getAllAccountsAllUsers = function (limit, after, order, include, filter, callback) {\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        if (filter !== undefined) {\n            queryParameters['filter'] = filter;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/admin/v3/users',\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get API keys of a group.\n     * An endpoint for listing the API keys of the group with details.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group whose API keys are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    RootAdminApi.prototype.getApiKeysOfAccountGroup = function (accountID, groupID, limit, after, order, include, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getApiKeysOfAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'getApiKeysOfAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}/api-keys'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Get users of a group.\n     * An endpoint for listing users of the group with details.\n     * @param accountID Account ID.\n     * @param groupID The ID of the group whose users are retrieved.\n     * @param limit The number of results to return (2-1000), default is 50.\n     * @param after The entity ID to fetch after the given one.\n     * @param order The order of the records, ASC or DESC; by default ASC\n     * @param include Comma separated additional data to return. Currently supported: total_count\n     */\n    RootAdminApi.prototype.getUsersOfAccountGroup = function (accountID, groupID, limit, after, order, include, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'getUsersOfAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'getUsersOfAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (limit !== undefined) {\n            queryParameters['limit'] = limit;\n        }\n        if (after !== undefined) {\n            queryParameters['after'] = after;\n        }\n        if (order !== undefined) {\n            queryParameters['order'] = order;\n        }\n        if (include !== undefined) {\n            queryParameters['include'] = include;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}/users'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'GET',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Manage an account.\n     * This endpoint upgrades the account from free tier to commercial, sets the new status.\n     * @param accountID The ID of the account to be updated.\n     * @param status New status of the account; ACTIVE, SUSPENDED or DISABLED\n     * @param tier New tier level of the account; &#39;0&#39;: free tier, &#39;1&#39;: commercial account. Other values are reserved for the future.\n     * @param isProvisioningAllowed A flag indicating whether Factory Tool is permitted to be downloaded or not, true or false.\n     */\n    RootAdminApi.prototype.manageAccount = function (accountID, status, tier, isProvisioningAllowed, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'manageAccount'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        if (status !== undefined) {\n            queryParameters['status'] = status;\n        }\n        if (tier !== undefined) {\n            queryParameters['tier'] = tier;\n        }\n        if (isProvisioningAllowed !== undefined) {\n            queryParameters['isProvisioningAllowed'] = isProvisioningAllowed;\n        }\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/manage'.replace('{' + 'accountID' + '}', String(accountID)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Remove API keys from a group.\n     * An endpoint for removing API keys from groups.\n     * @param accountID Account ID.\n     * @param groupID A list of API keys to be removed from the group.\n     * @param body\n     */\n    RootAdminApi.prototype.removeApiKeysFromAccountGroup = function (accountID, groupID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'removeApiKeysFromAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'removeApiKeysFromAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}/api-keys'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Remove users from a group.\n     * An endpoint for removing users from groups.\n     * @param accountID Account ID.\n     * @param groupID\n     * @param body\n     */\n    RootAdminApi.prototype.removeUsersFromAccountGroup = function (accountID, groupID, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'removeUsersFromAccountGroup'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"groupID\" is set\n        if (groupID === null || groupID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'groupID' missing when calling 'removeUsersFromAccountGroup'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/policy-groups/{groupID}/users'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'groupID' + '}', String(groupID)),\n            method: 'DELETE',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Reset the secret key.\n     * An endpoint for resetting the secret key of the API key.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be reset.\n     */\n    RootAdminApi.prototype.resetAccountApiKeySecret = function (accountID, apiKey, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'resetAccountApiKeySecret'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'apiKey' missing when calling 'resetAccountApiKeySecret'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/api-keys/{apiKey}/reset-secret'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'apiKey' + '}', String(apiKey)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Reset the user password.\n     * An endpoint for resetting the user password. The new password will visible in the response.\n     * @param accountID Account ID.\n     * @param userId The ID of the user whose password is reset.\n     */\n    RootAdminApi.prototype.resetAccountUserPassword = function (accountID, userId, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'resetAccountUserPassword'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'resetAccountUserPassword'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/users/{user-id}/reset-password'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'user-id' + '}', String(userId)),\n            method: 'POST',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n        }, callback);\n    };\n    /**\n     * Update API key details.\n     * An endpoint for updating API key details.\n     * @param accountID Account ID.\n     * @param apiKey The ID of the API key to be updated.\n     * @param body New API key attributes to be stored.\n     */\n    RootAdminApi.prototype.updateAccountApiKey = function (accountID, apiKey, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'updateAccountApiKey'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"apiKey\" is set\n        if (apiKey === null || apiKey === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'apiKey' missing when calling 'updateAccountApiKey'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateAccountApiKey'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/api-keys/{apiKey}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'apiKey' + '}', String(apiKey)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update CA certificate.\n     * An endpoint for updating existing CA certificates.\n     * @param accountID Account ID.\n     * @param caCertId The ID of the CA certificate to be updated.\n     * @param body A CA certificate object with attributes.\n     */\n    RootAdminApi.prototype.updateAccountCertificate = function (accountID, caCertId, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'updateAccountCertificate'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"caCertId\" is set\n        if (caCertId === null || caCertId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'caCertId' missing when calling 'updateAccountCertificate'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateAccountCertificate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/ca-certificates/{ca-cert-id}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'ca-cert-id' + '}', String(caCertId)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update an existing account template.\n     * An endpoint for updating an existing account template.\n     * @param templateId The ID of the account template to be updated.\n     * @param body Details of the account template to be updated.\n     */\n    RootAdminApi.prototype.updateAccountTemplate = function (templateId, body, callback) {\n        // verify required parameter \"templateId\" is set\n        if (templateId === null || templateId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'templateId' missing when calling 'updateAccountTemplate'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateAccountTemplate'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/admin/v3/account-templates/{template-id}'.replace('{' + 'template-id' + '}', String(templateId)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    /**\n     * Update user details.\n     * An endpoint for updating user details.\n     * @param accountID Account ID.\n     * @param userId The ID of the user to be updated.\n     * @param body A rootadmin user object with attributes.\n     */\n    RootAdminApi.prototype.updateAccountUser = function (accountID, userId, body, callback) {\n        // verify required parameter \"accountID\" is set\n        if (accountID === null || accountID === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'accountID' missing when calling 'updateAccountUser'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"userId\" is set\n        if (userId === null || userId === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'userId' missing when calling 'updateAccountUser'.\"));\n            }\n            return;\n        }\n        // verify required parameter \"body\" is set\n        if (body === null || body === undefined) {\n            if (callback) {\n                callback(new Error(\"Required parameter 'body' missing when calling 'updateAccountUser'.\"));\n            }\n            return;\n        }\n        var headerParams = {};\n        var queryParameters = {};\n        var useFormData = false;\n        var formParams = {};\n        return this.request({\n            url: '/v3/accounts/{accountID}/users/{user-id}'.replace('{' + 'accountID' + '}', String(accountID)).replace('{' + 'user-id' + '}', String(userId)),\n            method: 'PUT',\n            headers: headerParams,\n            query: queryParameters,\n            useFormData: useFormData,\n            formParams: formParams,\n            json: true,\n            body: body,\n        }, callback);\n    };\n    return RootAdminApi;\n}(apiBase_1.ApiBase));\nexports.RootAdminApi = RootAdminApi;\n\n},{\"../common/apiBase\":9}],2:[function(require,module,exports){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\nvar functions_1 = require(\"../common/functions\");\n/*\n * Account\n */\nvar Account = (function () {\n    function Account(options, _api) {\n        this._api = _api;\n        for (var key in options) {\n            this[key] = options[key];\n        }\n    }\n    Account.map = function (from, api) {\n        var type = {\n            addressLine1: from.address_line1,\n            addressLine2: from.address_line2,\n            aliases: from.aliases,\n            city: from.city,\n            company: from.company,\n            contact: from.contact,\n            country: from.country,\n            createdAt: from.created_at,\n            displayName: from.display_name,\n            email: from.email,\n            id: from.id,\n            limits: from.limits,\n            parentId: from.parentID,\n            phoneNumber: from.phone_number,\n            postcode: from.postal_code,\n            provisioningAllowed: from.is_provisioning_allowed,\n            state: from.state,\n            status: from.status,\n            templateId: from.template_id,\n            tier: from.tier,\n            upgradedAt: from.upgraded_at\n        };\n        return new Account(type, api);\n    };\n    Account.reverseMap = function (from) {\n        return {\n            address_line2: from.addressLine2,\n            city: from.city,\n            address_line1: from.addressLine1,\n            display_name: from.displayName,\n            country: from.country,\n            company: from.company,\n            state: from.state,\n            contact: from.contact,\n            postal_code: from.postcode,\n            parentID: from.parentId,\n            phone_number: from.phoneNumber,\n            email: from.email,\n            aliases: from.aliases\n        };\n    };\n    Account.prototype.update = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.updateAccountDetails(options, done);\n        }, callback);\n    };\n    return Account;\n}());\nexports.Account = Account;\n\n},{\"../common/functions\":10}],3:[function(require,module,exports){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\nvar functions_1 = require(\"../common/functions\");\n/*\n * API Key\n */\nvar ApiKey = (function () {\n    function ApiKey(options, _api) {\n        this._api = _api;\n        for (var key in options) {\n            this[key] = options[key];\n        }\n    }\n    ApiKey.map = function (from, api) {\n        var type = {\n            createdAt: from.created_at,\n            groups: from.groups,\n            id: from.id,\n            key: from.key,\n            lastLoginTime: from.last_login_time,\n            name: from.name,\n            owner: from.owner,\n            status: from.status\n        };\n        return new ApiKey(type, api);\n    };\n    ApiKey.prototype.listGroups = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            // AccessApi.listGroups should accept a filter which would be less intense to use\n            _this._api.listGroups(function (error, groups) {\n                if (error)\n                    return done(error);\n                var userGroups = groups.filter(function (group) {\n                    return _this.groups.indexOf(group.id) > -1;\n                });\n                done(null, userGroups);\n            });\n        }, callback);\n    };\n    ApiKey.prototype.update = function (options, callback) {\n        var _this = this;\n        options[\"id\"] = this.id;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.updateApiKey(options, done);\n        }, callback);\n    };\n    ApiKey.prototype.delete = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.deleteApiKey(_this, done);\n        }, callback);\n    };\n    return ApiKey;\n}());\nexports.ApiKey = ApiKey;\n\n},{\"../common/functions\":10}],4:[function(require,module,exports){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\nvar functions_1 = require(\"../common/functions\");\n/*\n * Certificate\n */\nvar Certificate = (function () {\n    function Certificate(options, _api) {\n        this._api = _api;\n        for (var key in options) {\n            this[key] = options[key];\n        }\n    }\n    Certificate.map = function (from, api) {\n        var type = {\n            accountId: from.account_id,\n            createdAt: from.created_at,\n            data: from.cert_data,\n            id: from.id,\n            issuer: from.issuer,\n            name: from.name,\n            service: from.service,\n            subject: from.subject,\n            validity: from.validity\n        };\n        return new Certificate(type, api);\n    };\n    Certificate.reverseMap = function (from) {\n        return {\n            cert_data: from.certificateData,\n            name: from.name,\n            service: from.service,\n            signature: from.signature\n        };\n    };\n    Certificate.prototype.update = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.updateCertificate({\n                id: _this.id,\n                name: options.name,\n                certificateData: options.certificateData,\n                service: options.service,\n                signature: options.signature\n            }, done);\n        }, callback);\n    };\n    Certificate.prototype.delete = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.deleteCertificate(_this, done);\n        }, callback);\n    };\n    return Certificate;\n}());\nexports.Certificate = Certificate;\n\n},{\"../common/functions\":10}],5:[function(require,module,exports){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\nvar iam_1 = require(\"../_api/iam\");\nvar Endpoints = (function () {\n    function Endpoints(options) {\n        this.access = new iam_1.DefaultApi(options.apiKey, options.host);\n        this.developer = new iam_1.DeveloperApi(options.apiKey, options.host);\n        this.admin = new iam_1.AccountAdminApi(options.apiKey, options.host);\n    }\n    return Endpoints;\n}());\nexports.Endpoints = Endpoints;\n\n},{\"../_api/iam\":1}],6:[function(require,module,exports){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\n/*\n * Group\n */\nvar Group = (function () {\n    function Group(options) {\n        for (var key in options) {\n            this[key] = options[key];\n        }\n    }\n    Group.map = function (from) {\n        var type = {\n            apiKeyCount: from.apiKeyCount,\n            createdAt: from.created_at,\n            creationTime: from.creationTime,\n            id: from.id,\n            lastUpdateTime: from.lastUpdateTime,\n            name: from.name,\n            userCount: from.userCount\n        };\n        return new Group(type);\n    };\n    return Group;\n}());\nexports.Group = Group;\n\n},{}],7:[function(require,module,exports){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\nvar functions_1 = require(\"../common/functions\");\nvar endpoints_1 = require(\"./endpoints\");\nvar account_1 = require(\"./account\");\nvar certificate_1 = require(\"./certificate\");\nvar user_1 = require(\"./user\");\nvar apiKey_1 = require(\"./apiKey\");\nvar group_1 = require(\"./group\");\n/**\n * ## Access API\n *\n * This API is initialized with [ConnectionOptions](../interfaces/connectionoptions.html).\n *\n * To create an instance of this API in [Node.js](https://nodejs.org):\n *\n * ```JavaScript\n * var mbed = require(\"mbed-cloud-sdk\");\n *\n * var access = new mbed.AccessApi({\n *     apiKey: \"<mbed Cloud API Key>\"\n * });\n * ```\n *\n * To create an instance of this API in the browser:\n *\n * ```html\n * <script src=\"<mbed-cloud-sdk>/bundles/devices.min.js\"></script>\n *\n * <script>\n *     var access = new mbed.AccessApi({\n *         apiKey: \"<mbed Cloud API Key>\"\n *     });\n * </script>\n * ```\n */\nvar AccessApi = (function () {\n    /**\n    * @param options connection options\n    */\n    function AccessApi(options) {\n        this._endpoints = new endpoints_1.Endpoints(options);\n    }\n    AccessApi.prototype.getAccountDetails = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.developer.getMyAccountInfo(\"limits\", function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, account_1.Account.map(data, _this));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.updateAccountDetails = function (options, callback) {\n        var _this = this;\n        var account = account_1.Account.reverseMap(options);\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.updateMyAccount(account, function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, account_1.Account.map(data, _this));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.listApiKeys = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include, attributes = _a.attributes;\n        var owner = attributes ? attributes[\"owner\"] : null;\n        var filter = functions_1.encodeAttributes(attributes);\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.developer.getAllApiKeys(limit, after, order, functions_1.encodeInclude(include), filter, owner, function (error, data) {\n                if (error)\n                    return done(error);\n                var keys = data.data.map(function (key) {\n                    return apiKey_1.ApiKey.map(key, _this);\n                });\n                done(null, functions_1.mapListResponse(data, keys));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.getApiKey = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        return functions_1.asyncStyle(function (done) {\n            if (options.id) {\n                _this._endpoints.developer.getApiKey(options.id, function (error, data) {\n                    if (error)\n                        return done(error);\n                    done(null, apiKey_1.ApiKey.map(data, _this));\n                });\n            }\n            else {\n                _this._endpoints.developer.getMyApiKey(function (error, data) {\n                    if (error)\n                        return done(error);\n                    done(null, apiKey_1.ApiKey.map(data, _this));\n                });\n            }\n        }, callback);\n    };\n    AccessApi.prototype.addApiKey = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.developer.createApiKey(options, function (error, data) {\n                if (error)\n                    return done(error);\n                var key = apiKey_1.ApiKey.map(data, _this);\n                done(null, key);\n            });\n        }, callback);\n    };\n    AccessApi.prototype.updateApiKey = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            if (options.id) {\n                _this._endpoints.developer.updateApiKey(options.id, options, function (error, data) {\n                    if (error)\n                        return done(error);\n                    done(null, apiKey_1.ApiKey.map(data, _this));\n                });\n            }\n            else {\n                _this._endpoints.developer.updateMyApiKey(options, function (error, data) {\n                    if (error)\n                        return done(error);\n                    done(null, apiKey_1.ApiKey.map(data, _this));\n                });\n            }\n        }, callback);\n    };\n    AccessApi.prototype.deleteApiKey = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.developer.deleteApiKey(options.id, function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, data);\n            });\n        }, callback);\n    };\n    AccessApi.prototype.listCertificates = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include, attributes = _a.attributes;\n        var filter = functions_1.encodeAttributes(attributes);\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.getAllCertificates(limit, after, order, functions_1.encodeInclude(include), filter, function (error, data) {\n                if (error)\n                    return done(error);\n                var certificates = data.data.map(function (certificate) {\n                    return certificate_1.Certificate.map(certificate, _this);\n                });\n                done(null, functions_1.mapListResponse(data, certificates));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.getCertificate = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.getCertificate(options.id, function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, certificate_1.Certificate.map(data, _this));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.addCertificate = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.addCertificate(certificate_1.Certificate.reverseMap(options), function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, certificate_1.Certificate.map(data, _this));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.updateCertificate = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.updateCertificate(options.id, certificate_1.Certificate.reverseMap(options), function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, certificate_1.Certificate.map(data, _this));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.deleteCertificate = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.deleteCertificate(options.id, function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, data);\n            });\n        }, callback);\n    };\n    AccessApi.prototype.listUsers = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include, attributes = _a.attributes;\n        var filter = functions_1.encodeAttributes(attributes);\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.getAllUsers(limit, after, order, functions_1.encodeInclude(include), filter, function (error, data) {\n                if (error)\n                    return done(error);\n                var users = data.data.map(function (user) {\n                    return user_1.User.map(user, _this);\n                });\n                done(null, functions_1.mapListResponse(data, users));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.getUser = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.getUser(options.id, function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, user_1.User.map(data, _this));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.addUser = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            var apiUser = user_1.User.reverseMap(options);\n            _this._endpoints.admin.createUser(apiUser, \"create\", function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, user_1.User.map(data, _this));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.updateUser = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            var apiUser = user_1.User.reverseMap(options);\n            _this._endpoints.admin.updateUser(options.id, apiUser, function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, user_1.User.map(data, _this));\n            });\n        }, callback);\n    };\n    AccessApi.prototype.deleteUser = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.admin.deleteUser(options.id, options.force, function (error, data) {\n                if (error)\n                    return done(error);\n                done(null, data);\n            });\n        }, callback);\n    };\n    AccessApi.prototype.listGroups = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        var _a = options, limit = _a.limit, after = _a.after, order = _a.order, include = _a.include;\n        return functions_1.asyncStyle(function (done) {\n            _this._endpoints.developer.getAllGroups(limit, after, order, functions_1.encodeInclude(include), function (error, data) {\n                if (error)\n                    return done(error);\n                var groups = data.data.map(function (user) {\n                    return group_1.Group.map(user);\n                });\n                done(null, functions_1.mapListResponse(data, groups));\n            });\n        }, callback);\n    };\n    return AccessApi;\n}());\nexports.AccessApi = AccessApi;\n\n},{\"../common/functions\":10,\"./account\":2,\"./apiKey\":3,\"./certificate\":4,\"./endpoints\":5,\"./group\":6,\"./user\":8}],8:[function(require,module,exports){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\nvar functions_1 = require(\"../common/functions\");\n/*\n * User\n */\nvar User = (function () {\n    function User(options, _api) {\n        this._api = _api;\n        for (var key in options) {\n            this[key] = options[key];\n        }\n    }\n    User.map = function (from, api) {\n        var type = {\n            accountId: from.account_id,\n            address: from.address,\n            createdAt: from.created_at,\n            creationTime: from.creation_time,\n            email: from.email,\n            emailVerified: from.email_verified,\n            fullName: from.full_name,\n            groups: from.groups,\n            termsAccepted: from.is_gtc_accepted,\n            id: from.id,\n            lastLoginTime: from.last_login_time,\n            marketingAccepted: from.is_marketing_accepted,\n            password: from.password,\n            passwordChangedTime: from.password_changed_time,\n            phoneNumber: from.phone_number,\n            status: from.status,\n            username: from.username\n        };\n        return new User(type, api);\n    };\n    User.reverseMap = function (from) {\n        return {\n            username: from.username,\n            phone_number: from.phoneNumber,\n            is_marketing_accepted: from.marketingAccepted,\n            groups: from.groups,\n            is_gtc_accepted: from.termsAccepted,\n            full_name: from.fullName,\n            address: from.address,\n            password: from.password,\n            email: from.email\n        };\n    };\n    User.prototype.update = function (options, callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.updateUser({\n                id: _this.id,\n                address: options.address,\n                email: options.email,\n                fullName: options.fullName,\n                marketingAccepted: options.marketingAccepted,\n                password: options.password,\n                phoneNumber: options.phoneNumber,\n                termsAccepted: options.termsAccepted,\n                username: options.username\n            }, done);\n        }, callback);\n    };\n    User.prototype.listGroups = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            // AccessApi.listGroups should accept a filter which would be less intense to use\n            _this._api.listGroups(function (error, groups) {\n                if (error)\n                    return done(error);\n                var userGroups = groups.filter(function (group) {\n                    return _this.groups.indexOf(group.id) > -1;\n                });\n                done(null, userGroups);\n            });\n        }, callback);\n    };\n    User.prototype.listApiKeys = function (options, callback) {\n        var _this = this;\n        options = options || {};\n        if (typeof options === \"function\") {\n            callback = options;\n            options = {};\n        }\n        var attributes = options.attributes || {};\n        attributes[\"owner\"] = this.id;\n        options.attributes = attributes;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.listApiKeys(options, done);\n        }, callback);\n    };\n    User.prototype.delete = function (callback) {\n        var _this = this;\n        return functions_1.asyncStyle(function (done) {\n            _this._api.deleteUser(_this, done);\n        }, callback);\n    };\n    return User;\n}());\nexports.User = User;\n\n},{\"../common/functions\":10}],9:[function(require,module,exports){\n(function (Buffer){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\nvar DEFAULT_HOST = \"http://api.mbedcloud.com\";\nvar superagent = require(\"superagent\");\nvar ApiBase = (function () {\n    function ApiBase(apiKey, host) {\n        if (host === void 0) { host = DEFAULT_HOST; }\n        this.host = host;\n        this.apiKey = \"\";\n        if (apiKey.substr(0, 6).toLowerCase() !== \"bearer\")\n            apiKey = \"Bearer \" + apiKey;\n        this.apiKey = apiKey;\n    }\n    ApiBase.prototype.request = function (options, callback) {\n        // Normalize slashes in url\n        var url = options.url.replace(/([:])?\\/+/g, function ($0, $1) {\n            return $1 ? $0 : \"/\";\n        });\n        var request = superagent(options.method, this.host + url);\n        // set query parameters\n        request.query(ApiBase.normalizeParams(options.query));\n        // set header parameters\n        options.headers[\"Authorization\"] = this.apiKey;\n        request.set(ApiBase.normalizeParams(options.headers));\n        // set request timeout\n        request.timeout(60000);\n        if (options.json) {\n            request.type(\"application/json\");\n            request.accept(\"application/json\");\n        }\n        if (Object.keys(options.formParams).length > 0) {\n            if (options.useFormData) {\n                request.type(\"multipart/form-data\");\n                var formParams = ApiBase.normalizeParams(options.formParams);\n                for (var key in formParams) {\n                    if (formParams.hasOwnProperty(key)) {\n                        if (ApiBase.isFileParam(formParams[key])) {\n                            // file field\n                            request.attach(key, formParams[key]);\n                        }\n                        else {\n                            request.field(key, formParams[key]);\n                        }\n                    }\n                }\n            }\n            else {\n                request.type(\"application/x-www-form-urlencoded\");\n                request.send(ApiBase.normalizeParams(options.formParams));\n            }\n        }\n        else if (options.body) {\n            request.send(options.body);\n        }\n        request.end(function (error, response) {\n            if (callback) {\n                var data = null;\n                if (response && !error) {\n                    data = response.body || response.text;\n                }\n                callback(error, data, response);\n            }\n        });\n        return request;\n    };\n    /**\n    * Normalizes parameter values:\n    * <ul>\n    * <li>remove nils</li>\n    * <li>keep files and arrays</li>\n    * <li>format to string with `paramToString` for other cases</li>\n    * </ul>\n    * @param {Object.<String, Object>} params The parameters as object properties.\n    * @returns {Object.<String, Object>} normalized parameters.\n    */\n    ApiBase.normalizeParams = function (params) {\n        var newParams = {};\n        for (var key in params) {\n            if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n                var value = params[key];\n                if (this.isFileParam(value) || Array.isArray(value)) {\n                    newParams[key] = value;\n                }\n                else {\n                    newParams[key] = ApiBase.paramToString(value);\n                }\n            }\n        }\n        return newParams;\n    };\n    /**\n    * Checks whether the given parameter value represents file-like content.\n    * @param param The parameter to check.\n    * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n    */\n    ApiBase.isFileParam = function (param) {\n        // fs.ReadStream in Node.js (but not in runtime like browserify)\n        if (typeof window === 'undefined' &&\n            typeof require === 'function' &&\n            require('fs') &&\n            param instanceof require('fs').ReadStream) {\n            return true;\n        }\n        // Buffer in Node.js\n        if (typeof Buffer === 'function' && param instanceof Buffer) {\n            return true;\n        }\n        // Blob in browser\n        if (typeof Blob === 'function' && param instanceof Blob) {\n            return true;\n        }\n        // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n        if (typeof File === 'function' && param instanceof File) {\n            return true;\n        }\n        return false;\n    };\n    /**\n    * Returns a string representation for an actual parameter.\n    * @param param The actual parameter.\n    * @returns {String} The string representation of <code>param</code>.\n    */\n    ApiBase.paramToString = function (param) {\n        if (param == undefined || param == null) {\n            return '';\n        }\n        if (param instanceof Date) {\n            return param.toJSON();\n        }\n        return param.toString();\n    };\n    return ApiBase;\n}());\nexports.ApiBase = ApiBase;\n\n}).call(this,require(\"buffer\").Buffer)\n},{\"buffer\":11,\"fs\":11,\"superagent\":12}],10:[function(require,module,exports){\n(function (Buffer){\n/*\n* mbed Cloud JavaScript SDK\n* Copyright ARM Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\n// Inspired by https://github.com/sonnyp/polygoat\nfunction asyncStyle(asyncFn, callbackFn) {\n    if (callbackFn)\n        asyncFn(callbackFn);\n    else {\n        return new Promise(function (resolve, reject) {\n            asyncFn(function (error, response) {\n                if (error)\n                    reject(error);\n                else\n                    resolve(response);\n            });\n        });\n    }\n}\nexports.asyncStyle = asyncStyle;\nfunction decodeBase64(payload, contentType) {\n    var result = \"\";\n    if (typeof atob === \"function\") {\n        result = atob(payload);\n    }\n    else {\n        result = new Buffer(payload, \"base64\").toString(\"utf8\");\n    }\n    if (contentType.indexOf(\"json\") > -1) {\n        result = JSON.parse(result);\n    }\n    return result;\n}\nexports.decodeBase64 = decodeBase64;\nfunction encodeInclude(include) {\n    if (!include || !include.length)\n        return null;\n    return include.map(camelToSnake).join(\",\");\n}\nexports.encodeInclude = encodeInclude;\nfunction snakeToCamel(snake) {\n    return snake.replace(/(\\_\\w)/g, function (match) {\n        return match[1].toUpperCase();\n    });\n}\nexports.snakeToCamel = snakeToCamel;\nfunction camelToSnake(camel) {\n    return camel.replace(/([A-Z]+)/g, function (match) {\n        return \"-\" + match.toLowerCase();\n    });\n}\nexports.camelToSnake = camelToSnake;\nfunction mapListResponse(from, data) {\n    var to = {};\n    to.after = from.after;\n    to.hasMore = from.has_more;\n    to.limit = from.limit;\n    to.order = from.order;\n    to.totalCount = from.total_count;\n    to.data = data;\n    return to;\n}\nexports.mapListResponse = mapListResponse;\nfunction encodeAttributes(from, prefix) {\n    if (prefix === void 0) { prefix = \"\"; }\n    if (!from)\n        return \"\";\n    return Object.keys(from).map(function (key) {\n        return \"\" + prefix + key + \"=\" + from[key];\n    }).join(\"&\");\n}\nexports.encodeAttributes = encodeAttributes;\nfunction decodeAttributes(from, prefix) {\n    if (prefix === void 0) { prefix = \"\"; }\n    var to = { match: {}, noMatch: {} };\n    var re = new RegExp(\"^(\" + prefix + \")?(.+)=(.+)$\");\n    from = decodeURIComponent(from);\n    from.split(\"&\").forEach(function (attrib) {\n        var match = attrib.match(re);\n        if (match) {\n            if (match[1])\n                to.match[match[2]] = match[3];\n            else\n                to.noMatch[match[2]] = match[3];\n        }\n    });\n    return to;\n}\nexports.decodeAttributes = decodeAttributes;\nfunction encodeFilter(from, customPrefix) {\n    var filter = encodeAttributes(from.attributes);\n    var custom = encodeAttributes(from.customAttributes, customPrefix);\n    if (custom) {\n        if (filter)\n            filter += \"&\";\n        filter += custom;\n    }\n    return filter;\n}\nexports.encodeFilter = encodeFilter;\n\n}).call(this,require(\"buffer\").Buffer)\n},{\"buffer\":11}],11:[function(require,module,exports){\n\n},{}],12:[function(require,module,exports){\n/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar isFunction = require('./is-function');\nvar ResponseBase = require('./response-base');\nvar shouldRetry = require('./should-retry');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req) {\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n * Add query-string `val`.\n *\n * Examples:\n *\n *   request.get('/shoes')\n *     .query('size=10')\n *     .query({ color: 'blue' })\n *\n * @param {Object|String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (this._data) {\n    throw Error(\"superagent can't mix .send() and .attach()\");\n  }\n\n  this._getFormData().append(field, file, options || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  // console.log(this._retries, this._maxRetries)\n  if (this._maxRetries && this._retries++ < this._maxRetries && shouldRetry(err, res)) {\n    return this._retry();\n  }\n\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    if (this._maxRetries) err.retries = this._retries - 1;\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if (isFunction(this._sort)) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // querystring\n  this._appendQueryString();\n\n  return this._end();\n};\n\nRequest.prototype._end = function() {\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  this._setTimeouts();\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // initiate request\n  try {\n    if (this.username && this.password) {\n      xhr.open(this.method, this.url, true, this.username, this.password);\n    } else {\n      xhr.open(this.method, this.url, true);\n    }\n  } catch (err) {\n    // see #1149\n    return this.callback(err);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, data, fn){\n  var req = request('DELETE', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n},{\"./is-function\":13,\"./is-object\":14,\"./request-base\":15,\"./response-base\":16,\"./should-retry\":17,\"emitter\":19}],13:[function(require,module,exports){\n/**\n * Check if `fn` is a function.\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api private\n */\nvar isObject = require('./is-object');\n\nfunction isFunction(fn) {\n  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n  return tag === '[object Function]';\n}\n\nmodule.exports = isFunction;\n\n},{\"./is-object\":14}],14:[function(require,module,exports){\n/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n\n},{}],15:[function(require,module,exports){\n/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  delete this._timer;\n  delete this._responseTimeoutTimer;\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, read, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  if ('undefined' !== typeof options.deadline) {\n    this._timeout = options.deadline;\n  }\n  if ('undefined' !== typeof options.response) {\n    this._responseTimeout = options.response;\n  }\n  return this;\n};\n\n/**\n * Set number of retry attempts on error.\n *\n * Failed requests will be retried 'count' times if timeout or err.code >= 500.\n *\n * @param {Number} count\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.retry = function retry(count){\n  // Default to 1 if no count passed or true\n  if (arguments.length === 0 || count === true) count = 1;\n  if (count <= 0) count = 0;\n  this._maxRetries = count;\n  this._retries = 0;\n  return this;\n};\n\n/**\n * Retry request\n *\n * @return {Request} for chaining\n * @api private\n */\n\nRequestBase.prototype._retry = function() {\n  this.clearTimeout();\n\n  // node\n  if (this.req) {\n    this.req = null;\n    this.req = this.request();\n  }\n\n  this._aborted = false;\n  this.timedout = false;\n\n  return this._end();\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} [reject]\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (this._data) {\n    console.error(\".field() can't be used if .send() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (this._formData) {\n    console.error(\".send() can't be used if .attach() or .field() is used. Please use only .send() or only .field() & .attach()\");\n  }\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout);\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout);\n    }, this._responseTimeout);\n  }\n}\n\n},{\"./is-object\":14}],16:[function(require,module,exports){\n\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n\n},{\"./utils\":18}],17:[function(require,module,exports){\nvar ERROR_CODES = [\n  'ECONNRESET',\n  'ETIMEDOUT',\n  'EADDRINFO',\n  'ESOCKETTIMEDOUT'\n];\n\n/**\n * Determine if a request should be retried.\n * (Borrowed from segmentio/superagent-retry)\n *\n * @param {Error} err\n * @param {Response} [res]\n * @returns {Boolean}\n */\nmodule.exports = function shouldRetry(err, res) {\n  if (err && err.code && ~ERROR_CODES.indexOf(err.code)) return true;\n  if (res && res.status && res.status >= 500) return true;\n  // Superagent timeout\n  if (err && 'timeout' in err && err.code == 'ECONNABORTED') return true;\n  return false;\n};\n},{}],18:[function(require,module,exports){\n\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n},{}],19:[function(require,module,exports){\n\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n\n},{}]},{},[7])(7)\n});"]}