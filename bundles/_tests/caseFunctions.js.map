{"version":3,"sources":["../../src/_tests/caseFunctions.ts"],"names":["Object","defineProperty","exports","value","_a","intern","getInterface","suite","test","assert","getPlugin","functions_1","require","result","snakeToCamel","strictEqual","camelToSnake"],"mappings":"udAAA;;;;;;;;;;;;;;;;AAiBMA,OAAAC,eAAAC,EAAA,cAAEC,OAAK,GACL,IAAAC,GAAAC,OAAAC,aAAA,OAAAC,EAAoCH,EAAAG,MAAAC,EAAAJ,EAAAI,KAE5CC,EAAAJ,OAAAK,UAAA,QAAAD,OAEAE,EAAMC,EAAgB,yBAElB,eAAK,aACD,kBAAe,WACf,GACAC,GAAOF,EAAkBG,aADV,oBAEhBL,GAAAM,YAAAF,EAAA,sBAGC,gBAAe,WACf,GACAA,GAAOF,EAAkBG,aADV,qBAEhBL,GAAAM,YAAAF,EAAA,sBAGC,cAAe,WACf,GACAA,GAAOF,EAAkBG,aADV,qBAEhBL,GAAAM,YAAAF,EAAA,uBAGC,yBAAe,WACf,GACAA,GAAOF,EAAkBG,aADV,qBAEhBL,GAAAM,YAAAF,EAAA,sBAGC,qBAAe,WACf,GACAA,GAAOF,EAAkBG,aADV,oBAEhBL,GAAAM,YAAAF,EAAA,wBAKH,eAAK,aACD,kBAAe,WACf,GACAA,GAAOF,EAAkBK,aADV,iBAEhBP,GAAAM,YAAAF,EAAA,yBAGC,sBAAe,WACf,GACAA,GAAOF,EAAkBK,aADV,iBAEhBP,GAAAM,YAAAF,EAAA,0BAGC,oBAAe,WACf,GACAA,GAAOF,EAAkBK,aADV,iBAEhBP,GAAAM,YAAAF,EAAA,0BAGC,yBAAe,WACf,GACAA,GAAOF,EAAkBK,aADV,iBAEhBP,GAAAM,YAAAF,EAAA,0BAGC,cAAe,WACf,GACAA,GAAOF,EAAkBK,aADV,mBAEhBP,GAAAM,YAAAF,EAAA","file":"caseFunctions.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nconst { suite, test } = intern.getInterface(\"tdd\");\nconst { assert } = intern.getPlugin(\"chai\");\n\nimport { snakeToCamel, camelToSnake } from \"../common/functions\";\n\nsuite(\"snakeToCamel\", () => {\n\n    test(\"should be camel\", () => {\n        const string = \"im_really_a_camel\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"imReallyACamel\");\n    });\n\n    test(\"begins with _\", () => {\n        const string = \"_im_really_a_camel\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"ImReallyACamel\");\n    });\n\n    test(\"ends with _\", () => {\n        const string = \"im_really_a_camel_\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"imReallyACamel_\");\n    });\n\n    test(\"creates capital at end\", () => {\n        const string = \"im_really_a_came_l\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"imReallyACameL\");\n    });\n\n    test(\"preserves capitals\", () => {\n        const string = \"iM_reAlly_a_caMel\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"iMReAllyACaMel\");\n    });\n});\n\nsuite(\"camelToSnake\", () => {\n\n    test(\"should be snake\", () => {\n        const string = \"imReallyASnake\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"im_really_a_snake\");\n    });\n\n    test(\"begins with capital\", () => {\n        const string = \"ImReallyASnake\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"_im_really_a_snake\");\n    });\n\n    test(\"ends with capital\", () => {\n        const string = \"imReallyASnakE\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"im_really_a_snak_e\");\n    });\n\n    test(\"creates _ at beginning\", () => {\n        const string = \"ImReallyASnake\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"_im_really_a_snake\");\n    });\n\n    test(\"preserves _\", () => {\n        const string = \"imRe_allyA_Snake\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"im_re_ally_a__snake\");\n    });\n});\n"],"sourceRoot":"../../lib"}