/**
 * Deployment Service API
 * This is the API Documentation for the mbed deployment service which is part of the update service.
 *
 * OpenAPI spec version: 0.1
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.DeploymentServiceApi) {
      root.DeploymentServiceApi = {};
    }
    root.DeploymentServiceApi.UpdateCampaignSerializer = factory(root.DeploymentServiceApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The UpdateCampaignSerializer model module.
   * @module model/UpdateCampaignSerializer
   * @version 0.1
   */

  /**
   * Constructs a new <code>UpdateCampaignSerializer</code>.
   * @alias module:model/UpdateCampaignSerializer
   * @class
   * @param description {String} An optional description of the campaign
   * @param state {module:model/UpdateCampaignSerializer.StateEnum} The state of the campaign
   * @param updatingUserId {String} The updating IAM user ID
   * @param createdAt {Date} The time the object was created
   * @param _object {String} The API resource entity
   * @param rootManifestId {String} 
   * @param campaignId {String} DEPRECATED: The ID of the campaign
   * @param updatingAccountId {String} The updating account ID
   * @param updatedAt {Date} The time the object was updated
   * @param when {Date} The timestamp at which update campaign scheduled to start
   * @param finished {Date} The timestamp when the update campaign finished
   * @param etag {Date} The entity instance signature
   * @param rootManifestUrl {String} 
   * @param updatingApiKey {String} The gateway client API key
   * @param id {String} The ID of the campaign
   * @param deviceFilter {String} The filter for the devices the campaign will target
   * @param name {String} A name for this campaign
   */
  var exports = function(description, state, updatingUserId, createdAt, _object, rootManifestId, campaignId, updatingAccountId, updatedAt, when, finished, etag, rootManifestUrl, updatingApiKey, id, deviceFilter, name) {
    var _this = this;

    _this['description'] = description;
    _this['state'] = state;
    _this['updating_user_id'] = updatingUserId;
    _this['created_at'] = createdAt;
    _this['object'] = _object;
    _this['root_manifest_id'] = rootManifestId;
    _this['campaign_id'] = campaignId;
    _this['updating_account_id'] = updatingAccountId;
    _this['updated_at'] = updatedAt;
    _this['when'] = when;
    _this['finished'] = finished;
    _this['etag'] = etag;
    _this['root_manifest_url'] = rootManifestUrl;
    _this['updating_api_key'] = updatingApiKey;
    _this['id'] = id;
    _this['device_filter'] = deviceFilter;
    _this['name'] = name;
  };

  /**
   * Constructs a <code>UpdateCampaignSerializer</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UpdateCampaignSerializer} obj Optional instance to populate.
   * @return {module:model/UpdateCampaignSerializer} The populated <code>UpdateCampaignSerializer</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String');
      }
      if (data.hasOwnProperty('updating_user_id')) {
        obj['updating_user_id'] = ApiClient.convertToType(data['updating_user_id'], 'String');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'Date');
      }
      if (data.hasOwnProperty('object')) {
        obj['object'] = ApiClient.convertToType(data['object'], 'String');
      }
      if (data.hasOwnProperty('root_manifest_id')) {
        obj['root_manifest_id'] = ApiClient.convertToType(data['root_manifest_id'], 'String');
      }
      if (data.hasOwnProperty('campaign_id')) {
        obj['campaign_id'] = ApiClient.convertToType(data['campaign_id'], 'String');
      }
      if (data.hasOwnProperty('updating_account_id')) {
        obj['updating_account_id'] = ApiClient.convertToType(data['updating_account_id'], 'String');
      }
      if (data.hasOwnProperty('updated_at')) {
        obj['updated_at'] = ApiClient.convertToType(data['updated_at'], 'Date');
      }
      if (data.hasOwnProperty('when')) {
        obj['when'] = ApiClient.convertToType(data['when'], 'Date');
      }
      if (data.hasOwnProperty('finished')) {
        obj['finished'] = ApiClient.convertToType(data['finished'], 'Date');
      }
      if (data.hasOwnProperty('etag')) {
        obj['etag'] = ApiClient.convertToType(data['etag'], 'Date');
      }
      if (data.hasOwnProperty('root_manifest_url')) {
        obj['root_manifest_url'] = ApiClient.convertToType(data['root_manifest_url'], 'String');
      }
      if (data.hasOwnProperty('updating_api_key')) {
        obj['updating_api_key'] = ApiClient.convertToType(data['updating_api_key'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('device_filter')) {
        obj['device_filter'] = ApiClient.convertToType(data['device_filter'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
    }
    return obj;
  }

  /**
   * An optional description of the campaign
   * @member {String} description
   */
  exports.prototype['description'] = undefined;
  /**
   * The state of the campaign
   * @member {module:model/UpdateCampaignSerializer.StateEnum} state
   */
  exports.prototype['state'] = undefined;
  /**
   * The updating IAM user ID
   * @member {String} updating_user_id
   */
  exports.prototype['updating_user_id'] = undefined;
  /**
   * The time the object was created
   * @member {Date} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * The API resource entity
   * @member {String} object
   */
  exports.prototype['object'] = undefined;
  /**
   * @member {String} root_manifest_id
   */
  exports.prototype['root_manifest_id'] = undefined;
  /**
   * DEPRECATED: The ID of the campaign
   * @member {String} campaign_id
   */
  exports.prototype['campaign_id'] = undefined;
  /**
   * The updating account ID
   * @member {String} updating_account_id
   */
  exports.prototype['updating_account_id'] = undefined;
  /**
   * The time the object was updated
   * @member {Date} updated_at
   */
  exports.prototype['updated_at'] = undefined;
  /**
   * The timestamp at which update campaign scheduled to start
   * @member {Date} when
   */
  exports.prototype['when'] = undefined;
  /**
   * The timestamp when the update campaign finished
   * @member {Date} finished
   */
  exports.prototype['finished'] = undefined;
  /**
   * The entity instance signature
   * @member {Date} etag
   */
  exports.prototype['etag'] = undefined;
  /**
   * @member {String} root_manifest_url
   */
  exports.prototype['root_manifest_url'] = undefined;
  /**
   * The gateway client API key
   * @member {String} updating_api_key
   */
  exports.prototype['updating_api_key'] = undefined;
  /**
   * The ID of the campaign
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * The filter for the devices the campaign will target
   * @member {String} device_filter
   */
  exports.prototype['device_filter'] = undefined;
  /**
   * A name for this campaign
   * @member {String} name
   */
  exports.prototype['name'] = undefined;


  /**
   * Allowed values for the <code>state</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StateEnum = {
    /**
     * value: "draft"
     * @const
     */
    "draft": "draft",
    /**
     * value: "scheduled"
     * @const
     */
    "scheduled": "scheduled",
    /**
     * value: "devicefetch"
     * @const
     */
    "devicefetch": "devicefetch",
    /**
     * value: "devicecopy"
     * @const
     */
    "devicecopy": "devicecopy",
    /**
     * value: "devicecopycomplete"
     * @const
     */
    "devicecopycomplete": "devicecopycomplete",
    /**
     * value: "publishing"
     * @const
     */
    "publishing": "publishing",
    /**
     * value: "deploying"
     * @const
     */
    "deploying": "deploying",
    /**
     * value: "deployed"
     * @const
     */
    "deployed": "deployed",
    /**
     * value: "manifestremoved"
     * @const
     */
    "manifestremoved": "manifestremoved",
    /**
     * value: "expired"
     * @const
     */
    "expired": "expired"  };


  return exports;
}));


