/**
 * mbed Cloud Connect REST API
 * mbed Cloud Connect REST API allows web applications to communicate with devices.
 *
 * OpenAPI spec version: 2
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.MbedCloudConnectRestApi) {
      root.MbedCloudConnectRestApi = {};
    }
    root.MbedCloudConnectRestApi.Endpoint = factory(root.MbedCloudConnectRestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The Endpoint model module.
   * @module model/Endpoint
   * @version 2
   */

  /**
   * Constructs a new <code>Endpoint</code>.
   * @alias module:model/Endpoint
   * @class
   */
  var exports = function() {
    var _this = this;





  };

  /**
   * Constructs a <code>Endpoint</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Endpoint} obj Optional instance to populate.
   * @return {module:model/Endpoint} The populated <code>Endpoint</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('q')) {
        obj['q'] = ApiClient.convertToType(data['q'], 'Boolean');
      }
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
    }
    return obj;
  }

  /**
   * Possible values ACTIVE, STALE.
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * Determines whether the device is in queue mode.  <br/><br/><b>Queue mode</b><br/> When an endpoint is in queue mode, messages sent to the endpoint do not wake up the physical device.  The messages are queued and delivered when the device wakes up and connects to mbed Cloud Connect  itself. You can also use the Queue mode when the device is behind a NAT and cannot be reached directly by  mbed Cloud Connect. 
   * @member {Boolean} q
   */
  exports.prototype['q'] = undefined;
  /**
   * Type of endpoint. (Free text)
   * @member {String} type
   */
  exports.prototype['type'] = undefined;
  /**
   * Unique identifier representing the endpoint.
   * @member {String} name
   */
  exports.prototype['name'] = undefined;



  return exports;
}));


