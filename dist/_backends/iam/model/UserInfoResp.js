/**
 * IAM Identities REST API
 * REST API to manage accounts, groups, users and API keys
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.IamIdentitiesRestApi) {
      root.IamIdentitiesRestApi = {};
    }
    root.IamIdentitiesRestApi.UserInfoResp = factory(root.IamIdentitiesRestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The UserInfoResp model module.
   * @module model/UserInfoResp
   * @version v3
   */

  /**
   * Constructs a new <code>UserInfoResp</code>.
   * This object represents a user in mbed Cloud.
   * @alias module:model/UserInfoResp
   * @class
   * @param status {module:model/UserInfoResp.StatusEnum} The status of the user. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately.
   * @param username {String} A username containing alphanumerical letters and -,._@+= characters.
   * @param accountId {String} The UUID of the account.
   * @param _object {module:model/UserInfoResp.ObjectEnum} Entity name: always 'user'
   * @param email {String} The email address.
   * @param etag {String} API resource entity version.
   * @param id {String} The UUID of the user.
   */
  var exports = function(status, username, accountId, _object, email, etag, id) {
    var _this = this;

    _this['status'] = status;
    _this['username'] = username;

    _this['account_id'] = accountId;



    _this['object'] = _object;

    _this['email'] = email;

    _this['etag'] = etag;






    _this['id'] = id;

  };

  /**
   * Constructs a <code>UserInfoResp</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/UserInfoResp} obj Optional instance to populate.
   * @return {module:model/UserInfoResp} The populated <code>UserInfoResp</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('username')) {
        obj['username'] = ApiClient.convertToType(data['username'], 'String');
      }
      if (data.hasOwnProperty('email_verified')) {
        obj['email_verified'] = ApiClient.convertToType(data['email_verified'], 'Boolean');
      }
      if (data.hasOwnProperty('account_id')) {
        obj['account_id'] = ApiClient.convertToType(data['account_id'], 'String');
      }
      if (data.hasOwnProperty('password_changed_time')) {
        obj['password_changed_time'] = ApiClient.convertToType(data['password_changed_time'], 'Integer');
      }
      if (data.hasOwnProperty('groups')) {
        obj['groups'] = ApiClient.convertToType(data['groups'], ['String']);
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
      }
      if (data.hasOwnProperty('object')) {
        obj['object'] = ApiClient.convertToType(data['object'], 'String');
      }
      if (data.hasOwnProperty('is_gtc_accepted')) {
        obj['is_gtc_accepted'] = ApiClient.convertToType(data['is_gtc_accepted'], 'Boolean');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('is_marketing_accepted')) {
        obj['is_marketing_accepted'] = ApiClient.convertToType(data['is_marketing_accepted'], 'Boolean');
      }
      if (data.hasOwnProperty('etag')) {
        obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
      }
      if (data.hasOwnProperty('full_name')) {
        obj['full_name'] = ApiClient.convertToType(data['full_name'], 'String');
      }
      if (data.hasOwnProperty('address')) {
        obj['address'] = ApiClient.convertToType(data['address'], 'String');
      }
      if (data.hasOwnProperty('creationTimeMillis')) {
        obj['creationTimeMillis'] = ApiClient.convertToType(data['creationTimeMillis'], 'Integer');
      }
      if (data.hasOwnProperty('creation_time')) {
        obj['creation_time'] = ApiClient.convertToType(data['creation_time'], 'Integer');
      }
      if (data.hasOwnProperty('password')) {
        obj['password'] = ApiClient.convertToType(data['password'], 'String');
      }
      if (data.hasOwnProperty('phone_number')) {
        obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('last_login_time')) {
        obj['last_login_time'] = ApiClient.convertToType(data['last_login_time'], 'Integer');
      }
    }
    return obj;
  }

  /**
   * The status of the user. INVITED means that the user has not accepted the invitation request. RESET means that the password must be changed immediately.
   * @member {module:model/UserInfoResp.StatusEnum} status
   */
  exports.prototype['status'] = undefined;
  /**
   * A username containing alphanumerical letters and -,._@+= characters.
   * @member {String} username
   */
  exports.prototype['username'] = undefined;
  /**
   * A flag indicating whether the user's email address has been verified or not.
   * @member {Boolean} email_verified
   * @default false
   */
  exports.prototype['email_verified'] = false;
  /**
   * The UUID of the account.
   * @member {String} account_id
   */
  exports.prototype['account_id'] = undefined;
  /**
   * A timestamp of the latest change of the user password, in milliseconds.
   * @member {Integer} password_changed_time
   */
  exports.prototype['password_changed_time'] = undefined;
  /**
   * A list of IDs of the groups this user belongs to.
   * @member {Array.<String>} groups
   */
  exports.prototype['groups'] = undefined;
  /**
   * Creation UTC time RFC3339.
   * @member {String} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * Entity name: always 'user'
   * @member {module:model/UserInfoResp.ObjectEnum} object
   */
  exports.prototype['object'] = undefined;
  /**
   * A flag indicating that the General Terms and Conditions has been accepted.
   * @member {Boolean} is_gtc_accepted
   * @default false
   */
  exports.prototype['is_gtc_accepted'] = false;
  /**
   * The email address.
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * A flag indicating that receiving marketing information has been accepted.
   * @member {Boolean} is_marketing_accepted
   * @default false
   */
  exports.prototype['is_marketing_accepted'] = false;
  /**
   * API resource entity version.
   * @member {String} etag
   */
  exports.prototype['etag'] = undefined;
  /**
   * The full name of the user.
   * @member {String} full_name
   */
  exports.prototype['full_name'] = undefined;
  /**
   * Address.
   * @member {String} address
   */
  exports.prototype['address'] = undefined;
  /**
   * @member {Integer} creationTimeMillis
   */
  exports.prototype['creationTimeMillis'] = undefined;
  /**
   * A timestamp of the user creation in the storage, in milliseconds.
   * @member {Integer} creation_time
   */
  exports.prototype['creation_time'] = undefined;
  /**
   * The password when creating a new user. It will will generated when not present in the request.
   * @member {String} password
   */
  exports.prototype['password'] = undefined;
  /**
   * Phone number.
   * @member {String} phone_number
   */
  exports.prototype['phone_number'] = undefined;
  /**
   * The UUID of the user.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * A timestamp of the latest login of the user, in milliseconds.
   * @member {Integer} last_login_time
   */
  exports.prototype['last_login_time'] = undefined;


  /**
   * Allowed values for the <code>status</code> property.
   * @enum {String}
   * @readonly
   */
  exports.StatusEnum = {
    /**
     * value: "INVITED"
     * @const
     */
    "INVITED": "INVITED",
    /**
     * value: "ACTIVE"
     * @const
     */
    "ACTIVE": "ACTIVE",
    /**
     * value: "RESET"
     * @const
     */
    "RESET": "RESET",
    /**
     * value: "INACTIVE"
     * @const
     */
    "INACTIVE": "INACTIVE"  };

  /**
   * Allowed values for the <code>object</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ObjectEnum = {
    /**
     * value: "user"
     * @const
     */
    "user": "user",
    /**
     * value: "apikey"
     * @const
     */
    "apikey": "apikey",
    /**
     * value: "group"
     * @const
     */
    "group": "group",
    /**
     * value: "account"
     * @const
     */
    "account": "account",
    /**
     * value: "account_template"
     * @const
     */
    "account_template": "account_template",
    /**
     * value: "ca_cert"
     * @const
     */
    "ca_cert": "ca_cert",
    /**
     * value: "list"
     * @const
     */
    "list": "list",
    /**
     * value: "error"
     * @const
     */
    "error": "error"  };


  return exports;
}));


