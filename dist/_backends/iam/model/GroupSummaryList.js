/**
 * IAM Identities REST API
 * REST API to manage accounts, groups, users and api-keys
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/GroupSummary'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./GroupSummary'));
  } else {
    // Browser globals (root is window)
    if (!root.IamIdentitiesRestApi) {
      root.IamIdentitiesRestApi = {};
    }
    root.IamIdentitiesRestApi.GroupSummaryList = factory(root.IamIdentitiesRestApi.ApiClient, root.IamIdentitiesRestApi.GroupSummary);
  }
}(this, function(ApiClient, GroupSummary) {
  'use strict';




  /**
   * The GroupSummaryList model module.
   * @module model/GroupSummaryList
   * @version v3
   */

  /**
   * Constructs a new <code>GroupSummaryList</code>.
   * @alias module:model/GroupSummaryList
   * @class
   * @param _object {module:model/GroupSummaryList.ObjectEnum} entity name: always 'list'
   * @param totalCount {Integer} The total number or records, if requested 
   * @param limit {Integer} The number of results to return, (range: 2-1000), or equals to total_count
   * @param data {Array.<module:model/GroupSummary>} List of entities.
   */
  var exports = function(_object, totalCount, limit, data) {
    var _this = this;


    _this['object'] = _object;
    _this['totalCount'] = totalCount;
    _this['limit'] = limit;
    _this['data'] = data;

  };

  /**
   * Constructs a <code>GroupSummaryList</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/GroupSummaryList} obj Optional instance to populate.
   * @return {module:model/GroupSummaryList} The populated <code>GroupSummaryList</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('after')) {
        obj['after'] = ApiClient.convertToType(data['after'], 'String');
      }
      if (data.hasOwnProperty('object')) {
        obj['object'] = ApiClient.convertToType(data['object'], 'String');
      }
      if (data.hasOwnProperty('totalCount')) {
        obj['totalCount'] = ApiClient.convertToType(data['totalCount'], 'Integer');
      }
      if (data.hasOwnProperty('limit')) {
        obj['limit'] = ApiClient.convertToType(data['limit'], 'Integer');
      }
      if (data.hasOwnProperty('data')) {
        obj['data'] = ApiClient.convertToType(data['data'], [GroupSummary]);
      }
      if (data.hasOwnProperty('order')) {
        obj['order'] = ApiClient.convertToType(data['order'], 'String');
      }
    }
    return obj;
  }

  /**
   * The entity id to fetch after it.
   * @member {String} after
   */
  exports.prototype['after'] = undefined;
  /**
   * entity name: always 'list'
   * @member {module:model/GroupSummaryList.ObjectEnum} object
   */
  exports.prototype['object'] = undefined;
  /**
   * The total number or records, if requested 
   * @member {Integer} totalCount
   */
  exports.prototype['totalCount'] = undefined;
  /**
   * The number of results to return, (range: 2-1000), or equals to total_count
   * @member {Integer} limit
   */
  exports.prototype['limit'] = undefined;
  /**
   * List of entities.
   * @member {Array.<module:model/GroupSummary>} data
   */
  exports.prototype['data'] = undefined;
  /**
   * The order of the records to return. Available values: ASC, DESC. Default value is ASC
   * @member {module:model/GroupSummaryList.OrderEnum} order
   */
  exports.prototype['order'] = undefined;


  /**
   * Allowed values for the <code>object</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ObjectEnum = {
    /**
     * value: "user"
     * @const
     */
    "user": "user",
    /**
     * value: "apikey"
     * @const
     */
    "apikey": "apikey",
    /**
     * value: "group"
     * @const
     */
    "group": "group",
    /**
     * value: "account"
     * @const
     */
    "account": "account",
    /**
     * value: "list"
     * @const
     */
    "list": "list",
    /**
     * value: "error"
     * @const
     */
    "error": "error"  };

  /**
   * Allowed values for the <code>order</code> property.
   * @enum {String}
   * @readonly
   */
  exports.OrderEnum = {
    /**
     * value: "ASC"
     * @const
     */
    "ASC": "ASC",
    /**
     * value: "DESC"
     * @const
     */
    "DESC": "DESC"  };


  return exports;
}));


