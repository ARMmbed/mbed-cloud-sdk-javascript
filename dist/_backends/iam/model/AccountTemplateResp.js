/**
 * IAM Identities REST API
 * REST API to manage accounts, groups, users and API keys
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Policy'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Policy'));
  } else {
    // Browser globals (root is window)
    if (!root.IamIdentitiesRestApi) {
      root.IamIdentitiesRestApi = {};
    }
    root.IamIdentitiesRestApi.AccountTemplateResp = factory(root.IamIdentitiesRestApi.ApiClient, root.IamIdentitiesRestApi.Policy);
  }
}(this, function(ApiClient, Policy) {
  'use strict';




  /**
   * The AccountTemplateResp model module.
   * @module model/AccountTemplateResp
   * @version v3
   */

  /**
   * Constructs a new <code>AccountTemplateResp</code>.
   * This object represents an account template in responses.
   * @alias module:model/AccountTemplateResp
   * @class
   * @param name {String} Account template name
   * @param _object {module:model/AccountTemplateResp.ObjectEnum} entity name: 'user', 'apikey', 'group', 'account' or error
   * @param etag {String} API resource entity version.
   * @param id {String} Entity ID.
   */
  var exports = function(name, _object, etag, id) {
    var _this = this;


    _this['name'] = name;


    _this['object'] = _object;
    _this['etag'] = etag;

    _this['id'] = id;


  };

  /**
   * Constructs a <code>AccountTemplateResp</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountTemplateResp} obj Optional instance to populate.
   * @return {module:model/AccountTemplateResp} The populated <code>AccountTemplateResp</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('limits')) {
        obj['limits'] = ApiClient.convertToType(data['limits'], {'String': 'String'});
      }
      if (data.hasOwnProperty('name')) {
        obj['name'] = ApiClient.convertToType(data['name'], 'String');
      }
      if (data.hasOwnProperty('parent')) {
        obj['parent'] = ApiClient.convertToType(data['parent'], 'String');
      }
      if (data.hasOwnProperty('created_at')) {
        obj['created_at'] = ApiClient.convertToType(data['created_at'], 'String');
      }
      if (data.hasOwnProperty('object')) {
        obj['object'] = ApiClient.convertToType(data['object'], 'String');
      }
      if (data.hasOwnProperty('etag')) {
        obj['etag'] = ApiClient.convertToType(data['etag'], 'String');
      }
      if (data.hasOwnProperty('creationTimeMillis')) {
        obj['creationTimeMillis'] = ApiClient.convertToType(data['creationTimeMillis'], 'Integer');
      }
      if (data.hasOwnProperty('id')) {
        obj['id'] = ApiClient.convertToType(data['id'], 'String');
      }
      if (data.hasOwnProperty('resources')) {
        obj['resources'] = ApiClient.convertToType(data['resources'], [Policy]);
      }
      if (data.hasOwnProperty('description')) {
        obj['description'] = ApiClient.convertToType(data['description'], 'String');
      }
    }
    return obj;
  }

  /**
   * List of limits as name-value pairs
   * @member {Object.<String, String>} limits
   */
  exports.prototype['limits'] = undefined;
  /**
   * Account template name
   * @member {String} name
   */
  exports.prototype['name'] = undefined;
  /**
   * ID of the parent template, can be null.
   * @member {String} parent
   */
  exports.prototype['parent'] = undefined;
  /**
   * Creation UTC time RFC3339.
   * @member {String} created_at
   */
  exports.prototype['created_at'] = undefined;
  /**
   * entity name: 'user', 'apikey', 'group', 'account' or error
   * @member {module:model/AccountTemplateResp.ObjectEnum} object
   */
  exports.prototype['object'] = undefined;
  /**
   * API resource entity version.
   * @member {String} etag
   */
  exports.prototype['etag'] = undefined;
  /**
   * @member {Integer} creationTimeMillis
   */
  exports.prototype['creationTimeMillis'] = undefined;
  /**
   * Entity ID.
   * @member {String} id
   */
  exports.prototype['id'] = undefined;
  /**
   * List of resource-action-allow triplets, policies.
   * @member {Array.<module:model/Policy>} resources
   */
  exports.prototype['resources'] = undefined;
  /**
   * Account template description
   * @member {String} description
   */
  exports.prototype['description'] = undefined;


  /**
   * Allowed values for the <code>object</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ObjectEnum = {
    /**
     * value: "user"
     * @const
     */
    "user": "user",
    /**
     * value: "apikey"
     * @const
     */
    "apikey": "apikey",
    /**
     * value: "group"
     * @const
     */
    "group": "group",
    /**
     * value: "account"
     * @const
     */
    "account": "account",
    /**
     * value: "account_template"
     * @const
     */
    "account_template": "account_template",
    /**
     * value: "ca_cert"
     * @const
     */
    "ca_cert": "ca_cert",
    /**
     * value: "list"
     * @const
     */
    "list": "list",
    /**
     * value: "error"
     * @const
     */
    "error": "error"  };


  return exports;
}));


