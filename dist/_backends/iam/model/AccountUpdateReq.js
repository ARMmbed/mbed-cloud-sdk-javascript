/**
 * IAM Identities REST API
 * REST API to manage accounts, groups, users and API keys
 *
 * OpenAPI spec version: v3
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 * http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.IamIdentitiesRestApi) {
      root.IamIdentitiesRestApi = {};
    }
    root.IamIdentitiesRestApi.AccountUpdateReq = factory(root.IamIdentitiesRestApi.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';




  /**
   * The AccountUpdateReq model module.
   * @module model/AccountUpdateReq
   * @version v3
   */

  /**
   * Constructs a new <code>AccountUpdateReq</code>.
   * This object represents an account update request.
   * @alias module:model/AccountUpdateReq
   * @class
   */
  var exports = function() {
    var _this = this;

















  };

  /**
   * Constructs a <code>AccountUpdateReq</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/AccountUpdateReq} obj Optional instance to populate.
   * @return {module:model/AccountUpdateReq} The populated <code>AccountUpdateReq</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('address_line2')) {
        obj['address_line2'] = ApiClient.convertToType(data['address_line2'], 'String');
      }
      if (data.hasOwnProperty('city')) {
        obj['city'] = ApiClient.convertToType(data['city'], 'String');
      }
      if (data.hasOwnProperty('address_line1')) {
        obj['address_line1'] = ApiClient.convertToType(data['address_line1'], 'String');
      }
      if (data.hasOwnProperty('display_name')) {
        obj['display_name'] = ApiClient.convertToType(data['display_name'], 'String');
      }
      if (data.hasOwnProperty('country')) {
        obj['country'] = ApiClient.convertToType(data['country'], 'String');
      }
      if (data.hasOwnProperty('company')) {
        obj['company'] = ApiClient.convertToType(data['company'], 'String');
      }
      if (data.hasOwnProperty('template_id')) {
        obj['template_id'] = ApiClient.convertToType(data['template_id'], 'String');
      }
      if (data.hasOwnProperty('status')) {
        obj['status'] = ApiClient.convertToType(data['status'], 'String');
      }
      if (data.hasOwnProperty('state')) {
        obj['state'] = ApiClient.convertToType(data['state'], 'String');
      }
      if (data.hasOwnProperty('contact')) {
        obj['contact'] = ApiClient.convertToType(data['contact'], 'String');
      }
      if (data.hasOwnProperty('postal_code')) {
        obj['postal_code'] = ApiClient.convertToType(data['postal_code'], 'String');
      }
      if (data.hasOwnProperty('is_provisioning_allowed')) {
        obj['is_provisioning_allowed'] = ApiClient.convertToType(data['is_provisioning_allowed'], 'Boolean');
      }
      if (data.hasOwnProperty('tier')) {
        obj['tier'] = ApiClient.convertToType(data['tier'], 'String');
      }
      if (data.hasOwnProperty('phone_number')) {
        obj['phone_number'] = ApiClient.convertToType(data['phone_number'], 'String');
      }
      if (data.hasOwnProperty('email')) {
        obj['email'] = ApiClient.convertToType(data['email'], 'String');
      }
      if (data.hasOwnProperty('aliases')) {
        obj['aliases'] = ApiClient.convertToType(data['aliases'], ['String']);
      }
    }
    return obj;
  }

  /**
   * Postal address line 2.
   * @member {String} address_line2
   */
  exports.prototype['address_line2'] = undefined;
  /**
   * The city part of the postal address.
   * @member {String} city
   */
  exports.prototype['city'] = undefined;
  /**
   * Postal address line 1.
   * @member {String} address_line1
   */
  exports.prototype['address_line1'] = undefined;
  /**
   * The display name for the account.
   * @member {String} display_name
   */
  exports.prototype['display_name'] = undefined;
  /**
   * The country part of the postal address.
   * @member {String} country
   */
  exports.prototype['country'] = undefined;
  /**
   * The name of the company.
   * @member {String} company
   */
  exports.prototype['company'] = undefined;
  /**
   * Account template ID. Manageable by the root admin only.
   * @member {String} template_id
   */
  exports.prototype['template_id'] = undefined;
  /**
   * The status of the account. Manageable by the root admin only.
   * @member {String} status
   */
  exports.prototype['status'] = undefined;
  /**
   * The state part of the postal address.
   * @member {String} state
   */
  exports.prototype['state'] = undefined;
  /**
   * The name of the contact person for this account.
   * @member {String} contact
   */
  exports.prototype['contact'] = undefined;
  /**
   * The postal code part of the postal address.
   * @member {String} postal_code
   */
  exports.prototype['postal_code'] = undefined;
  /**
   * Flag (true/false) indicating whether Factory Tool is allowed to download or not. Manageable by the root admin only.
   * @member {Boolean} is_provisioning_allowed
   * @default false
   */
  exports.prototype['is_provisioning_allowed'] = false;
  /**
   * The tier level of the account; '0': free tier, '1': commercial account. Other values are reserved for the future. Manageable by the root admin only.
   * @member {String} tier
   */
  exports.prototype['tier'] = undefined;
  /**
   * The phone number of the company.
   * @member {String} phone_number
   */
  exports.prototype['phone_number'] = undefined;
  /**
   * The company email address for this account.
   * @member {String} email
   */
  exports.prototype['email'] = undefined;
  /**
   * An array of aliases.
   * @member {Array.<String>} aliases
   */
  exports.prototype['aliases'] = undefined;



  return exports;
}));


