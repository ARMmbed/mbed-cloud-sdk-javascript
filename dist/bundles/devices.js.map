{"version":3,"sources":["node_modules/browserify/node_modules/browser-pack/_prelude.js","dist/_backends/mds/ApiClient.js","dist/_backends/mds/api/DefaultApi.js","dist/_backends/mds/api/EndpointsApi.js","dist/_backends/mds/api/NotificationsApi.js","dist/_backends/mds/api/ResourcesApi.js","dist/_backends/mds/api/SubscriptionsApi.js","dist/_backends/mds/index.js","dist/_backends/mds/model/AsyncID.js","dist/_backends/mds/model/AsyncIDResponse.js","dist/_backends/mds/model/Endpoint.js","dist/_backends/mds/model/EndpointData.js","dist/_backends/mds/model/NotificationData.js","dist/_backends/mds/model/NotificationMessage.js","dist/_backends/mds/model/Presubscription.js","dist/_backends/mds/model/PresubscriptionArray.js","dist/_backends/mds/model/Resource.js","dist/_backends/mds/model/ResourcePath.js","dist/_backends/mds/model/ResourcesData.js","dist/_backends/mds/model/Webhook.js","dist/node/devices.js","node_modules/superagent/lib/client.js","node_modules/superagent/lib/is-function.js","node_modules/superagent/lib/is-object.js","node_modules/superagent/lib/request-base.js","node_modules/superagent/lib/response-base.js","node_modules/superagent/lib/utils.js","node_modules/superagent/node_modules/component-emitter/index.js"],"names":["f","exports","module","define","amd","g","window","global","self","this","Devices","e","t","n","r","s","o","u","a","require","i","Error","code","l","call","length","1","root","factory","MbedCloudConnectRestApi","ApiClient","superagent","basePath","replace","authentications","Bearer","type","in","name","defaultHeaders","timeout","prototype","paramToString","param","undefined","Date","toJSON","toString","buildUrl","path","pathParams","match","url","_this","fullMatch","key","value","hasOwnProperty","encodeURIComponent","isJsonMime","contentType","Boolean","jsonPreferredMime","contentTypes","isFileParam","ReadStream","Buffer","Blob","File","normalizeParams","params","newParams","Array","isArray","CollectionFormatEnum","CSV","SSV","TSV","PIPES","MULTI","buildCollectionParam","collectionFormat","map","join","applyAuthToRequest","request","authNames","forEach","authName","auth","username","password","apiKey","data","apiKeyPrefix","set","query","accessToken","Authorization","deserialize","response","returnType","body","text","convertToType","callApi","httpMethod","queryParams","headerParams","formParams","bodyParam","accepts","callback","header","send","_formParams","attach","field","accept","end","error","parseDate","str","parseInt","parseFloat","String","Object","constructFromObject","itemType","item","keyType","valueType","k","result","obj","instance","DefaultApi","apiClient","v2NotificationCallbackDelete","postBody","v2NotificationCallbackGet","EndpointsApi","Resource","Endpoint","v2EndpointsEndpointNameGet","endpointName","v2EndpointsGet","opts","NotificationsApi","Webhook","NotificationMessage","v2NotificationCallbackPut","webhook","v2NotificationPullGet","ResourcesApi","AsyncID","v2EndpointsEndpointNameResourcePathDelete","resourcePath","noResp","v2EndpointsEndpointNameResourcePathGet","cacheOnly","v2EndpointsEndpointNameResourcePathPost","v2EndpointsEndpointNameResourcePathPut","resourceValue","SubscriptionsApi","PresubscriptionArray","v2SubscriptionsDelete","v2SubscriptionsEndpointNameDelete","v2SubscriptionsEndpointNameGet","v2SubscriptionsEndpointNameResourcePathDelete","v2SubscriptionsEndpointNameResourcePathGet","v2SubscriptionsEndpointNameResourcePathPut","v2SubscriptionsGet","v2SubscriptionsPut","presubsription","AsyncIDResponse","EndpointData","NotificationData","Presubscription","ResourcePath","ResourcesData","setPrototypeOf","mds","client","options","obs","rt","uri","getValue","Promise","resolve","reject","bind","status","listResources","api","err","resources","resource","host","listEndpoints","endpoints","endpoint","noop","serialize","isObject","pairs","pushEncodedKeyValuePair","val","v","subkey","push","parseString","pair","pos","split","len","indexOf","decodeURIComponent","slice","parseHeader","index","line","lines","fields","pop","toLowerCase","trim","isJSON","mime","test","Response","req","xhr","method","responseType","responseText","statusText","_setStatusProperties","headers","getAllResponseHeaders","getResponseHeader","_setHeaderProperties","_responseType","_parseBody","Request","_query","_header","on","res","parse","original","rawResponse","statusCode","emit","new_err","_isResponseOK","del","fn","console","warn","Emitter","RequestBase","isFunction","ResponseBase","arguments","getXHR","XMLHttpRequest","location","protocol","ActiveXObject","serializeObject","types","html","json","xml","urlencoded","form","form-data","application/x-www-form-urlencoded","application/json","JSON","stringify","_parser","toError","msg","user","pass","btoa","file","_data","_getFormData","append","_formData","FormData","_callback","clearTimeout","crossDomainError","crossDomain","buffer","ca","agent","pipe","write","_appendQueryString","_sort","queryArr","substring","sort","_isHost","_endCalled","onreadystatechange","readyState","_responseTimeoutTimer","timedout","_aborted","handleProgress","direction","total","percent","loaded","hasListeners","onprogress","upload","_setTimeouts","open","_withCredentials","withCredentials","_serializer","setRequestHeader","get","head","patch","post","put","tag","mixin","_timeout","_responseTimeout","_timer","deadline","then","_fullfilledPromise","innerResolve","innerReject","catch","cb","use","ok","_okCallback","getHeader","unset","abort","redirects","_maxRedirects","isObj","sortQuery","_timeoutError","reason","setTimeout","utils","ct","links","link","parseLinks","statusType","info","redirect","clientError","serverError","accepted","noContent","badRequest","unauthorized","notAcceptable","forbidden","notFound","shift","reduce","parts","rel","cleanHeader","shouldStripCookie","addEventListener","event","_callbacks","once","off","apply","removeListener","removeAllListeners","removeEventListener","callbacks","splice","args","listeners"],"mappings":"CAAA,SAAAA,GAAA,GAAA,gBAAAC,UAAA,mBAAAC,QAAAA,OAAAD,QAAAD,QAAA,IAAA,kBAAAG,SAAAA,OAAAC,IAAAD,UAAAH,OAAA,CAAA,GAAAK,EAAAA,GAAA,mBAAAC,QAAAA,OAAA,mBAAAC,QAAAA,OAAA,mBAAAC,MAAAA,KAAAC,KAAAJ,EAAAK,QAAAV,MAAA,WAAA,GAAAG,EAAA,OAAA,SAAAQ,GAAAC,EAAAC,EAAAC,GAAA,QAAAC,GAAAC,EAAAC,GAAA,IAAAJ,EAAAG,GAAA,CAAA,IAAAJ,EAAAI,GAAA,CAAA,GAAAE,GAAA,kBAAAC,UAAAA,OAAA,KAAAF,GAAAC,EAAA,MAAAA,GAAAF,GAAA,EAAA,IAAAI,EAAA,MAAAA,GAAAJ,GAAA,EAAA,IAAAhB,GAAA,GAAAqB,OAAA,uBAAAL,EAAA,IAAA,MAAAhB,GAAAsB,KAAA,mBAAAtB,EAAA,GAAAuB,GAAAV,EAAAG,IAAAf,WAAAW,GAAAI,GAAA,GAAAQ,KAAAD,EAAAtB,QAAA,SAAAU,GAAA,GAAAE,GAAAD,EAAAI,GAAA,GAAAL,EAAA,OAAAI,GAAAF,EAAAA,EAAAF,IAAAY,EAAAA,EAAAtB,QAAAU,EAAAC,EAAAC,EAAAC,GAAA,MAAAD,GAAAG,GAAAf,QAAA,IAAA,GAAAmB,GAAA,kBAAAD,UAAAA,QAAAH,EAAA,EAAAA,EAAAF,EAAAW,OAAAT,IAAAD,EAAAD,EAAAE,GAAA,OAAAD,KAAAW,GAAA,SAAAP,EAAAjB,EAAAD,iBCwBA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,cAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAC,UAAAF,EAAAD,EAAAI,cAEAtB,KAAA,SAAAsB,GACA,YAcA,IAAA9B,GAAA,WAMAQ,KAAAuB,SAAA,4BAAAC,QAAA,OAAA,IAMAxB,KAAAyB,iBACAC,QAAAC,KAAA,SAAAC,GAAA,SAAAC,KAAA,kBAOA7B,KAAA8B,kBAOA9B,KAAA+B,QAAA,IAibA,OAzaAvC,GAAAwC,UAAAC,cAAA,SAAAC,GACA,MAAAC,SAAAD,GAAA,MAAAA,EACA,GAEAA,YAAAE,MACAF,EAAAG,SAEAH,EAAAI,YAUA9C,EAAAwC,UAAAO,SAAA,SAAAC,EAAAC,GACAD,EAAAE,MAAA,SACAF,EAAA,IAAAA,EAEA,IAAAG,GAAA3C,KAAAuB,SAAAiB,EACAI,EAAA5C,IAUA,OATA2C,GAAAA,EAAAnB,QAAA,gBAAA,SAAAqB,EAAAC,GACA,GAAAC,EAMA,OAJAA,GADAN,EAAAO,eAAAF,GACAF,EAAAX,cAAAQ,EAAAK,IAEAD,EAEAI,mBAAAF,MAgBAvD,EAAAwC,UAAAkB,WAAA,SAAAC,GACA,MAAAC,SAAA,MAAAD,GAAAA,EAAAT,MAAA,gCAQAlD,EAAAwC,UAAAqB,kBAAA,SAAAC,GACA,IAAA,GAAA3C,GAAA,EAAAA,EAAA2C,EAAAtC,OAAAL,IACA,GAAAX,KAAAkD,WAAAI,EAAA3C,IACA,MAAA2C,GAAA3C,EAGA,OAAA2C,GAAA,IAQA9D,EAAAwC,UAAAuB,YAAA,SAAArB,GAEA,SAAA,mBAAArC,SACA,kBAAAa,IACAA,EAAA,OACAwB,YAAAxB,GAAA,MAAA8C,cAIA,kBAAAC,IAAAvB,YAAAuB,KAIA,kBAAAC,OAAAxB,YAAAwB,OAIA,kBAAAC,OAAAzB,YAAAyB,SAgBAnE,EAAAwC,UAAA4B,gBAAA,SAAAC,GACA,GAAAC,KACA,KAAA,GAAAhB,KAAAe,GACA,GAAAA,EAAAb,eAAAF,IAAAX,QAAA0B,EAAAf,IAAA,MAAAe,EAAAf,GAAA,CACA,GAAAC,GAAAc,EAAAf,EACA9C,MAAAuD,YAAAR,IAAAgB,MAAAC,QAAAjB,GACAe,EAAAhB,GAAAC,EAEAe,EAAAhB,GAAA9C,KAAAiC,cAAAc,GAIA,MAAAe,IAQAtE,EAAAyE,sBAKAC,IAAA,IAKAC,IAAA,IAKAC,IAAA,KAKAC,MAAA,IAKAC,MAAA,SAUA9E,EAAAwC,UAAAuC,qBAAA,SAAArC,EAAAsC,GACA,GAAA,MAAAtC,EACA,MAAA,KAEA,QAAAsC,GACA,IAAA,MACA,MAAAtC,GAAAuC,IAAAzE,KAAAiC,eAAAyC,KAAA,IACA,KAAA,MACA,MAAAxC,GAAAuC,IAAAzE,KAAAiC,eAAAyC,KAAA,IACA,KAAA,MACA,MAAAxC,GAAAuC,IAAAzE,KAAAiC,eAAAyC,KAAA,KACA,KAAA,QACA,MAAAxC,GAAAuC,IAAAzE,KAAAiC,eAAAyC,KAAA,IACA,KAAA,QAEA,MAAAxC,GAAAuC,IAAAzE,KAAAiC,cACA,SACA,KAAA,IAAArB,OAAA,8BAAA4D,KASAhF,EAAAwC,UAAA2C,mBAAA,SAAAC,EAAAC,GACA,GAAAjC,GAAA5C,IACA6E,GAAAC,QAAA,SAAAC,GACA,GAAAC,GAAApC,EAAAnB,gBAAAsD,EACA,QAAAC,EAAArD,MACA,IAAA,SACAqD,EAAAC,UAAAD,EAAAE,WACAN,EAAAI,KAAAA,EAAAC,UAAA,GAAAD,EAAAE,UAAA,GAEA,MACA,KAAA,SACA,GAAAF,EAAAG,OAAA,CACA,GAAAC,KACAJ,GAAAK,aACAD,EAAAJ,EAAAnD,MAAAmD,EAAAK,aAAA,IAAAL,EAAAG,OAEAC,EAAAJ,EAAAnD,MAAAmD,EAAAG,OAEA,WAAAH,EAAA,GACAJ,EAAAU,IAAAF,GAEAR,EAAAW,MAAAH,GAGA,KACA,KAAA,SACAJ,EAAAQ,aACAZ,EAAAU,KAAAG,cAAA,UAAAT,EAAAQ,aAEA,MACA,SACA,KAAA,IAAA5E,OAAA,gCAAAoE,EAAArD,UAcAnC,EAAAwC,UAAA0D,YAAA,SAAAC,EAAAC,GACA,GAAA,MAAAD,GAAA,MAAAC,EACA,MAAA,KAIA,IAAAR,GAAAO,EAAAE,IAKA,OAJA,OAAAT,IAEAA,EAAAO,EAAAG,MAEAtG,EAAAuG,cAAAX,EAAAQ,IA4BApG,EAAAwC,UAAAgE,QAAA,SAAAxD,EAAAyD,EAAAxD,EACAyD,EAAAC,EAAAC,EAAAC,EAAAxB,EAAAvB,EAAAgD,EACAV,EAAAW,GAEA,GAAA3D,GAAA5C,KACA2C,EAAA3C,KAAAuC,SAAAC,EAAAC,GACAmC,EAAAtD,EAAA2E,EAAAtD,EAGA3C,MAAA2E,mBAAAC,EAAAC,GAGAD,EAAAW,MAAAvF,KAAA4D,gBAAAsC,IAGAtB,EAAAU,IAAAtF,KAAA8B,gBAAAwD,IAAAtF,KAAA4D,gBAAAuC,IAGAvB,EAAA7C,QAAA/B,KAAA+B,QAEA,IAAAoB,GAAAnD,KAAAqD,kBAAAC,EAOA,IANAH,EACAyB,EAAAjD,KAAAwB,GACAyB,EAAA4B,OAAA,iBACA5B,EAAAjD,KAAA,oBAGA,sCAAAwB,EACAyB,EAAA6B,KAAAzG,KAAA4D,gBAAAwC,QACA,IAAA,uBAAAjD,EAAA,CACA,GAAAuD,GAAA1G,KAAA4D,gBAAAwC,EACA,KAAA,GAAAtD,KAAA4D,GACAA,EAAA1D,eAAAF,KACA9C,KAAAuD,YAAAmD,EAAA5D,IAEA8B,EAAA+B,OAAA7D,EAAA4D,EAAA5D,IAEA8B,EAAAgC,MAAA9D,EAAA4D,EAAA5D,SAIAuD,IACAzB,EAAA6B,KAAAJ,EAGA,IAAAQ,GAAA7G,KAAAqD,kBAAAiD,EAgBA,OAfAO,IACAjC,EAAAiC,OAAAA,GAIAjC,EAAAkC,IAAA,SAAAC,EAAApB,GACA,GAAAY,EAAA,CACA,GAAAnB,GAAA,IACA2B,KACA3B,EAAAxC,EAAA8C,YAAAC,EAAAC,IAEAW,EAAAQ,EAAA3B,EAAAO,MAIAf,GAQApF,EAAAwH,UAAA,SAAAC,GACA,MAAA,IAAA7E,MAAA6E,EAAAzF,QAAA,KAAA,OAYAhC,EAAAuG,cAAA,SAAAX,EAAAzD,GACA,OAAAA,GACA,IAAA,UACA,MAAAyB,SAAAgC,EACA,KAAA,UACA,MAAA8B,UAAA9B,EAAA,GACA,KAAA,SACA,MAAA+B,YAAA/B,EACA,KAAA,SACA,MAAAgC,QAAAhC,EACA,KAAA,OACA,MAAApF,MAAAgH,UAAAI,OAAAhC,GACA,SACA,GAAAzD,IAAA0F,OAEA,MAAAjC,EACA,IAAA,kBAAAzD,GAEA,MAAAA,GAAA2F,oBAAAlC,EACA,IAAArB,MAAAC,QAAArC,GAAA,CAEA,GAAA4F,GAAA5F,EAAA,EACA,OAAAyD,GAAAX,IAAA,SAAA+C,GACA,MAAAhI,GAAAuG,cAAAyB,EAAAD,KAEA,GAAA,gBAAA5F,GAAA,CAEA,GAAA8F,GAAAC,CACA,KAAA,GAAAC,KAAAhG,GACA,GAAAA,EAAAqB,eAAA2E,GAAA,CACAF,EAAAE,EACAD,EAAA/F,EAAAgG,EACA,OAGA,GAAAC,KACA,KAAA,GAAAD,KAAAvC,GACA,GAAAA,EAAApC,eAAA2E,GAAA,CACA,GAAA7E,GAAAtD,EAAAuG,cAAA4B,EAAAF,GACA1E,EAAAvD,EAAAuG,cAAAX,EAAAuC,GAAAD,EACAE,GAAA9E,GAAAC,EAGA,MAAA6E,GAGA,MAAAxC,KAUA5F,EAAA8H,oBAAA,SAAAlC,EAAAyC,EAAAN,GACA,GAAAxD,MAAAC,QAAAoB,GACA,IAAA,GAAAzE,GAAA,EAAAA,EAAAyE,EAAApE,OAAAL,IACAyE,EAAApC,eAAArC,KACAkH,EAAAlH,GAAAnB,EAAAuG,cAAAX,EAAAzE,GAAA4G,QAGA,KAAA,GAAAI,KAAAvC,GACAA,EAAApC,eAAA2E,KACAE,EAAAF,GAAAnI,EAAAuG,cAAAX,EAAAuC,GAAAJ,KASA/H,EAAAsI,SAAA,GAAAtI,GAEAA,0FCzeA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAA2G,WAAA5G,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAeA,IAAA7B,GAAA,SAAAwI,GACAhI,KAAAgI,UAAAA,GAAA3G,EAAAyG,SAgBA9H,KAAAiI,6BAAA,SAAA1B,GACA,GAAA2B,GAAA,KAGAzF,KAEAyD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,4BAAA,SACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAiBAvG,KAAAmI,0BAAA,SAAA5B,GACA,GAAA2B,GAAA,KAGAzF,KAEAyD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,4BAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAKA,OAAA/G,8CC/GA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,iBAAA,kBAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAAAA,EAAA,qBAAAA,EAAA,uBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAgH,aAAAjH,EAAAD,EAAAE,wBAAAC,UAAAH,EAAAE,wBAAAiH,SAAAnH,EAAAE,wBAAAkH,YAEAtI,KAAA,SAAAqB,EAAAgH,EAAAC,GACA,YAeA,IAAA9I,GAAA,SAAAwI,GACAhI,KAAAgI,UAAAA,GAAA3G,EAAAyG,SAkBA9H,KAAAuI,2BAAA,SAAAC,EAAAjC,GACA,GAAA2B,GAAA,IAGA,IAAA/F,QAAAqG,GAAA,MAAAA,EACA,KAAA,uFAIA,IAAA/F,IACA+F,aAAAA,GAEAtC,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,mBAAA,2BACAV,GAAAyC,EAEA,OAAArI,MAAAgI,UAAAhC,QACA,+BAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAoBAvG,KAAAyI,eAAA,SAAAC,EAAAnC,GACAmC,EAAAA,KACA,IAAAR,GAAA,KAGAzF,KAEAyD,GACAvE,KAAA+G,EAAA,MAEAvC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,mBAAA,2BACAV,GAAA0C,EAEA,OAAAtI,MAAAgI,UAAAhC,QACA,gBAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAKA,OAAA/G,4FC5HA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,gBAAA,6BAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAAAA,EAAA,oBAAAA,EAAA,kCAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAuH,iBAAAxH,EAAAD,EAAAE,wBAAAC,UAAAH,EAAAE,wBAAAwH,QAAA1H,EAAAE,wBAAAyH,uBAEA7I,KAAA,SAAAqB,EAAAuH,EAAAC,GACA,YAeA,IAAArJ,GAAA,SAAAwI,GACAhI,KAAAgI,UAAAA,GAAA3G,EAAAyG,SAiBA9H,KAAA8I,0BAAA,SAAAC,EAAAxC,GACA,GAAA2B,GAAAa,CAGA,IAAA5G,QAAA4G,GAAA,MAAAA,EACA,KAAA,iFAIA,IAAAtG,MAEAyD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,GAAA,oBACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,4BAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAkBAvG,KAAAgJ,sBAAA,SAAAzC,GACA,GAAA2B,GAAA,KAGAzF,KAEAyD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAAiD,CAEA,OAAA7I,MAAAgI,UAAAhC,QACA,wBAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAKA,OAAA/G,sGCtHA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,iBAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAAAA,EAAA,sBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAA6H,aAAA9H,EAAAD,EAAAE,wBAAAC,UAAAH,EAAAE,wBAAA8H,WAEAlJ,KAAA,SAAAqB,EAAA6H,GACA,YAeA,IAAA1J,GAAA,SAAAwI,GACAhI,KAAAgI,UAAAA,GAAA3G,EAAAyG,SAqBA9H,KAAAmJ,0CAAA,SAAAX,EAAAY,EAAAV,EAAAnC,GACAmC,EAAAA,KACA,IAAAR,GAAA,IAGA,IAAA/F,QAAAqG,GAAA,MAAAA,EACA,KAAA,sGAIA,IAAArG,QAAAiH,GAAA,MAAAA,EACA,KAAA,sGAIA,IAAA3G,IACA+F,aAAAA,EACAY,aAAAA,GAEAlD,GACAmD,OAAAX,EAAA,QAEAvC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAAsD,CAEA,OAAAlJ,MAAAgI,UAAAhC,QACA,8CAAA,SACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAuBAvG,KAAAsJ,uCAAA,SAAAd,EAAAY,EAAAV,EAAAnC,GACAmC,EAAAA,KACA,IAAAR,GAAA,IAGA,IAAA/F,QAAAqG,GAAA,MAAAA,EACA,KAAA,mGAIA,IAAArG,QAAAiH,GAAA,MAAAA,EACA,KAAA,mGAIA,IAAA3G,IACA+F,aAAAA,EACAY,aAAAA,GAEAlD,GACAqD,UAAAb,EAAA,UACAW,OAAAX,EAAA,QAEAvC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAAsD,CAEA,OAAAlJ,MAAAgI,UAAAhC,QACA,8CAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAuBAvG,KAAAwJ,wCAAA,SAAAhB,EAAAY,EAAAV,EAAAnC,GACAmC,EAAAA,KACA,IAAAR,GAAAQ,EAAA,gBAGA,IAAAvG,QAAAqG,GAAA,MAAAA,EACA,KAAA,oGAIA,IAAArG,QAAAiH,GAAA,MAAAA,EACA,KAAA,oGAIA,IAAA3G,IACA+F,aAAAA,EACAY,aAAAA,GAEAlD,GACAmD,OAAAX,EAAA,QAEAvC,KAEAC,KAGAvB,GAAA,UACAvB,GAAA,aAAA,kBAAA,2BAAA,kBAAA,mBAAA,0BAAA,yBAAA,8BAAA,iCAAA,iCAAA,gCAAA,kCACAgD,GAAA,oBACAV,EAAAsD,CAEA,OAAAlJ,MAAAgI,UAAAhC,QACA,8CAAA,OACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAuBAvG,KAAAyJ,uCAAA,SAAAjB,EAAAY,EAAAM,EAAAhB,EAAAnC,GACAmC,EAAAA,KACA,IAAAR,GAAAwB,CAGA,IAAAvH,QAAAqG,GAAA,MAAAA,EACA,KAAA,mGAIA,IAAArG,QAAAiH,GAAA,MAAAA,EACA,KAAA,mGAIA,IAAAjH,QAAAuH,GAAA,MAAAA,EACA,KAAA,oGAIA,IAAAjH,IACA+F,aAAAA,EACAY,aAAAA,GAEAlD,GACAmD,OAAAX,EAAA,QAEAvC,KAEAC,KAGAvB,GAAA,UACAvB,GAAA,aAAA,kBAAA,2BAAA,kBAAA,mBAAA,0BAAA,yBAAA,8BAAA,iCAAA,iCAAA,gCAAA,kCACAgD,GAAA,oBACAV,EAAAsD,CAEA,OAAAlJ,MAAAgI,UAAAhC,QACA,8CAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAKA,OAAA/G,mEChRA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,gBAAA,8BAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAAAA,EAAA,oBAAAA,EAAA,mCAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAuI,iBAAAxI,EAAAD,EAAAE,wBAAAC,UAAAH,EAAAE,wBAAA8H,QAAAhI,EAAAE,wBAAAwI,wBAEA5J,KAAA,SAAAqB,EAAA6H,EAAAU,GACA,YAeA,IAAApK,GAAA,SAAAwI,GACAhI,KAAAgI,UAAAA,GAAA3G,EAAAyG,SAgBA9H,KAAA6J,sBAAA,SAAAtD,GACA,GAAA2B,GAAA,KAGAzF,KAEAyD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,oBAAA,SACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAkBAvG,KAAA8J,kCAAA,SAAAtB,EAAAjC,GACA,GAAA2B,GAAA,IAGA,IAAA/F,QAAAqG,GAAA,MAAAA,EACA,KAAA,8FAIA,IAAA/F,IACA+F,aAAAA,GAEAtC,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,mCAAA,SACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAkBAvG,KAAA+J,+BAAA,SAAAvB,EAAAjC,GACA,GAAA2B,GAAA,IAGA,IAAA/F,QAAAqG,GAAA,MAAAA,EACA,KAAA,2FAIA,IAAA/F,IACA+F,aAAAA,GAEAtC,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,iBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,mCAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAmBAvG,KAAAgK,8CAAA,SAAAxB,EAAAY,EAAA7C,GACA,GAAA2B,GAAA,IAGA,IAAA/F,QAAAqG,GAAA,MAAAA,EACA,KAAA,0GAIA,IAAArG,QAAAiH,GAAA,MAAAA,EACA,KAAA,0GAIA,IAAA3G,IACA+F,aAAAA,EACAY,aAAAA,GAEAlD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,kDAAA,SACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAkBAvG,KAAAiK,2CAAA,SAAAzB,EAAAY,EAAA7C,GACA,GAAA2B,GAAA,IAGA,IAAA/F,QAAAqG,GAAA,MAAAA,EACA,KAAA,uGAIA,IAAArG,QAAAiH,GAAA,MAAAA,EACA,KAAA,uGAIA,IAAA3G,IACA+F,aAAAA,EACAY,aAAAA,GAEAlD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,kDAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAmBAvG,KAAAkK,2CAAA,SAAA1B,EAAAY,EAAA7C,GACA,GAAA2B,GAAA,IAGA,IAAA/F,QAAAqG,GAAA,MAAAA,EACA,KAAA,uGAIA,IAAArG,QAAAiH,GAAA,MAAAA,EACA,KAAA,uGAIA,IAAA3G,IACA+F,aAAAA,EACAY,aAAAA,GAEAlD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,kDAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAiBAvG,KAAAmK,mBAAA,SAAA5D,GACA,GAAA2B,GAAA,KAGAzF,KAEAyD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,KACAgD,GAAA,oBACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,oBAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAkBAvG,KAAAoK,mBAAA,SAAAC,EAAA9D,GACA,GAAA2B,GAAAmC,CAGA,IAAAlI,QAAAkI,GAAA,MAAAA,EACA,KAAA,iFAIA,IAAA5H,MAEAyD,KAEAC,KAEAC,KAGAvB,GAAA,UACAvB,GAAA,oBACAgD,GAAA,cACAV,EAAA,IAEA,OAAA5F,MAAAgI,UAAAhC,QACA,oBAAA,MACAvD,EAAAyD,EAAAC,EAAAC,EAAA8B,EACArD,EAAAvB,EAAAgD,EAAAV,EAAAW,IAKA,OAAA/G,sGChZA,SAAA2B,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,gBAAA,wBAAA,iBAAA,qBAAA,yBAAA,4BAAA,wBAAA,6BAAA,iBAAA,qBAAA,sBAAA,gBAAA,iBAAA,mBAAA,uBAAA,mBAAA,wBAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,UAEAC,EAAAD,QAAA2B,EAAAT,EAAA,eAAAA,EAAA,mBAAAA,EAAA,2BAAAA,EAAA,oBAAAA,EAAA,wBAAAA,EAAA,4BAAAA,EAAA,+BAAAA,EAAA,2BAAAA,EAAA,gCAAAA,EAAA,oBAAAA,EAAA,wBAAAA,EAAA,yBAAAA,EAAA,mBAAAA,EAAA,oBAAAA,EAAA,sBAAAA,EAAA,0BAAAA,EAAA,sBAAAA,EAAA,6BAEA,SAAAW,EAAA6H,EAAAoB,EAAAhC,EAAAiC,EAAAC,EAAA3B,EAAA4B,EAAAb,EAAAvB,EAAAqC,EAAAC,EAAA/B,EAAAb,EAAAK,EAAAO,EAAAM,EAAAU,GACA,YAiCA,IAAAnK,IAKA6B,UAAAA,EAKA6H,QAAAA,EAKAoB,gBAAAA,EAKAhC,SAAAA,EAKAiC,aAAAA,EAKAC,iBAAAA,EAKA3B,oBAAAA,EAKA4B,gBAAAA,EAKAb,qBAAAA,EAKAvB,SAAAA,EAKAqC,aAAAA,EAKAC,cAAAA,EAKA/B,QAAAA,EAKAb,WAAAA,EAKAK,aAAAA,EAKAO,iBAAAA,EAKAM,aAAAA,EAKAU,iBAAAA,EAGA,OAAAnK,oeCvIA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAA8H,QAAA/H,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAgBA,IAAA7B,GAAA,YAgCA,OAnBAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAQA,MAPAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,uBACA6E,EAAA,qBAAAxG,EAAA0E,cAAAX,EAAA,qBAAA,YAGAyC,GAOArI,EAAAwC,UAAA,qBAAAG,OAIA3C,6CC/DA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAkJ,gBAAAnJ,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAgBA,IAAA7B,GAAA,YA6EA,OA3DAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAuBA,MAtBAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,YACA6E,EAAA,OAAAxG,EAAA0E,cAAAX,EAAA,OAAA,YAEAA,EAAApC,eAAA,aACA6E,EAAA,QAAAxG,EAAA0E,cAAAX,EAAA,QAAA,WAEAA,EAAApC,eAAA,aACA6E,EAAA,WAAAxG,EAAA0E,cAAAX,EAAA,WAAA,WAEAA,EAAApC,eAAA,WACA6E,EAAA,MAAAxG,EAAA0E,cAAAX,EAAA,MAAA,WAEAA,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,WAEAA,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,YAGAyC,GAOArI,EAAAwC,UAAA,OAAAG,OAKA3C,EAAAwC,UAAA,QAAAG,OAKA3C,EAAAwC,UAAA,WAAAG,OAKA3C,EAAAwC,UAAA,MAAAG,OAKA3C,EAAAwC,UAAA,GAAAG,OAKA3C,EAAAwC,UAAA,GAAAG,OAIA3C,8CC5GA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAkH,SAAAnH,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAgBA,IAAA7B,GAAA,YA2DA,OA3CAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAiBA,MAhBAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,YACA6E,EAAA,OAAAxG,EAAA0E,cAAAX,EAAA,OAAA,WAEAA,EAAApC,eAAA,OACA6E,EAAA,EAAAxG,EAAA0E,cAAAX,EAAA,EAAA,YAEAA,EAAApC,eAAA,UACA6E,EAAA,KAAAxG,EAAA0E,cAAAX,EAAA,KAAA,WAEAA,EAAApC,eAAA,UACA6E,EAAA,KAAAxG,EAAA0E,cAAAX,EAAA,KAAA,YAGAyC,GAOArI,EAAAwC,UAAA,OAAAG,OAKA3C,EAAAwC,UAAA,EAAAG,OAKA3C,EAAAwC,UAAA,KAAAG,OAKA3C,EAAAwC,UAAA,KAAAG,OAIA3C,8CC1FA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,uBAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAAAA,EAAA,qBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAmJ,aAAApJ,EAAAD,EAAAE,wBAAAC,UAAAH,EAAAE,wBAAAuJ,iBAEA3K,KAAA,SAAAqB,EAAAsJ,GACA,YAgBA,IAAAnL,GAAA,YA0DA,OA1CAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAiBA,MAhBAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,OACA6E,EAAA,EAAAxG,EAAA0E,cAAAX,EAAA,EAAA,YAEAA,EAAApC,eAAA,SACA6E,EAAA,IAAAxG,EAAA0E,cAAAX,EAAA,IAAA,WAEAA,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,WAEAA,EAAApC,eAAA,eACA6E,EAAA,UAAAxG,EAAA0E,cAAAX,EAAA,WAAAuF,MAGA9C,GAOArI,EAAAwC,UAAA,EAAAG,OAKA3C,EAAAwC,UAAA,IAAAG,OAKA3C,EAAAwC,UAAA,GAAAG,OAIA3C,EAAAwC,UAAA,UAAAG,OAIA3C,mECzFA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAoJ,iBAAArJ,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAgBA,IAAA7B,GAAA,YA6EA,OA3DAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAuBA,MAtBAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,eACA6E,EAAA,UAAAxG,EAAA0E,cAAAX,EAAA,UAAA,WAEAA,EAAApC,eAAA,aACA6E,EAAA,QAAAxG,EAAA0E,cAAAX,EAAA,QAAA,WAEAA,EAAApC,eAAA,UACA6E,EAAA,KAAAxG,EAAA0E,cAAAX,EAAA,KAAA,WAEAA,EAAApC,eAAA,aACA6E,EAAA,WAAAxG,EAAA0E,cAAAX,EAAA,WAAA,WAEAA,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,WAEAA,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,YAGAyC,GAOArI,EAAAwC,UAAA,UAAAG,OAKA3C,EAAAwC,UAAA,QAAAG,OAKA3C,EAAAwC,UAAA,KAAAG,OAKA3C,EAAAwC,UAAA,WAAAG,OAKA3C,EAAAwC,UAAA,GAAAG,OAKA3C,EAAAwC,UAAA,GAAAG,OAIA3C,8CC5GA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,wBAAA,qBAAA,0BAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAAAA,EAAA,qBAAAA,EAAA,kBAAAA,EAAA,wBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAyH,oBAAA1H,EAAAD,EAAAE,wBAAAC,UAAAH,EAAAE,wBAAAkJ,gBAAApJ,EAAAE,wBAAAmJ,aAAArJ,EAAAE,wBAAAoJ,oBAEAxK,KAAA,SAAAqB,EAAAiJ,EAAAC,EAAAC,GACA,YAgBA,IAAAhL,GAAA,YAuEA,OArDAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAuBA,MAtBAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,qBACA6E,EAAA,mBAAAxG,EAAA0E,cAAAX,EAAA,oBAAAkF,KAEAlF,EAAApC,eAAA,sBACA6E,EAAA,oBAAAxG,EAAA0E,cAAAX,EAAA,qBAAA,YAEAA,EAAApC,eAAA,iBACA6E,EAAA,eAAAxG,EAAA0E,cAAAX,EAAA,gBAAAmF,KAEAnF,EAAApC,eAAA,mBACA6E,EAAA,cAAAxG,EAAA0E,cAAAX,EAAA,eAAAmF,KAEAnF,EAAApC,eAAA,mBACA6E,EAAA,cAAAxG,EAAA0E,cAAAX,EAAA,eAAAoF,KAEApF,EAAApC,eAAA,2BACA6E,EAAA,yBAAAxG,EAAA0E,cAAAX,EAAA,0BAAA,aAGAyC,GAMArI,EAAAwC,UAAA,mBAAAG,OAIA3C,EAAAwC,UAAA,oBAAAG,OAIA3C,EAAAwC,UAAA,eAAAG,OAIA3C,EAAAwC,UAAA,cAAAG,OAIA3C,EAAAwC,UAAA,cAAAG,OAIA3C,EAAAwC,UAAA,yBAAAG,OAIA3C,gHCtGA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,sBAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAAAA,EAAA,oBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAqJ,gBAAAtJ,EAAAD,EAAAE,wBAAAC,UAAAH,EAAAE,wBAAAsJ,gBAEA1K,KAAA,SAAAqB,EAAAqJ,GACA,YAgBA,IAAAlL,GAAA,YA+CA,OAhCAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAcA,MAbAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,mBACA6E,EAAA,iBAAAxG,EAAA0E,cAAAX,EAAA,iBAAA,WAEAA,EAAApC,eAAA,mBACA6E,EAAA,iBAAAxG,EAAA0E,cAAAX,EAAA,iBAAA,WAEAA,EAAApC,eAAA,mBACA6E,EAAA,iBAAAxG,EAAA0E,cAAAX,EAAA,kBAAAsF,MAGA7C,GAMArI,EAAAwC,UAAA,iBAAAG,OAIA3C,EAAAwC,UAAA,iBAAAG,OAIA3C,EAAAwC,UAAA,iBAAAG,OAIA3C,kEC9EA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,YAAA,yBAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,gBAAAA,EAAA,uBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAwI,qBAAAzI,EAAAD,EAAAE,wBAAAC,UAAAH,EAAAE,wBAAAqJ,mBAEAzK,KAAA,SAAAqB,EAAAoJ,GACA,YAiBA,IAAAjL,GAAA,WACA,GAAAoD,GAAA5C,IAIA,OAHA4C,GAAA,GAAAmB,OACAsD,OAAAuD,eAAAhI,EAAApD,GAEAoD,EAsBA,OAZApD,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAMA,MALAzC,KACAyC,EAAAA,GAAA,GAAArI,GACA6B,EAAAiG,oBAAAlC,EAAAyC,EAAA4C,IAGA5C,GAMArI,qEC3DA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAiH,SAAAlH,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAgBA,IAAA7B,GAAA,YA2DA,OA3CAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAiBA,MAhBAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,WAEAA,EAAApC,eAAA,UACA6E,EAAA,KAAAxG,EAAA0E,cAAAX,EAAA,KAAA,WAEAA,EAAApC,eAAA,SACA6E,EAAA,IAAAxG,EAAA0E,cAAAX,EAAA,IAAA,WAEAA,EAAApC,eAAA,SACA6E,EAAA,IAAAxG,EAAA0E,cAAAX,EAAA,IAAA,aAGAyC,GAOArI,EAAAwC,UAAA,GAAAG,OAKA3C,EAAAwC,UAAA,KAAAG,OAKA3C,EAAAwC,UAAA,IAAAG,OAKA3C,EAAAwC,UAAA,IAAAG,OAIA3C,8CC1FA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAsJ,aAAAvJ,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAgBA,IAAA7B,GAAA,YAuBA,OAXAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAKA,MAJAzC,KACAyC,EAAAA,GAAA,GAAArI,IAGAqI,GAMArI,8CCtDA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAuJ,cAAAxJ,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAgBA,IAAA7B,GAAA,YAoEA,OAnDAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAoBA,MAnBAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,UACA6E,EAAA,KAAAxG,EAAA0E,cAAAX,EAAA,KAAA,WAEAA,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,WAEAA,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,WAEAA,EAAApC,eAAA,SACA6E,EAAA,IAAAxG,EAAA0E,cAAAX,EAAA,IAAA,YAEAA,EAAApC,eAAA,QACA6E,EAAA,GAAAxG,EAAA0E,cAAAX,EAAA,GAAA,YAGAyC,GAOArI,EAAAwC,UAAA,KAAAG,OAKA3C,EAAAwC,UAAA,GAAAG,OAKA3C,EAAAwC,UAAA,GAAAG,OAKA3C,EAAAwC,UAAA,IAAAG,OAKA3C,EAAAwC,UAAA,GAAAG,OAIA3C,8CCnGA,SAAA0B,EAAAC,GACA,kBAAAzB,IAAAA,EAAAC,IAEAD,GAAA,aAAAyB,GACA,gBAAA1B,IAAAA,EAAAD,QAEAC,EAAAD,QAAA2B,EAAAT,EAAA,kBAGAQ,EAAAE,0BACAF,EAAAE,4BAEAF,EAAAE,wBAAAwH,QAAAzH,EAAAD,EAAAE,wBAAAC,aAEArB,KAAA,SAAAqB,GACA,YAgBA,IAAA7B,GAAA,YAyCA,OA3BAA,GAAA8H,oBAAA,SAAAlC,EAAAyC,GAWA,MAVAzC,KACAyC,EAAAA,GAAA,GAAArI,GAEA4F,EAAApC,eAAA,SACA6E,EAAA,IAAAxG,EAAA0E,cAAAX,EAAA,IAAA,WAEAA,EAAApC,eAAA,aACA6E,EAAA,QAAAxG,EAAA0E,cAAAX,EAAA,QAAAiC,UAGAQ,GAOArI,EAAAwC,UAAA,IAAAG,OAKA3C,EAAAwC,UAAA,QAAAG,OAIA3C;;;;;;;;;;;;;;;;AChFA,YACA,IAAAqL,GAAAnK,EAAA,oBACA2H,EAAA,WACA,QAAAA,GAAAyC,EAAAC,GACA/K,KAAA8K,OAAAA,EACA9K,KAAAgL,IAAAD,EAAAC,IACAhL,KAAAiL,GAAAF,EAAAE,GACAjL,KAAA2B,KAAAoJ,EAAApJ,KACA3B,KAAAkL,IAAAH,EAAAG,IAQA,MANA7C,GAAArG,UAAAmJ,SAAA,WACA,MAAA,IAAAC,SAAA,SAAAC,EAAAC,GACAD,EAAA,WAAArL,KAAAkL,MACAK,KAAAvL,QAGAqI,KAEAC,EAAA,WACA,QAAAA,GAAAwC,EAAAC,GACA/K,KAAA8K,OAAAA,EACA9K,KAAA6B,KAAAkJ,EAAAlJ,KACA7B,KAAAwL,OAAAT,EAAAS,OACAxL,KAAA2B,KAAAoJ,EAAApJ,KAeA,MAbA2G,GAAAtG,UAAAyJ,cAAA,WACA,MAAA,IAAAL,SAAA,SAAAC,EAAAC,GACA,GAAAI,GAAA,GAAAb,GAAAzC,aAAApI,KAAA8K,OACAY,GAAAnD,2BAAAvI,KAAA6B,KAAA,SAAA8J,EAAAC,GACA,MAAAD,GACAL,EAAAK,IACAC,EAAAA,EAAAnH,IAAA,SAAAoH,GACA,MAAA,IAAAxD,GAAArI,KAAA8K,OAAAe,IACAN,KAAAvL,WACAqL,GAAAO,KACAL,KAAAvL,QACAuL,KAAAvL,QAEAsI,KAEArI,EAAA,WACA,QAAAA,GAAA8K,GACA/K,KAAA8K,OAAA,GAAAD,GAAAxJ,UACA0J,EAAAe,OACA9L,KAAA8K,OAAAvJ,SAAAwJ,EAAAe,MACAf,EAAAjI,MACA9C,KAAA8K,OAAArJ,gBAAAC,OAAAyD,OAAA4F,EAAAjI,KACA9C,KAAA8K,OAAArJ,gBAAAC,OAAA2D,aAAA,SAeA,MAbApF,GAAA+B,UAAA+J,cAAA,WACA,MAAA,IAAAX,SAAA,SAAAC,EAAAC,GACA,GAAAI,GAAA,GAAAb,GAAAzC,aAAApI,KAAA8K,OACAY,GAAAjD,eAAA,KAAA,SAAAkD,EAAAK,GACA,MAAAL,GACAL,EAAAK,IACAK,EAAAA,EAAAvH,IAAA,SAAAwH,GACA,MAAA,IAAA3D,GAAAtI,KAAA8K,OAAAmB,IACAV,KAAAvL,WACAqL,GAAAW,KACAT,KAAAvL,QACAuL,KAAAvL,QAEAC,IAEAR,GAAAD,QAAAS,yECxDA,QAAAiM,MA4DA,QAAAC,GAAAtE,GACA,IAAAuE,EAAAvE,GAAA,MAAAA,EACA,IAAAwE,KACA,KAAA,GAAAvJ,KAAA+E,GACAyE,EAAAD,EAAAvJ,EAAA+E,EAAA/E,GAEA,OAAAuJ,GAAA3H,KAAA,KAYA,QAAA4H,GAAAD,EAAAvJ,EAAAyJ,GACA,GAAA,MAAAA,EACA,GAAAxI,MAAAC,QAAAuI,GACAA,EAAAzH,QAAA,SAAA0H,GACAF,EAAAD,EAAAvJ,EAAA0J,SAEA,IAAAJ,EAAAG,GACA,IAAA,GAAAE,KAAAF,GACAD,EAAAD,EAAAvJ,EAAA,IAAA2J,EAAA,IAAAF,EAAAE,QAGAJ,GAAAK,KAAAzJ,mBAAAH,GACA,IAAAG,mBAAAsJ,QAEA,QAAAA,GACAF,EAAAK,KAAAzJ,mBAAAH,IAkBA,QAAA6J,GAAA1F,GAMA,IAAA,GAHA2F,GACAC,EAHAhF,KACAwE,EAAApF,EAAA6F,MAAA,KAIAnM,EAAA,EAAAoM,EAAAV,EAAArL,OAAAL,EAAAoM,IAAApM,EACAiM,EAAAP,EAAA1L,GACAkM,EAAAD,EAAAI,QAAA,KACAH,IAAA,EACAhF,EAAAoF,mBAAAL,IAAA,GAEA/E,EAAAoF,mBAAAL,EAAAM,MAAA,EAAAL,KACAI,mBAAAL,EAAAM,MAAAL,EAAA,GAIA,OAAAhF,GA8DA,QAAAsF,GAAAlG,GACA,GAEAmG,GACAC,EACAzG,EACA2F,EALAe,EAAArG,EAAA6F,MAAA,SACAS,IAMAD,GAAAE,KAEA,KAAA,GAAA7M,GAAA,EAAAoM,EAAAO,EAAAtM,OAAAL,EAAAoM,IAAApM,EACA0M,EAAAC,EAAA3M,GACAyM,EAAAC,EAAAL,QAAA,KACApG,EAAAyG,EAAAH,MAAA,EAAAE,GAAAK,cACAlB,EAAAmB,EAAAL,EAAAH,MAAAE,EAAA,IACAG,EAAA3G,GAAA2F,CAGA,OAAAgB,GAWA,QAAAI,GAAAC,GACA,MAAA,cAAAC,KAAAD,GAiDA,QAAAE,GAAAC,EAAAhD,GACAA,EAAAA,MACA/K,KAAA+N,IAAAA,EACA/N,KAAAgO,IAAAhO,KAAA+N,IAAAC,IAEAhO,KAAA8F,KAAA,QAAA9F,KAAA+N,IAAAE,SAAA,KAAAjO,KAAAgO,IAAAE,cAAA,SAAAlO,KAAAgO,IAAAE,eAAA,mBAAAlO,MAAAgO,IAAAE,aACAlO,KAAAgO,IAAAG,aACA,KACAnO,KAAAoO,WAAApO,KAAA+N,IAAAC,IAAAI,UACA,IAAA5C,GAAAxL,KAAAgO,IAAAxC,MAEA,QAAAA,IACAA,EAAA,KAEAxL,KAAAqO,qBAAA7C,GACAxL,KAAAwG,OAAAxG,KAAAsO,QAAAnB,EAAAnN,KAAAgO,IAAAO,yBAIAvO,KAAAwG,OAAA,gBAAAxG,KAAAgO,IAAAQ,kBAAA,gBACAxO,KAAAyO,qBAAAzO,KAAAwG,QAEA,OAAAxG,KAAA8F,MAAAiI,EAAAW,cACA1O,KAAA6F,KAAA7F,KAAAgO,IAAArI,SAEA3F,KAAA6F,KAAA,QAAA7F,KAAA+N,IAAAE,OACAjO,KAAA2O,WAAA3O,KAAA8F,KAAA9F,KAAA8F,KAAA9F,KAAAgO,IAAArI,UACA,KAiEA,QAAAiJ,GAAAX,EAAAtL,GACA,GAAA5C,GAAAC,IACAA,MAAA6O,OAAA7O,KAAA6O,WACA7O,KAAAiO,OAAAA,EACAjO,KAAA2C,IAAAA,EACA3C,KAAAwG,UACAxG,KAAA8O,WACA9O,KAAA+O,GAAA,MAAA,WACA,GAAApD,GAAA,KACAqD,EAAA,IAEA,KACAA,EAAA,GAAAlB,GAAA/N,GACA,MAAAG,GAgBA,MAfAyL,GAAA,GAAA/K,OAAA,0CACA+K,EAAAsD,OAAA,EACAtD,EAAAuD,SAAAhP,EAEAH,EAAAiO,KAEArC,EAAAwD,YAAA,mBAAApP,GAAAiO,IAAAE,aAAAnO,EAAAiO,IAAAG,aAAApO,EAAAiO,IAAArI,SAEAgG,EAAAH,OAAAzL,EAAAiO,IAAAxC,OAAAzL,EAAAiO,IAAAxC,OAAA,KACAG,EAAAyD,WAAAzD,EAAAH,SAEAG,EAAAwD,YAAA,KACAxD,EAAAH,OAAA,MAGAzL,EAAAwG,SAAAoF,GAGA5L,EAAAsP,KAAA,WAAAL,EAEA,IAAAM,EACA,KACAvP,EAAAwP,cAAAP,KACAM,EAAA,GAAA1O,OAAAoO,EAAAZ,YAAA,8BACAkB,EAAAJ,SAAAvD,EACA2D,EAAA3J,SAAAqJ,EACAM,EAAA9D,OAAAwD,EAAAxD,QAEA,MAAAtL,GACAoP,EAAApP,EAIAoP,EACAvP,EAAAwG,SAAA+I,EAAAN,GAEAjP,EAAAwG,SAAA,KAAAyI,KAuZA,QAAAQ,GAAA7M,EAAA8M,GACA,GAAA1B,GAAAnJ,EAAA,SAAAjC,EAEA,OADA8M,IAAA1B,EAAAjH,IAAA2I,GACA1B,EAz0BA,GAAA7M,EACA,oBAAArB,QACAqB,EAAArB,OACA,mBAAAE,MACAmB,EAAAnB,MAEA2P,QAAAC,KAAA,uEACAzO,EAAAlB,KAGA,IAAA4P,GAAAlP,EAAA,WACAmP,EAAAnP,EAAA,kBACA0L,EAAA1L,EAAA,eACAoP,EAAApP,EAAA,iBACAqP,EAAArP,EAAA,mBAYAkE,EAAApF,EAAAC,EAAAD,QAAA,SAAAyO,EAAAtL,GAEA,MAAA,kBAAAA,GACA,GAAAnD,GAAAoP,QAAA,MAAAX,GAAAnH,IAAAnE,GAIA,GAAAqN,UAAAhP,OACA,GAAAxB,GAAAoP,QAAA,MAAAX,GAGA,GAAAzO,GAAAoP,QAAAX,EAAAtL,GAGAnD,GAAAoP,QAAAA,EAMAhK,EAAAqL,OAAA,WACA,MAAA/O,EAAAgP,gBACAhP,EAAAiP,UAAA,SAAAjP,EAAAiP,SAAAC,UACAlP,EAAAmP,eACA,MAAA,IAAAH,eAEA,KAAA,MAAA,IAAAG,eAAA,qBAAA,MAAAnQ,IACA,IAAA,MAAA,IAAAmQ,eAAA,sBAAA,MAAAnQ,IACA,IAAA,MAAA,IAAAmQ,eAAA,sBAAA,MAAAnQ,IACA,IAAA,MAAA,IAAAmQ,eAAA,kBAAA,MAAAnQ,IAEA,KAAAU,OAAA,yDAWA,IAAA8M,GAAA,GAAAA,KACA,SAAApN,GAAA,MAAAA,GAAAoN,QACA,SAAApN,GAAA,MAAAA,GAAAkB,QAAA,eAAA,IAmDAoD,GAAA0L,gBAAAnE,EAkCAvH,EAAA+H,YAAAA,EASA/H,EAAA2L,OACAC,KAAA,YACAC,KAAA,mBACAC,IAAA,kBACAC,WAAA,oCACAC,KAAA,oCACAC,YAAA,qCAYAjM,EAAAuH,WACA2E,oCAAA3E,EACA4E,mBAAAC,KAAAC,WAYArM,EAAAqK,OACA6B,oCAAAnE,EACAoE,mBAAAC,KAAA/B,OA0HAc,EAAAjC,EAAA9L,WAaA8L,EAAA9L,UAAA2M,WAAA,SAAA1H,GACA,GAAAgI,GAAArK,EAAAqK,MAAAjP,KAAA2B,KACA,OAAA3B,MAAA+N,IAAAmD,QACAlR,KAAA+N,IAAAmD,QAAAlR,KAAAiH,KAEAgI,GAAAtB,EAAA3N,KAAA2B,QACAsN,EAAArK,EAAAqK,MAAA,qBAEAA,GAAAhI,IAAAA,EAAAjG,QAAAiG,YAAAI,SACA4H,EAAAhI,GACA,OAUA6G,EAAA9L,UAAAmP,QAAA,WACA,GAAApD,GAAA/N,KAAA+N,IACAE,EAAAF,EAAAE,OACAtL,EAAAoL,EAAApL,IAEAyO,EAAA,UAAAnD,EAAA,IAAAtL,EAAA,KAAA3C,KAAAwL,OAAA,IACAG,EAAA,GAAA/K,OAAAwQ,EAKA,OAJAzF,GAAAH,OAAAxL,KAAAwL,OACAG,EAAAsC,OAAAA,EACAtC,EAAAhJ,IAAAA,EAEAgJ,GAOA/G,EAAAkJ,SAAAA,EAqEA8B,EAAAhB,EAAA5M,WACA6N,EAAAjB,EAAA5M,WAwBA4M,EAAA5M,UAAAL,KAAA,SAAAA,GAEA,MADA3B,MAAAsF,IAAA,eAAAV,EAAA2L,MAAA5O,IAAAA,GACA3B,MAuBA4O,EAAA5M,UAAA6E,OAAA,SAAAlF,GAEA,MADA3B,MAAAsF,IAAA,SAAAV,EAAA2L,MAAA5O,IAAAA,GACA3B,MAaA4O,EAAA5M,UAAAgD,KAAA,SAAAqM,EAAAC,EAAAvG,GAOA,OANAA,IACAA,GACApJ,KAAA,kBAAA4P,MAAA,QAAA,SAIAxG,EAAApJ,MACA,IAAA,QACA3B,KAAAsF,IAAA,gBAAA,SAAAiM,KAAAF,EAAA,IAAAC,GACA,MAEA,KAAA,OACAtR,KAAAiF,SAAAoM,EACArR,KAAAkF,SAAAoM,EAGA,MAAAtR,OAiBA4O,EAAA5M,UAAAuD,MAAA,SAAAgH,GAGA,MAFA,gBAAAA,KAAAA,EAAAJ,EAAAI,IACAA,GAAAvM,KAAA6O,OAAAnC,KAAAH,GACAvM,MAoBA4O,EAAA5M,UAAA2E,OAAA,SAAAC,EAAA4K,EAAAzG,GACA,GAAA/K,KAAAyR,MACA,KAAA7Q,OAAA,6CAIA,OADAZ,MAAA0R,eAAAC,OAAA/K,EAAA4K,EAAAzG,GAAAyG,EAAA3P,MACA7B,MAGA4O,EAAA5M,UAAA0P,aAAA,WAIA,MAHA1R,MAAA4R,YACA5R,KAAA4R,UAAA,GAAA1Q,GAAA2Q,UAEA7R,KAAA4R,WAYAhD,EAAA5M,UAAAuE,SAAA,SAAAoF,EAAAqD,GACA,GAAAS,GAAAzP,KAAA8R,SACA9R,MAAA+R,eAEApG,GACA3L,KAAAqP,KAAA,QAAA1D,GAGA8D,EAAA9D,EAAAqD,IASAJ,EAAA5M,UAAAgQ,iBAAA,WACA,GAAArG,GAAA,GAAA/K,OAAA,+JACA+K,GAAAsG,aAAA,EAEAtG,EAAAH,OAAAxL,KAAAwL,OACAG,EAAAsC,OAAAjO,KAAAiO,OACAtC,EAAAhJ,IAAA3C,KAAA2C,IAEA3C,KAAAuG,SAAAoF,IAIAiD,EAAA5M,UAAAkQ,OAAAtD,EAAA5M,UAAAmQ,GAAAvD,EAAA5M,UAAAoQ,MAAA,WAEA,MADA1C,SAAAC,KAAA,0DACA3P,MAIA4O,EAAA5M,UAAAqQ,KAAAzD,EAAA5M,UAAAsQ,MAAA,WACA,KAAA1R,OAAA,gEASAgO,EAAA5M,UAAAuQ,mBAAA,WACA,GAAAhN,GAAAvF,KAAA6O,OAAAnK,KAAA,IAKA,IAJAa,IACAvF,KAAA2C,MAAA3C,KAAA2C,IAAAqK,QAAA,MAAA,EAAA,IAAA,KAAAzH,GAGAvF,KAAAwS,MAAA,CACA,GAAApF,GAAApN,KAAA2C,IAAAqK,QAAA,IACA,IAAAI,GAAA,EAAA,CACA,GAAAqF,GAAAzS,KAAA2C,IAAA+P,UAAAtF,EAAA,GAAAN,MAAA,IACAgD,GAAA9P,KAAAwS,OACAC,EAAAE,KAAA3S,KAAAwS,OAEAC,EAAAE,OAEA3S,KAAA2C,IAAA3C,KAAA2C,IAAA+P,UAAA,EAAAtF,GAAA,IAAAqF,EAAA/N,KAAA,QAaAkK,EAAA5M,UAAA4Q,QAAA,SAAA/K,GAEA,MAAAA,IAAA,gBAAAA,KAAA9D,MAAAC,QAAA6D,IAAA,oBAAAR,OAAArF,UAAAM,SAAAvB,KAAA8G,IAYA+G,EAAA5M,UAAA8E,IAAA,SAAA2I,GACA,GAAA1P,GAAAC,KACAgO,EAAAhO,KAAAgO,IAAApJ,EAAAqL,SACA7K,EAAApF,KAAA4R,WAAA5R,KAAAyR,KAEAzR,MAAA6S,YACAnD,QAAAC,KAAA,yEAEA3P,KAAA6S,YAAA,EAGA7S,KAAA8R,UAAArC,GAAAvD,EAGA8B,EAAA8E,mBAAA,WACA,GAAAC,GAAA/E,EAAA+E,UAIA,IAHAA,GAAA,GAAAhT,EAAAiT,uBACAjB,aAAAhS,EAAAiT,uBAEA,GAAAD,EAAA,CAMA,GAAAvH,EACA,KAAAA,EAAAwC,EAAAxC,OAAA,MAAAtL,GAAAsL,EAAA,EAEA,IAAAA,EAAA,CACA,GAAAzL,EAAAkT,UAAAlT,EAAAmT,SAAA,MACA,OAAAnT,GAAAiS,mBAEAjS,EAAAsP,KAAA,QAIA,IAAA8D,GAAA,SAAAC,EAAAlT,GACAA,EAAAmT,MAAA,IACAnT,EAAAoT,QAAApT,EAAAqT,OAAArT,EAAAmT,MAAA,KAEAnT,EAAAkT,UAAAA,EACArT,EAAAsP,KAAA,WAAAnP,GAEA,IAAAF,KAAAwT,aAAA,YACA,IACAxF,EAAAyF,WAAAN,EAAA5H,KAAA,KAAA,YACAyC,EAAA0F,SACA1F,EAAA0F,OAAAD,WAAAN,EAAA5H,KAAA,KAAA,WAEA,MAAArL,IAuBA,GAfAF,KAAAuS,qBAEAvS,KAAA2T,eAGA3T,KAAAiF,UAAAjF,KAAAkF,SACA8I,EAAA4F,KAAA5T,KAAAiO,OAAAjO,KAAA2C,KAAA,EAAA3C,KAAAiF,SAAAjF,KAAAkF,UAEA8I,EAAA4F,KAAA5T,KAAAiO,OAAAjO,KAAA2C,KAAA,GAIA3C,KAAA6T,mBAAA7F,EAAA8F,iBAAA,IAGA9T,KAAA4R,WAAA,OAAA5R,KAAAiO,QAAA,QAAAjO,KAAAiO,QAAA,gBAAA7I,KAAApF,KAAA4S,QAAAxN,GAAA,CAEA,GAAAjC,GAAAnD,KAAA8O,QAAA,gBACA3C,EAAAnM,KAAA+T,aAAAnP,EAAAuH,UAAAhJ,EAAAA,EAAA2J,MAAA,KAAA,GAAA,KACAX,GAAAwB,EAAAxK,KACAgJ,EAAAvH,EAAAuH,UAAA,qBAEAA,IAAA/G,EAAA+G,EAAA/G,IAIA,IAAA,GAAAwB,KAAA5G,MAAAwG,OACA,MAAAxG,KAAAwG,OAAAI,IACAoH,EAAAgG,iBAAApN,EAAA5G,KAAAwG,OAAAI,GAaA,OAVA5G,MAAA0O,gBACAV,EAAAE,aAAAlO,KAAA0O,eAIA1O,KAAAqP,KAAA,UAAArP,MAIAgO,EAAAvH,KAAA,mBAAArB,GAAAA,EAAA,MACApF,MAaA4E,EAAAqP,IAAA,SAAAtR,EAAAyC,EAAAqK,GACA,GAAA1B,GAAAnJ,EAAA,MAAAjC,EAIA,OAHA,kBAAAyC,KAAAqK,EAAArK,EAAAA,EAAA,MACAA,GAAA2I,EAAAxI,MAAAH,GACAqK,GAAA1B,EAAAjH,IAAA2I,GACA1B,GAaAnJ,EAAAsP,KAAA,SAAAvR,EAAAyC,EAAAqK,GACA,GAAA1B,GAAAnJ,EAAA,OAAAjC,EAIA,OAHA,kBAAAyC,KAAAqK,EAAArK,EAAAA,EAAA,MACAA,GAAA2I,EAAAtH,KAAArB,GACAqK,GAAA1B,EAAAjH,IAAA2I,GACA1B,GAaAnJ,EAAAmG,QAAA,SAAApI,EAAAyC,EAAAqK,GACA,GAAA1B,GAAAnJ,EAAA,UAAAjC,EAIA,OAHA,kBAAAyC,KAAAqK,EAAArK,EAAAA,EAAA,MACAA,GAAA2I,EAAAtH,KAAArB,GACAqK,GAAA1B,EAAAjH,IAAA2I,GACA1B,GAkBAnJ,EAAA,IAAA4K,EACA5K,EAAA,OAAA4K,EAYA5K,EAAAuP,MAAA,SAAAxR,EAAAyC,EAAAqK,GACA,GAAA1B,GAAAnJ,EAAA,QAAAjC,EAIA,OAHA,kBAAAyC,KAAAqK,EAAArK,EAAAA,EAAA,MACAA,GAAA2I,EAAAtH,KAAArB,GACAqK,GAAA1B,EAAAjH,IAAA2I,GACA1B,GAaAnJ,EAAAwP,KAAA,SAAAzR,EAAAyC,EAAAqK,GACA,GAAA1B,GAAAnJ,EAAA,OAAAjC,EAIA,OAHA,kBAAAyC,KAAAqK,EAAArK,EAAAA,EAAA,MACAA,GAAA2I,EAAAtH,KAAArB,GACAqK,GAAA1B,EAAAjH,IAAA2I,GACA1B,GAaAnJ,EAAAyP,IAAA,SAAA1R,EAAAyC,EAAAqK,GACA,GAAA1B,GAAAnJ,EAAA,MAAAjC,EAIA,OAHA,kBAAAyC,KAAAqK,EAAArK,EAAAA,EAAA,MACAA,GAAA2I,EAAAtH,KAAArB,GACAqK,GAAA1B,EAAAjH,IAAA2I,GACA1B,mHC73BA,QAAA+B,GAAAL,GACA,GAAA6E,GAAAlI,EAAAqD,GAAApI,OAAArF,UAAAM,SAAAvB,KAAA0O,GAAA,EACA,OAAA,sBAAA6E,EAJA,GAAAlI,GAAA1L,EAAA,cAOAjB,GAAAD,QAAAsQ,2CCNA,QAAA1D,GAAAvE,GACA,MAAA,QAAAA,GAAA,gBAAAA,GAGApI,EAAAD,QAAA4M,2BCKA,QAAAyD,GAAAhI,GACA,GAAAA,EAAA,MAAA0M,GAAA1M,GAWA,QAAA0M,GAAA1M,GACA,IAAA,GAAA/E,KAAA+M,GAAA7N,UACA6F,EAAA/E,GAAA+M,EAAA7N,UAAAc,EAEA,OAAA+E,GA9BA,GAAAuE,GAAA1L,EAAA,cAMAjB,GAAAD,QAAAqQ,EAkCAA,EAAA7N,UAAA+P,aAAA,WAKA,MAJA/R,MAAAwU,SAAA,EACAxU,KAAAyU,iBAAA,EACA1C,aAAA/R,KAAA0U,QACA3C,aAAA/R,KAAAgT,uBACAhT,MAYA6P,EAAA7N,UAAAiN,MAAA,SAAAQ,GAEA,MADAzP,MAAAkR,QAAAzB,EACAzP,MAqBA6P,EAAA7N,UAAAkM,aAAA,SAAA3B,GAEA,MADAvM,MAAA0O,cAAAnC,EACAvM,MAYA6P,EAAA7N,UAAAmK,UAAA,SAAAsD,GAEA,MADAzP,MAAA+T,YAAAtE,EACAzP,MAgBA6P,EAAA7N,UAAAD,QAAA,SAAAgJ,GACA,MAAAA,IAAA,gBAAAA,IAMA,mBAAAA,GAAA4J,WACA3U,KAAAwU,SAAAzJ,EAAA4J,UAEA,mBAAA5J,GAAApF,WACA3F,KAAAyU,iBAAA1J,EAAApF,UAEA3F,OAXAA,KAAAwU,SAAAzJ,EACA/K,KAAAyU,iBAAA,EACAzU,OAoBA6P,EAAA7N,UAAA4S,KAAA,SAAAvJ,EAAAC,GACA,IAAAtL,KAAA6U,mBAAA,CACA,GAAA9U,GAAAC,IACAA,MAAA6S,YACAnD,QAAAC,KAAA,kIAEA3P,KAAA6U,mBAAA,GAAAzJ,SAAA,SAAA0J,EAAAC,GACAhV,EAAA+G,IAAA,SAAA6E,EAAAqD,GACArD,EAAAoJ,EAAApJ,GAAAmJ,EAAA9F,OAIA,MAAAhP,MAAA6U,mBAAAD,KAAAvJ,EAAAC,IAGAuE,EAAA7N,UAAAgT,MAAA,SAAAC,GACA,MAAAjV,MAAA4U,KAAAzS,OAAA8S,IAOApF,EAAA7N,UAAAkT,IAAA,SAAAzF,GAEA,MADAA,GAAAzP,MACAA,MAGA6P,EAAA7N,UAAAmT,GAAA,SAAAF,GACA,GAAA,kBAAAA,GAAA,KAAArU,OAAA,oBAEA,OADAZ,MAAAoV,YAAAH,EACAjV,MAGA6P,EAAA7N,UAAAuN,cAAA,SAAAP,GACA,QAAAA,IAIAhP,KAAAoV,YACApV,KAAAoV,YAAApG,GAGAA,EAAAxD,QAAA,KAAAwD,EAAAxD,OAAA,MAaAqE,EAAA7N,UAAAiS,IAAA,SAAArN,GACA,MAAA5G,MAAA8O,QAAAlI,EAAA6G,gBAeAoC,EAAA7N,UAAAqT,UAAAxF,EAAA7N,UAAAiS,IAuBApE,EAAA7N,UAAAsD,IAAA,SAAAsB,EAAA2F,GACA,GAAAH,EAAAxF,GAAA,CACA,IAAA,GAAA9D,KAAA8D,GACA5G,KAAAsF,IAAAxC,EAAA8D,EAAA9D,GAEA,OAAA9C,MAIA,MAFAA,MAAA8O,QAAAlI,EAAA6G,eAAAlB,EACAvM,KAAAwG,OAAAI,GAAA2F,EACAvM,MAeA6P,EAAA7N,UAAAsT,MAAA,SAAA1O,GAGA,aAFA5G,MAAA8O,QAAAlI,EAAA6G,qBACAzN,MAAAwG,OAAAI,GACA5G,MAsBA6P,EAAA7N,UAAA4E,MAAA,SAAA/E,EAAA0K,GAGA,GAAA,OAAA1K,GAAAM,SAAAN,EACA,KAAA,IAAAjB,OAAA,0CAGA,IAAAwL,EAAAvK,GAAA,CACA,IAAA,GAAAiB,KAAAjB,GACA7B,KAAA4G,MAAA9D,EAAAjB,EAAAiB,GAEA,OAAA9C,MAGA,GAAA+D,MAAAC,QAAAuI,GAAA,CACA,IAAA,GAAA5L,KAAA4L,GACAvM,KAAA4G,MAAA/E,EAAA0K,EAAA5L,GAEA,OAAAX,MAIA,GAAA,OAAAuM,GAAApK,SAAAoK,EACA,KAAA,IAAA3L,OAAA,yCAMA,OAJA,iBAAA2L,KACAA,EAAA,GAAAA,GAEAvM,KAAA0R,eAAAC,OAAA9P,EAAA0K,GACAvM,MASA6P,EAAA7N,UAAAuT,MAAA,WACA,MAAAvV,MAAAkT,SACAlT,MAEAA,KAAAkT,UAAA,EACAlT,KAAAgO,KAAAhO,KAAAgO,IAAAuH,QACAvV,KAAA+N,KAAA/N,KAAA+N,IAAAwH,QACAvV,KAAA+R,eACA/R,KAAAqP,KAAA,SACArP,OAcA6P,EAAA7N,UAAA8R,gBAAA,WAGA,MADA9T,MAAA6T,kBAAA,EACA7T,MAWA6P,EAAA7N,UAAAwT,UAAA,SAAApV,GAEA,MADAJ,MAAAyV,cAAArV,EACAJ,MAYA6P,EAAA7N,UAAAK,OAAA,WACA,OACA4L,OAAAjO,KAAAiO,OACAtL,IAAA3C,KAAA2C,IACAyC,KAAApF,KAAAyR,MACAnD,QAAAtO,KAAA8O,UA6CAe,EAAA7N,UAAAyE,KAAA,SAAArB,GACA,GAAAsQ,GAAAtJ,EAAAhH,GACAzD,EAAA3B,KAAA8O,QAAA,eAEA,IAAA4G,IAAA1V,KAAAyR,MACA1N,MAAAC,QAAAoB,GACApF,KAAAyR,SACAzR,KAAA4S,QAAAxN,KACApF,KAAAyR,cAEA,IAAArM,GAAApF,KAAAyR,OAAAzR,KAAA4S,QAAA5S,KAAAyR,OACA,KAAA7Q,OAAA,+BAIA,IAAA8U,GAAAtJ,EAAApM,KAAAyR,OACA,IAAA,GAAA3O,KAAAsC,GACApF,KAAAyR,MAAA3O,GAAAsC,EAAAtC,OAEA,gBAAAsC,IAEAzD,GAAA3B,KAAA2B,KAAA,QACAA,EAAA3B,KAAA8O,QAAA,gBACA,qCAAAnN,EACA3B,KAAAyR,MAAAzR,KAAAyR,MACAzR,KAAAyR,MAAA,IAAArM,EACAA,EAEApF,KAAAyR,OAAAzR,KAAAyR,OAAA,IAAArM,GAGApF,KAAAyR,MAAArM,CAGA,QAAAsQ,GAAA1V,KAAA4S,QAAAxN,GACApF,MAIA2B,GAAA3B,KAAA2B,KAAA,QACA3B,OAgCA6P,EAAA7N,UAAA2T,UAAA,SAAAhD,GAGA,MADA3S,MAAAwS,MAAA,mBAAAG,IAAAA,EACA3S,MASA6P,EAAA7N,UAAA4T,cAAA,SAAAC,EAAA9T,GACA,IAAA/B,KAAAkT,SAAA,CAGA,GAAAvH,GAAA,GAAA/K,OAAAiV,EAAA9T,EAAA,cACA4J,GAAA5J,QAAAA,EACA4J,EAAA9K,KAAA,eACAb,KAAAiT,UAAA,EACAjT,KAAAuV,QACAvV,KAAAuG,SAAAoF,KAGAkE,EAAA7N,UAAA2R,aAAA,WACA,GAAA5T,GAAAC,IAGAA,MAAAwU,WAAAxU,KAAA0U,SACA1U,KAAA0U,OAAAoB,WAAA,WACA/V,EAAA6V,cAAA,cAAA7V,EAAAyU,WACAxU,KAAAwU,WAGAxU,KAAAyU,mBAAAzU,KAAAgT,wBACAhT,KAAAgT,sBAAA8C,WAAA,WACA/V,EAAA6V,cAAA,uBAAA7V,EAAA0U,mBACAzU,KAAAyU,6DChgBA,QAAA1E,GAAAlI,GACA,GAAAA,EAAA,MAAA0M,GAAA1M,GAWA,QAAA0M,GAAA1M,GACA,IAAA,GAAA/E,KAAAiN,GAAA/N,UACA6F,EAAA/E,GAAAiN,EAAA/N,UAAAc,EAEA,OAAA+E,GA9BA,GAAAkO,GAAArV,EAAA,UAMAjB,GAAAD,QAAAuQ,EAmCAA,EAAA/N,UAAAiS,IAAA,SAAArN,GACA,MAAA5G,MAAAwG,OAAAI,EAAA6G,gBAeAsC,EAAA/N,UAAAyM,qBAAA,SAAAjI,GAKA,GAAAwP,GAAAxP,EAAA,iBAAA,EACAxG,MAAA2B,KAAAoU,EAAApU,KAAAqU,EAGA,IAAAnS,GAAAkS,EAAAlS,OAAAmS,EACA,KAAA,GAAAlT,KAAAe,GAAA7D,KAAA8C,GAAAe,EAAAf,EAEA9C,MAAAiW,QAGA,KACAzP,EAAA0P,OACAlW,KAAAiW,MAAAF,EAAAI,WAAA3P,EAAA0P,OAEA,MAAAvK,MA0BAoE,EAAA/N,UAAAqM,qBAAA,SAAA7C,GACA,GAAA7J,GAAA6J,EAAA,IAAA,CAGAxL,MAAAwL,OAAAxL,KAAAoP,WAAA5D,EACAxL,KAAAoW,WAAAzU,EAGA3B,KAAAqW,KAAA,GAAA1U,EACA3B,KAAAmV,GAAA,GAAAxT,EACA3B,KAAAsW,SAAA,GAAA3U,EACA3B,KAAAuW,YAAA,GAAA5U,EACA3B,KAAAwW,YAAA,GAAA7U,EACA3B,KAAA+G,OAAA,GAAApF,GAAA,GAAAA,IACA3B,KAAAmR,UAIAnR,KAAAyW,SAAA,KAAAjL,EACAxL,KAAA0W,UAAA,KAAAlL,EACAxL,KAAA2W,WAAA,KAAAnL,EACAxL,KAAA4W,aAAA,KAAApL,EACAxL,KAAA6W,cAAA,KAAArL,EACAxL,KAAA8W,UAAA,KAAAtL,EACAxL,KAAA+W,SAAA,KAAAvL,wCC1HAhM,EAAAmC,KAAA,SAAAsF,GACA,MAAAA,GAAA6F,MAAA,SAAAkK,SAWAxX,EAAAqE,OAAA,SAAAoD,GACA,MAAAA,GAAA6F,MAAA,SAAAmK,OAAA,SAAApP,EAAAZ,GACA,GAAAiQ,GAAAjQ,EAAA6F,MAAA,SACAhK,EAAAoU,EAAAF,QACAzK,EAAA2K,EAAAF,OAGA,OADAlU,IAAAyJ,IAAA1E,EAAA/E,GAAAyJ,GACA1E,QAYArI,EAAA2W,WAAA,SAAAlP,GACA,MAAAA,GAAA6F,MAAA,SAAAmK,OAAA,SAAApP,EAAAZ,GACA,GAAAiQ,GAAAjQ,EAAA6F,MAAA,SACAnK,EAAAuU,EAAA,GAAAhK,MAAA,GAAA,GACAiK,EAAAD,EAAA,GAAApK,MAAA,SAAA,GAAAI,MAAA,GAAA,EAEA,OADArF,GAAAsP,GAAAxU,EACAkF,QAYArI,EAAA4X,YAAA,SAAA5Q,EAAA6Q,GAQA,aAPA7Q,GAAA,sBACAA,GAAA,wBACAA,GAAA,2BACAA,GAAA,KACA6Q,SACA7Q,GAAA,OAEAA,4BCnDA,QAAAoJ,GAAA/H,GACA,GAAAA,EAAA,MAAA0M,GAAA1M,GAWA,QAAA0M,GAAA1M,GACA,IAAA,GAAA/E,KAAA8M,GAAA5N,UACA6F,EAAA/E,GAAA8M,EAAA5N,UAAAc,EAEA,OAAA+E,GA1BA,mBAAApI,KACAA,EAAAD,QAAAoQ,GAqCAA,EAAA5N,UAAA+M,GACAa,EAAA5N,UAAAsV,iBAAA,SAAAC,EAAA9H,GAIA,MAHAzP,MAAAwX,WAAAxX,KAAAwX,gBACAxX,KAAAwX,WAAA,IAAAD,GAAAvX,KAAAwX,WAAA,IAAAD,QACA7K,KAAA+C,GACAzP,MAaA4P,EAAA5N,UAAAyV,KAAA,SAAAF,EAAA9H,GACA,QAAAV,KACA/O,KAAA0X,IAAAH,EAAAxI,GACAU,EAAAkI,MAAA3X,KAAAgQ,WAKA,MAFAjB,GAAAU,GAAAA,EACAzP,KAAA+O,GAAAwI,EAAAxI,GACA/O,MAaA4P,EAAA5N,UAAA0V,IACA9H,EAAA5N,UAAA4V,eACAhI,EAAA5N,UAAA6V,mBACAjI,EAAA5N,UAAA8V,oBAAA,SAAAP,EAAA9H,GAIA,GAHAzP,KAAAwX,WAAAxX,KAAAwX,eAGA,GAAAxH,UAAAhP,OAEA,MADAhB,MAAAwX,cACAxX,IAIA,IAAA+X,GAAA/X,KAAAwX,WAAA,IAAAD,EACA,KAAAQ,EAAA,MAAA/X,KAGA,IAAA,GAAAgQ,UAAAhP,OAEA,aADAhB,MAAAwX,WAAA,IAAAD,GACAvX,IAKA,KAAA,GADAiV,GACAtU,EAAA,EAAAA,EAAAoX,EAAA/W,OAAAL,IAEA,GADAsU,EAAA8C,EAAApX,GACAsU,IAAAxF,GAAAwF,EAAAxF,KAAAA,EAAA,CACAsI,EAAAC,OAAArX,EAAA,EACA,OAGA,MAAAX,OAWA4P,EAAA5N,UAAAqN,KAAA,SAAAkI,GACAvX,KAAAwX,WAAAxX,KAAAwX,cACA,IAAAS,MAAA/K,MAAAnM,KAAAiP,UAAA,GACA+H,EAAA/X,KAAAwX,WAAA,IAAAD,EAEA,IAAAQ,EAAA,CACAA,EAAAA,EAAA7K,MAAA,EACA,KAAA,GAAAvM,GAAA,EAAAoM,EAAAgL,EAAA/W,OAAAL,EAAAoM,IAAApM,EACAoX,EAAApX,GAAAgX,MAAA3X,KAAAiY,GAIA,MAAAjY,OAWA4P,EAAA5N,UAAAkW,UAAA,SAAAX,GAEA,MADAvX,MAAAwX,WAAAxX,KAAAwX,eACAxX,KAAAwX,WAAA,IAAAD,QAWA3H,EAAA5N,UAAAwR,aAAA,SAAA+D,GACA,QAAAvX,KAAAkY,UAAAX,GAAAvW","file":"devices.js","sourcesContent":["(function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['superagent'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('superagent'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.ApiClient = factory(root.superagent);\n  }\n}(this, function(superagent) {\n  'use strict';\n\n  /**\n   * @module ApiClient\n   * @version 2\n   */\n\n  /**\n   * Manages low level client-server communications, parameter marshalling, etc. There should not be any need for an\n   * application to use this class directly - the *Api and model classes provide the public API for the service. The\n   * contents of this file should be regarded as internal but are documented for completeness.\n   * @alias module:ApiClient\n   * @class\n   */\n  var exports = function() {\n    /**\n     * The base URL against which to resolve every API call's (relative) path.\n     * @type {String}\n     * @default https://api.mbedcloud.com\n     */\n    this.basePath = 'https://api.mbedcloud.com'.replace(/\\/+$/, '');\n\n    /**\n     * The authentication methods to be included for all API calls.\n     * @type {Array.<String>}\n     */\n    this.authentications = {\n      'Bearer': {type: 'apiKey', 'in': 'header', name: 'Authorization'}\n    };\n    /**\n     * The default HTTP headers to be included for all API calls.\n     * @type {Array.<String>}\n     * @default {}\n     */\n    this.defaultHeaders = {};\n\n    /**\n     * The default HTTP timeout for all API calls.\n     * @type {Number}\n     * @default 60000\n     */\n    this.timeout = 60000;\n  };\n\n  /**\n   * Returns a string representation for an actual parameter.\n   * @param param The actual parameter.\n   * @returns {String} The string representation of <code>param</code>.\n   */\n  exports.prototype.paramToString = function(param) {\n    if (param == undefined || param == null) {\n      return '';\n    }\n    if (param instanceof Date) {\n      return param.toJSON();\n    }\n    return param.toString();\n  };\n\n  /**\n   * Builds full URL by appending the given path to the base URL and replacing path parameter place-holders with parameter values.\n   * NOTE: query parameters are not handled here.\n   * @param {String} path The path to append to the base URL.\n   * @param {Object} pathParams The parameter values to append.\n   * @returns {String} The encoded path with parameter values substituted.\n   */\n  exports.prototype.buildUrl = function(path, pathParams) {\n    if (!path.match(/^\\//)) {\n      path = '/' + path;\n    }\n    var url = this.basePath + path;\n    var _this = this;\n    url = url.replace(/\\{([\\w-]+)\\}/g, function(fullMatch, key) {\n      var value;\n      if (pathParams.hasOwnProperty(key)) {\n        value = _this.paramToString(pathParams[key]);\n      } else {\n        value = fullMatch;\n      }\n      return encodeURIComponent(value);\n    });\n    return url;\n  };\n\n  /**\n   * Checks whether the given content type represents JSON.<br>\n   * JSON content type examples:<br>\n   * <ul>\n   * <li>application/json</li>\n   * <li>application/json; charset=UTF8</li>\n   * <li>APPLICATION/JSON</li>\n   * </ul>\n   * @param {String} contentType The MIME content type to check.\n   * @returns {Boolean} <code>true</code> if <code>contentType</code> represents JSON, otherwise <code>false</code>.\n   */\n  exports.prototype.isJsonMime = function(contentType) {\n    return Boolean(contentType != null && contentType.match(/^application\\/json(;.*)?$/i));\n  };\n\n  /**\n   * Chooses a content type from the given array, with JSON preferred; i.e. return JSON if included, otherwise return the first.\n   * @param {Array.<String>} contentTypes\n   * @returns {String} The chosen content type, preferring JSON.\n   */\n  exports.prototype.jsonPreferredMime = function(contentTypes) {\n    for (var i = 0; i < contentTypes.length; i++) {\n      if (this.isJsonMime(contentTypes[i])) {\n        return contentTypes[i];\n      }\n    }\n    return contentTypes[0];\n  };\n\n  /**\n   * Checks whether the given parameter value represents file-like content.\n   * @param param The parameter to check.\n   * @returns {Boolean} <code>true</code> if <code>param</code> represents a file.\n   */\n  exports.prototype.isFileParam = function(param) {\n    // fs.ReadStream in Node.js (but not in runtime like browserify)\n    if (typeof window === 'undefined' &&\n        typeof require === 'function' &&\n        require('fs') &&\n        param instanceof require('fs').ReadStream) {\n      return true;\n    }\n    // Buffer in Node.js\n    if (typeof Buffer === 'function' && param instanceof Buffer) {\n      return true;\n    }\n    // Blob in browser\n    if (typeof Blob === 'function' && param instanceof Blob) {\n      return true;\n    }\n    // File in browser (it seems File object is also instance of Blob, but keep this for safe)\n    if (typeof File === 'function' && param instanceof File) {\n      return true;\n    }\n    return false;\n  };\n\n  /**\n   * Normalizes parameter values:\n   * <ul>\n   * <li>remove nils</li>\n   * <li>keep files and arrays</li>\n   * <li>format to string with `paramToString` for other cases</li>\n   * </ul>\n   * @param {Object.<String, Object>} params The parameters as object properties.\n   * @returns {Object.<String, Object>} normalized parameters.\n   */\n  exports.prototype.normalizeParams = function(params) {\n    var newParams = {};\n    for (var key in params) {\n      if (params.hasOwnProperty(key) && params[key] != undefined && params[key] != null) {\n        var value = params[key];\n        if (this.isFileParam(value) || Array.isArray(value)) {\n          newParams[key] = value;\n        } else {\n          newParams[key] = this.paramToString(value);\n        }\n      }\n    }\n    return newParams;\n  };\n\n  /**\n   * Enumeration of collection format separator strategies.\n   * @enum {String}\n   * @readonly\n   */\n  exports.CollectionFormatEnum = {\n    /**\n     * Comma-separated values. Value: <code>csv</code>\n     * @const\n     */\n    CSV: ',',\n    /**\n     * Space-separated values. Value: <code>ssv</code>\n     * @const\n     */\n    SSV: ' ',\n    /**\n     * Tab-separated values. Value: <code>tsv</code>\n     * @const\n     */\n    TSV: '\\t',\n    /**\n     * Pipe(|)-separated values. Value: <code>pipes</code>\n     * @const\n     */\n    PIPES: '|',\n    /**\n     * Native array. Value: <code>multi</code>\n     * @const\n     */\n    MULTI: 'multi'\n  };\n\n  /**\n   * Builds a string representation of an array-type actual parameter, according to the given collection format.\n   * @param {Array} param An array parameter.\n   * @param {module:ApiClient.CollectionFormatEnum} collectionFormat The array element separator strategy.\n   * @returns {String|Array} A string representation of the supplied collection, using the specified delimiter. Returns\n   * <code>param</code> as is if <code>collectionFormat</code> is <code>multi</code>.\n   */\n  exports.prototype.buildCollectionParam = function buildCollectionParam(param, collectionFormat) {\n    if (param == null) {\n      return null;\n    }\n    switch (collectionFormat) {\n      case 'csv':\n        return param.map(this.paramToString).join(',');\n      case 'ssv':\n        return param.map(this.paramToString).join(' ');\n      case 'tsv':\n        return param.map(this.paramToString).join('\\t');\n      case 'pipes':\n        return param.map(this.paramToString).join('|');\n      case 'multi':\n        // return the array directly as SuperAgent will handle it as expected\n        return param.map(this.paramToString);\n      default:\n        throw new Error('Unknown collection format: ' + collectionFormat);\n    }\n  };\n\n  /**\n   * Applies authentication headers to the request.\n   * @param {Object} request The request object created by a <code>superagent()</code> call.\n   * @param {Array.<String>} authNames An array of authentication method names.\n   */\n  exports.prototype.applyAuthToRequest = function(request, authNames) {\n    var _this = this;\n    authNames.forEach(function(authName) {\n      var auth = _this.authentications[authName];\n      switch (auth.type) {\n        case 'basic':\n          if (auth.username || auth.password) {\n            request.auth(auth.username || '', auth.password || '');\n          }\n          break;\n        case 'apiKey':\n          if (auth.apiKey) {\n            var data = {};\n            if (auth.apiKeyPrefix) {\n              data[auth.name] = auth.apiKeyPrefix + ' ' + auth.apiKey;\n            } else {\n              data[auth.name] = auth.apiKey;\n            }\n            if (auth['in'] === 'header') {\n              request.set(data);\n            } else {\n              request.query(data);\n            }\n          }\n          break;\n        case 'oauth2':\n          if (auth.accessToken) {\n            request.set({'Authorization': 'Bearer ' + auth.accessToken});\n          }\n          break;\n        default:\n          throw new Error('Unknown authentication type: ' + auth.type);\n      }\n    });\n  };\n\n  /**\n   * Deserializes an HTTP response body into a value of the specified type.\n   * @param {Object} response A SuperAgent response object.\n   * @param {(String|Array.<String>|Object.<String, Object>|Function)} returnType The type to return. Pass a string for simple types\n   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n   * all properties on <code>data<code> will be converted to this type.\n   * @returns A value of the specified type.\n   */\n  exports.prototype.deserialize = function deserialize(response, returnType) {\n    if (response == null || returnType == null) {\n      return null;\n    }\n    // Rely on SuperAgent for parsing response body.\n    // See http://visionmedia.github.io/superagent/#parsing-response-bodies\n    var data = response.body;\n    if (data == null) {\n      // SuperAgent does not always produce a body; use the unparsed response as a fallback\n      data = response.text;\n    }\n    return exports.convertToType(data, returnType);\n  };\n\n  /**\n   * Callback function to receive the result of the operation.\n   * @callback module:ApiClient~callApiCallback\n   * @param {String} error Error message, if any.\n   * @param data The data returned by the service call.\n   * @param {String} response The complete HTTP response.\n   */\n\n  /**\n   * Invokes the REST service using the supplied settings and parameters.\n   * @param {String} path The base URL to invoke.\n   * @param {String} httpMethod The HTTP method to use.\n   * @param {Object.<String, String>} pathParams A map of path parameters and their values.\n   * @param {Object.<String, Object>} queryParams A map of query parameters and their values.\n   * @param {Object.<String, Object>} headerParams A map of header parameters and their values.\n   * @param {Object.<String, Object>} formParams A map of form parameters and their values.\n   * @param {Object} bodyParam The value to pass as the request body.\n   * @param {Array.<String>} authNames An array of authentication type names.\n   * @param {Array.<String>} contentTypes An array of request MIME types.\n   * @param {Array.<String>} accepts An array of acceptable response MIME types.\n   * @param {(String|Array|ObjectFunction)} returnType The required type to return; can be a string for simple types or the\n   * constructor for a complex type.\n   * @param {module:ApiClient~callApiCallback} callback The callback function.\n   * @returns {Object} The SuperAgent request object.\n   */\n  exports.prototype.callApi = function callApi(path, httpMethod, pathParams,\n      queryParams, headerParams, formParams, bodyParam, authNames, contentTypes, accepts,\n      returnType, callback) {\n\n    var _this = this;\n    var url = this.buildUrl(path, pathParams);\n    var request = superagent(httpMethod, url);\n\n    // apply authentications\n    this.applyAuthToRequest(request, authNames);\n\n    // set query parameters\n    request.query(this.normalizeParams(queryParams));\n\n    // set header parameters\n    request.set(this.defaultHeaders).set(this.normalizeParams(headerParams));\n\n    // set request timeout\n    request.timeout(this.timeout);\n\n    var contentType = this.jsonPreferredMime(contentTypes);\n    if (contentType) {\n      request.type(contentType);\n    } else if (!request.header['Content-Type']) {\n      request.type('application/json');\n    }\n\n    if (contentType === 'application/x-www-form-urlencoded') {\n      request.send(this.normalizeParams(formParams));\n    } else if (contentType == 'multipart/form-data') {\n      var _formParams = this.normalizeParams(formParams);\n      for (var key in _formParams) {\n        if (_formParams.hasOwnProperty(key)) {\n          if (this.isFileParam(_formParams[key])) {\n            // file field\n            request.attach(key, _formParams[key]);\n          } else {\n            request.field(key, _formParams[key]);\n          }\n        }\n      }\n    } else if (bodyParam) {\n      request.send(bodyParam);\n    }\n\n    var accept = this.jsonPreferredMime(accepts);\n    if (accept) {\n      request.accept(accept);\n    }\n\n\n    request.end(function(error, response) {\n      if (callback) {\n        var data = null;\n        if (!error) {\n          data = _this.deserialize(response, returnType);\n        }\n        callback(error, data, response);\n      }\n    });\n\n    return request;\n  };\n\n  /**\n   * Parses an ISO-8601 string representation of a date value.\n   * @param {String} str The date value as a string.\n   * @returns {Date} The parsed date object.\n   */\n  exports.parseDate = function(str) {\n    return new Date(str.replace(/T/i, ' '));\n  };\n\n  /**\n   * Converts a value to the specified type.\n   * @param {(String|Object)} data The data to convert, as a string or object.\n   * @param {(String|Array.<String>|Object.<String, Object>|Function)} type The type to return. Pass a string for simple types\n   * or the constructor function for a complex type. Pass an array containing the type name to return an array of that type. To\n   * return an object, pass an object with one property whose name is the key type and whose value is the corresponding value type:\n   * all properties on <code>data<code> will be converted to this type.\n   * @returns An instance of the specified type.\n   */\n  exports.convertToType = function(data, type) {\n    switch (type) {\n      case 'Boolean':\n        return Boolean(data);\n      case 'Integer':\n        return parseInt(data, 10);\n      case 'Number':\n        return parseFloat(data);\n      case 'String':\n        return String(data);\n      case 'Date':\n        return this.parseDate(String(data));\n      default:\n        if (type === Object) {\n          // generic object, return directly\n          return data;\n        } else if (typeof type === 'function') {\n          // for model type like: User\n          return type.constructFromObject(data);\n        } else if (Array.isArray(type)) {\n          // for array type like: ['String']\n          var itemType = type[0];\n          return data.map(function(item) {\n            return exports.convertToType(item, itemType);\n          });\n        } else if (typeof type === 'object') {\n          // for plain object type like: {'String': 'Integer'}\n          var keyType, valueType;\n          for (var k in type) {\n            if (type.hasOwnProperty(k)) {\n              keyType = k;\n              valueType = type[k];\n              break;\n            }\n          }\n          var result = {};\n          for (var k in data) {\n            if (data.hasOwnProperty(k)) {\n              var key = exports.convertToType(k, keyType);\n              var value = exports.convertToType(data[k], valueType);\n              result[key] = value;\n            }\n          }\n          return result;\n        } else {\n          // for unknown type, return the data directly\n          return data;\n        }\n    }\n  };\n\n  /**\n   * Constructs a new map or array model from REST data.\n   * @param data {Object|Array} The REST data.\n   * @param obj {Object|Array} The target object or array.\n   */\n  exports.constructFromObject = function(data, obj, itemType) {\n    if (Array.isArray(data)) {\n      for (var i = 0; i < data.length; i++) {\n        if (data.hasOwnProperty(i))\n          obj[i] = exports.convertToType(data[i], itemType);\n      }\n    } else {\n      for (var k in data) {\n        if (data.hasOwnProperty(k))\n          obj[k] = exports.convertToType(data[k], itemType);\n      }\n    }\n  };\n\n  /**\n   * The default API client implementation.\n   * @type {module:ApiClient}\n   */\n  exports.instance = new exports();\n\n  return exports;\n}));\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.DefaultApi = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n  /**\n   * Default service.\n   * @module api/DefaultApi\n   * @version 2\n   */\n\n  /**\n   * Constructs a new DefaultApi. \n   * @alias module:api/DefaultApi\n   * @class\n   * @param {module:ApiClient} apiClient Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the v2NotificationCallbackDelete operation.\n     * @callback module:api/DefaultApi~v2NotificationCallbackDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete callback URL\n     * Deletes the callback URL.\n     * @param {module:api/DefaultApi~v2NotificationCallbackDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2NotificationCallbackDelete = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/notification/callback', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2NotificationCallbackGet operation.\n     * @callback module:api/DefaultApi~v2NotificationCallbackGetCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Check callback URL\n     * Shows the current callback URL if exists.\n     * @param {module:api/DefaultApi~v2NotificationCallbackGetCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2NotificationCallbackGet = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/notification/callback', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Resource', 'model/Endpoint'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/Resource'), require('../model/Endpoint'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.EndpointsApi = factory(root.MbedCloudConnectRestApi.ApiClient, root.MbedCloudConnectRestApi.Resource, root.MbedCloudConnectRestApi.Endpoint);\n  }\n}(this, function(ApiClient, Resource, Endpoint) {\n  'use strict';\n\n  /**\n   * Endpoints service.\n   * @module api/EndpointsApi\n   * @version 2\n   */\n\n  /**\n   * Constructs a new EndpointsApi. \n   * @alias module:api/EndpointsApi\n   * @class\n   * @param {module:ApiClient} apiClient Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the v2EndpointsEndpointNameGet operation.\n     * @callback module:api/EndpointsApi~v2EndpointsEndpointNameGetCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/Resource>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * List the resources on an endpoint\n     * The list of resources is cached by mbed Cloud Connect, so this call does not create a message to the device. \n     * @param {String} endpointName A unique identifier for an endpoint. Note that the endpoint name needs to be an exact match. You cannot use wildcards here. \n     * @param {module:api/EndpointsApi~v2EndpointsEndpointNameGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/Resource>}\n     */\n    this.v2EndpointsEndpointNameGet = function(endpointName, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2EndpointsEndpointNameGet\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json', 'application/link-format'];\n      var returnType = [Resource];\n\n      return this.apiClient.callApi(\n        '/v2/endpoints/{endpointName}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2EndpointsGet operation.\n     * @callback module:api/EndpointsApi~v2EndpointsGetCallback\n     * @param {String} error Error message, if any.\n     * @param {Array.<module:model/Endpoint>} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * List all endpoints\n     * Endpoints are physical devices running mbed Cloud Client. \n     * @param {Object} opts Optional parameters\n     * @param {String} opts.type Filter endpoints by endpoint-type.\n     * @param {module:api/EndpointsApi~v2EndpointsGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link Array.<module:model/Endpoint>}\n     */\n    this.v2EndpointsGet = function(opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n        'type': opts['type']\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json', 'application/link-format'];\n      var returnType = [Endpoint];\n\n      return this.apiClient.callApi(\n        '/v2/endpoints', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Webhook', 'model/NotificationMessage'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/Webhook'), require('../model/NotificationMessage'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.NotificationsApi = factory(root.MbedCloudConnectRestApi.ApiClient, root.MbedCloudConnectRestApi.Webhook, root.MbedCloudConnectRestApi.NotificationMessage);\n  }\n}(this, function(ApiClient, Webhook, NotificationMessage) {\n  'use strict';\n\n  /**\n   * Notifications service.\n   * @module api/NotificationsApi\n   * @version 2\n   */\n\n  /**\n   * Constructs a new NotificationsApi. \n   * @alias module:api/NotificationsApi\n   * @class\n   * @param {module:ApiClient} apiClient Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the v2NotificationCallbackPut operation.\n     * @callback module:api/NotificationsApi~v2NotificationCallbackPutCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Register a callback URL\n     * Register a URL to which the server should deliver notifications of the subscribed resource changes. To get notifications pushed you need to also place the subscriptions.  Notifications are delivered as PUT messages to the HTTP server defined by the client with a subscription server message. The given URL should be accessible and respond to the PUT request with response code of 200 or 204. mbed Cloud Connect tests the callback URL with empty payload when the URL is registered. For more information on callback notification, see NotificationData.  **Note**: Only one callback URL per access-key can be active. If you register a new URL when another one is already active, the old URL is replaced by the new. \n     * @param {module:model/Webhook} webhook A json object that contains the URL to which notifications need to be sent, and the optional headers. \n     * @param {module:api/NotificationsApi~v2NotificationCallbackPutCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2NotificationCallbackPut = function(webhook, callback) {\n      var postBody = webhook;\n\n      // verify the required parameter 'webhook' is set\n      if (webhook == undefined || webhook == null) {\n        throw \"Missing the required parameter 'webhook' when calling v2NotificationCallbackPut\";\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = ['application/json'];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/notification/callback', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2NotificationPullGet operation.\n     * @callback module:api/NotificationsApi~v2NotificationPullGetCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/NotificationMessage} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get notifications using Long Poll\n     * In this case, notifications are delivered through HTTP long-poll requests. The HTTP request is kept open until an event notification or a batch of event notifications are delivered to the client or the request times out (response code 204). In both cases, the client should open a new polling connection after the previous one closes. You must have a persistent connection (Connection keep-alive header in the request) to avoid excess TLS handshakes.  **Note:** If it is not possible to have a public facing callback URL, for example when developing on your local machine, you can use long polling to check for new messages. However, to reduce network traffic and to increase performance we recommend that you use callback URLs (webhooks) whenever possible. \n     * @param {module:api/NotificationsApi~v2NotificationPullGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/NotificationMessage}\n     */\n    this.v2NotificationPullGet = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = NotificationMessage;\n\n      return this.apiClient.callApi(\n        '/v2/notification/pull', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AsyncID'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/AsyncID'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.ResourcesApi = factory(root.MbedCloudConnectRestApi.ApiClient, root.MbedCloudConnectRestApi.AsyncID);\n  }\n}(this, function(ApiClient, AsyncID) {\n  'use strict';\n\n  /**\n   * Resources service.\n   * @module api/ResourcesApi\n   * @version 2\n   */\n\n  /**\n   * Constructs a new ResourcesApi. \n   * @alias module:api/ResourcesApi\n   * @class\n   * @param {module:ApiClient} apiClient Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the v2EndpointsEndpointNameResourcePathDelete operation.\n     * @callback module:api/ResourcesApi~v2EndpointsEndpointNameResourcePathDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/AsyncID} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete a resource\n     * A request to delete a resource must be handled by both mbed Cloud Client and mbed Cloud Connect. The resource is not deleted from mbed Cloud Connect until the delete is handled by mbed Cloud Client.  All resource APIs are asynchronous. Note that these APIs respond only if the device is turned on and connected to mbed Cloud Connect. \n     * @param {String} endpointName A unique identifier for the endpoint. Note that the endpoint-name must be an exact match. You cannot use wildcards here. \n     * @param {String} resourcePath Resource&#39;s url. \n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.noResp **Non-confirmable requests**  All resource APIs have the parameter noResp. If you make a request with noResp&#x3D;true, mbed Cloud Connect makes a CoAP non-confirmable request to the device. Such requests are not guaranteed to arrive in the device, and you do not get back an async-response-id.  If calls with this parameter enabled succeed, they return with the status code 204 No Content. If the underlying protocol does not support non-confirmable requests, or if the endpoint is registered in queue mode, the response is status code 409 Conflict. \n     * @param {module:api/ResourcesApi~v2EndpointsEndpointNameResourcePathDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/AsyncID}\n     */\n    this.v2EndpointsEndpointNameResourcePathDelete = function(endpointName, resourcePath, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2EndpointsEndpointNameResourcePathDelete\";\n      }\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath == undefined || resourcePath == null) {\n        throw \"Missing the required parameter 'resourcePath' when calling v2EndpointsEndpointNameResourcePathDelete\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName,\n        'resourcePath': resourcePath\n      };\n      var queryParams = {\n        'noResp': opts['noResp']\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = AsyncID;\n\n      return this.apiClient.callApi(\n        '/v2/endpoints/{endpointName}/{resourcePath}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2EndpointsEndpointNameResourcePathGet operation.\n     * @callback module:api/ResourcesApi~v2EndpointsEndpointNameResourcePathGetCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/AsyncID} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Read from a resource\n     * Requests the resource value and when the response is available, a json AsycResponse object (AsyncIDResponse object) is received in the notification channel. Note that you can also receive notifications when a resource changes. The preferred way to get resource values is to use subscribe and callback methods.  All resource APIs are asynchronous. Note that these APIs will only respond if the device is turned on and connected to mbed Cloud Connect. \n     * @param {String} endpointName Unique identifier for the endpoint. Note that the endpoint name needs to be an exact match. You cannot use wildcards here. \n     * @param {String} resourcePath Resource&#39;s url. \n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.cacheOnly If true, the response comes only from the cache. Default: false. \n     * @param {Boolean} opts.noResp **Non-confirmable requests**  All resource APIs have the parameter noResp. If a request is made with noResp&#x3D;true, mbed Cloud Connect makes a CoAP non-confirmable request to the device. Such requests are not guaranteed to arrive in the device, and you do not get back an async-response-id.  If calls with this parameter enabled succeed, they return with the status code 204 No Content. If the underlying protocol does not support non-confirmable requests, or if the endpoint is registered in queue mode, the response is status code 409 Conflict. \n     * @param {module:api/ResourcesApi~v2EndpointsEndpointNameResourcePathGetCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/AsyncID}\n     */\n    this.v2EndpointsEndpointNameResourcePathGet = function(endpointName, resourcePath, opts, callback) {\n      opts = opts || {};\n      var postBody = null;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2EndpointsEndpointNameResourcePathGet\";\n      }\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath == undefined || resourcePath == null) {\n        throw \"Missing the required parameter 'resourcePath' when calling v2EndpointsEndpointNameResourcePathGet\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName,\n        'resourcePath': resourcePath\n      };\n      var queryParams = {\n        'cacheOnly': opts['cacheOnly'],\n        'noResp': opts['noResp']\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = AsyncID;\n\n      return this.apiClient.callApi(\n        '/v2/endpoints/{endpointName}/{resourcePath}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2EndpointsEndpointNameResourcePathPost operation.\n     * @callback module:api/ResourcesApi~v2EndpointsEndpointNameResourcePathPostCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/AsyncID} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Execute a function on a resource\n     * With this API, you can execute a function on an existing resource.  All resource APIs are asynchronous. Note that these APIs respond only if the device is turned on and connected to mbed Cloud Connect. \n     * @param {String} endpointName A unique identifier for the endpoint. Note that the endpoint-name must be an exact match. You cannot use wildcards here. \n     * @param {String} resourcePath Resource&#39;s url.\n     * @param {Object} opts Optional parameters\n     * @param {String} opts.resourceFunction This value is not needed. Most of the time resources do not accept a function but they have their own functions predefined. You can use this to trigger them.  If a function is included, the body of this request is passed as a char* to the function in mbed Cloud Client. \n     * @param {Boolean} opts.noResp **Non-confirmable requests**  All resource APIs have the parameter noResp. If you make a request with noResp&#x3D;true, mbed Cloud Connect makes a CoAP non-confirmable request to the device. Such requests are not guaranteed to arrive in the device, and you do not get back an async-response-id.  If calls with this parameter enabled succeed, they return with the status code 204 No Content. If the underlying protocol does not support non-confirmable requests, or if the endpoint is registered in queue mode, the response is status code 409 Conflict. \n     * @param {module:api/ResourcesApi~v2EndpointsEndpointNameResourcePathPostCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/AsyncID}\n     */\n    this.v2EndpointsEndpointNameResourcePathPost = function(endpointName, resourcePath, opts, callback) {\n      opts = opts || {};\n      var postBody = opts['resourceFunction'];\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2EndpointsEndpointNameResourcePathPost\";\n      }\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath == undefined || resourcePath == null) {\n        throw \"Missing the required parameter 'resourcePath' when calling v2EndpointsEndpointNameResourcePathPost\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName,\n        'resourcePath': resourcePath\n      };\n      var queryParams = {\n        'noResp': opts['noResp']\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = ['text/plain', 'application/xml', 'application/octet-stream', 'application/exi', 'application/json', 'application/link-format', 'application/senml+json', 'application/nanoservice-tlv', 'application/vnd.oma.lwm2m+text', 'application/vnd.oma.lwm2m+opaq', 'application/vnd.oma.lwm2m+tlv', 'application/vnd.oma.lwm2m+json'];\n      var accepts = ['application/json'];\n      var returnType = AsyncID;\n\n      return this.apiClient.callApi(\n        '/v2/endpoints/{endpointName}/{resourcePath}', 'POST',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2EndpointsEndpointNameResourcePathPut operation.\n     * @callback module:api/ResourcesApi~v2EndpointsEndpointNameResourcePathPutCallback\n     * @param {String} error Error message, if any.\n     * @param {module:model/AsyncID} data The data returned by the service call.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Write to a resource\n     * With this API, you can write new values to existing resources, or create new resources on the device. The resource-path does not have to exist - it can be created by the call.  All resource APIs are asynchronous. Note that these APIs respond only if the device is turned on and connected to mbed Cloud Connect. \n     * @param {String} endpointName A unique identifier for the endpoint. Note that the endpoint name must be an exact match. You cannot use wildcards here. \n     * @param {String} resourcePath Resource&#39;s url.\n     * @param {String} resourceValue Value to be set to the resource. (Check accceptable content-types) \n     * @param {Object} opts Optional parameters\n     * @param {Boolean} opts.noResp **Non-confirmable requests**  All resource APIs have the parameter noResp. If you make a request with noResp&#x3D;true, mbed Cloud Connect makes a CoAP non-confirmable request to the device. Such requests are not guaranteed to arrive in the device, and you do not get back an async-response-id.  If calls with this parameter enabled succeed, they return with the status code 204 No Content. If the underlying protocol does not support non-confirmable requests, or if the endpoint is registered in queue mode, the response is status code 409 Conflict. \n     * @param {module:api/ResourcesApi~v2EndpointsEndpointNameResourcePathPutCallback} callback The callback function, accepting three arguments: error, data, response\n     * data is of type: {@link module:model/AsyncID}\n     */\n    this.v2EndpointsEndpointNameResourcePathPut = function(endpointName, resourcePath, resourceValue, opts, callback) {\n      opts = opts || {};\n      var postBody = resourceValue;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2EndpointsEndpointNameResourcePathPut\";\n      }\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath == undefined || resourcePath == null) {\n        throw \"Missing the required parameter 'resourcePath' when calling v2EndpointsEndpointNameResourcePathPut\";\n      }\n\n      // verify the required parameter 'resourceValue' is set\n      if (resourceValue == undefined || resourceValue == null) {\n        throw \"Missing the required parameter 'resourceValue' when calling v2EndpointsEndpointNameResourcePathPut\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName,\n        'resourcePath': resourcePath\n      };\n      var queryParams = {\n        'noResp': opts['noResp']\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = ['text/plain', 'application/xml', 'application/octet-stream', 'application/exi', 'application/json', 'application/link-format', 'application/senml+json', 'application/nanoservice-tlv', 'application/vnd.oma.lwm2m+text', 'application/vnd.oma.lwm2m+opaq', 'application/vnd.oma.lwm2m+tlv', 'application/vnd.oma.lwm2m+json'];\n      var accepts = ['application/json'];\n      var returnType = AsyncID;\n\n      return this.apiClient.callApi(\n        '/v2/endpoints/{endpointName}/{resourcePath}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AsyncID', 'model/PresubscriptionArray'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('../model/AsyncID'), require('../model/PresubscriptionArray'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.SubscriptionsApi = factory(root.MbedCloudConnectRestApi.ApiClient, root.MbedCloudConnectRestApi.AsyncID, root.MbedCloudConnectRestApi.PresubscriptionArray);\n  }\n}(this, function(ApiClient, AsyncID, PresubscriptionArray) {\n  'use strict';\n\n  /**\n   * Subscriptions service.\n   * @module api/SubscriptionsApi\n   * @version 2\n   */\n\n  /**\n   * Constructs a new SubscriptionsApi. \n   * @alias module:api/SubscriptionsApi\n   * @class\n   * @param {module:ApiClient} apiClient Optional API client implementation to use,\n   * default to {@link module:ApiClient#instance} if unspecified.\n   */\n  var exports = function(apiClient) {\n    this.apiClient = apiClient || ApiClient.instance;\n\n\n    /**\n     * Callback function to receive the result of the v2SubscriptionsDelete operation.\n     * @callback module:api/SubscriptionsApi~v2SubscriptionsDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Remove all subscriptions\n     * Removes subscriptions from every endpoint and resource. Note that this does not remove pre-subscriptions.\n     * @param {module:api/SubscriptionsApi~v2SubscriptionsDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2SubscriptionsDelete = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/subscriptions', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2SubscriptionsEndpointNameDelete operation.\n     * @callback module:api/SubscriptionsApi~v2SubscriptionsEndpointNameDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Delete subscriptions from an endpoint\n     * Deletes all resource subscriptions in a single endpoint.\n     * @param {String} endpointName A unique identifier for the endpoint. Note that the endpoint name must be an exact match. You cannot use wildcards here. \n     * @param {module:api/SubscriptionsApi~v2SubscriptionsEndpointNameDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2SubscriptionsEndpointNameDelete = function(endpointName, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2SubscriptionsEndpointNameDelete\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/subscriptions/{endpointName}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2SubscriptionsEndpointNameGet operation.\n     * @callback module:api/SubscriptionsApi~v2SubscriptionsEndpointNameGetCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Read endpoints subscriptions\n     * Lists all subscribed resources from a single endpoint.\n     * @param {String} endpointName A unique identifier for the endpoint. Note that endpoint name must be an exact match. You cannot use wildcards here. \n     * @param {module:api/SubscriptionsApi~v2SubscriptionsEndpointNameGetCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2SubscriptionsEndpointNameGet = function(endpointName, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2SubscriptionsEndpointNameGet\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['text/uri-list'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/subscriptions/{endpointName}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2SubscriptionsEndpointNameResourcePathDelete operation.\n     * @callback module:api/SubscriptionsApi~v2SubscriptionsEndpointNameResourcePathDeleteCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Remove a subscription\n     * To remove an existing subscription from a resource path. \n     * @param {String} endpointName A unique identifier for the endpoint. Note that the endpoint name must be an exact match. You cannot use wildcards here. \n     * @param {String} resourcePath Resource&#39;s url. \n     * @param {module:api/SubscriptionsApi~v2SubscriptionsEndpointNameResourcePathDeleteCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2SubscriptionsEndpointNameResourcePathDelete = function(endpointName, resourcePath, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2SubscriptionsEndpointNameResourcePathDelete\";\n      }\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath == undefined || resourcePath == null) {\n        throw \"Missing the required parameter 'resourcePath' when calling v2SubscriptionsEndpointNameResourcePathDelete\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName,\n        'resourcePath': resourcePath\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/subscriptions/{endpointName}/{resourcePath}', 'DELETE',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2SubscriptionsEndpointNameResourcePathGet operation.\n     * @callback module:api/SubscriptionsApi~v2SubscriptionsEndpointNameResourcePathGetCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Read subscription status\n     * @param {String} endpointName A unique identifier for the endpoint. Note that the endpoint name must be an exact match. You cannot use wildcards here. \n     * @param {String} resourcePath Resource&#39;s url. \n     * @param {module:api/SubscriptionsApi~v2SubscriptionsEndpointNameResourcePathGetCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2SubscriptionsEndpointNameResourcePathGet = function(endpointName, resourcePath, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2SubscriptionsEndpointNameResourcePathGet\";\n      }\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath == undefined || resourcePath == null) {\n        throw \"Missing the required parameter 'resourcePath' when calling v2SubscriptionsEndpointNameResourcePathGet\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName,\n        'resourcePath': resourcePath\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/subscriptions/{endpointName}/{resourcePath}', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2SubscriptionsEndpointNameResourcePathPut operation.\n     * @callback module:api/SubscriptionsApi~v2SubscriptionsEndpointNameResourcePathPutCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Subscribe to a resource path\n     * The mbed Cloud Connect eventing model consists of observable resources.  This means that endpoints can deliver updated resource content, periodically or with a more sophisticated solution-dependent logic. The OMA LWM2M resource model including objects, object instances, resources and resource instances is also supported.  Applications can subscribe to objects, object instances or individual resources to make the device to provide value change notifications to mbed Cloud Connect service. An application needs to call a /notification/callback method to get mbed Cloud Connect to push a notification of the resource changes. You can also use /subscriptions to set a pre-subscription. \n     * @param {String} endpointName A unique identifier for the endpoint. Note that the endpoint name must be an exact match. You cannot use wildcards here. \n     * @param {String} resourcePath Resource&#39;s URL. \n     * @param {module:api/SubscriptionsApi~v2SubscriptionsEndpointNameResourcePathPutCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2SubscriptionsEndpointNameResourcePathPut = function(endpointName, resourcePath, callback) {\n      var postBody = null;\n\n      // verify the required parameter 'endpointName' is set\n      if (endpointName == undefined || endpointName == null) {\n        throw \"Missing the required parameter 'endpointName' when calling v2SubscriptionsEndpointNameResourcePathPut\";\n      }\n\n      // verify the required parameter 'resourcePath' is set\n      if (resourcePath == undefined || resourcePath == null) {\n        throw \"Missing the required parameter 'resourcePath' when calling v2SubscriptionsEndpointNameResourcePathPut\";\n      }\n\n\n      var pathParams = {\n        'endpointName': endpointName,\n        'resourcePath': resourcePath\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/subscriptions/{endpointName}/{resourcePath}', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2SubscriptionsGet operation.\n     * @callback module:api/SubscriptionsApi~v2SubscriptionsGetCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Get pre-subscriptions\n     * You can retrieve the pre-subscription data by using a GET operation. The server returns with the same JSON structure as described above. If there are no pre-subscribed resources, it returns with an empty array. \n     * @param {module:api/SubscriptionsApi~v2SubscriptionsGetCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2SubscriptionsGet = function(callback) {\n      var postBody = null;\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = [];\n      var accepts = ['application/json'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/subscriptions', 'GET',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n\n    /**\n     * Callback function to receive the result of the v2SubscriptionsPut operation.\n     * @callback module:api/SubscriptionsApi~v2SubscriptionsPutCallback\n     * @param {String} error Error message, if any.\n     * @param data This operation does not return a value.\n     * @param {String} response The complete HTTP response.\n     */\n\n    /**\n     * Set pre-subscriptions\n     * Pre-subscription is a set of rules and patterns put by the application. When an endpoint registers and its name, type and registered resources match the pre-subscription data, mbed Cloud Connect sends subscription requests to the device automatically. The pattern may include the endpoint name (optionally having an \\\\* character at the end), endpoint type, a list of resources or expressions with an \\\\* character at the end. The pre-subscription concerns all the endpoints that are already registered and the server sends subscription requests to the devices immediately when the patterns are set. There is only one pre-subscribe array, so changing the pre-subscription data removes all the previous subscriptions. To remove the pre-subscription data, put an empty array as a rule. \n     * @param {module:model/PresubscriptionArray} presubsription Array of pre-subscriptions.\n     * @param {module:api/SubscriptionsApi~v2SubscriptionsPutCallback} callback The callback function, accepting three arguments: error, data, response\n     */\n    this.v2SubscriptionsPut = function(presubsription, callback) {\n      var postBody = presubsription;\n\n      // verify the required parameter 'presubsription' is set\n      if (presubsription == undefined || presubsription == null) {\n        throw \"Missing the required parameter 'presubsription' when calling v2SubscriptionsPut\";\n      }\n\n\n      var pathParams = {\n      };\n      var queryParams = {\n      };\n      var headerParams = {\n      };\n      var formParams = {\n      };\n\n      var authNames = ['Bearer'];\n      var contentTypes = ['application/json'];\n      var accepts = ['text/plain'];\n      var returnType = null;\n\n      return this.apiClient.callApi(\n        '/v2/subscriptions', 'PUT',\n        pathParams, queryParams, headerParams, formParams, postBody,\n        authNames, contentTypes, accepts, returnType, callback\n      );\n    }\n  };\n\n  return exports;\n}));\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AsyncID', 'model/AsyncIDResponse', 'model/Endpoint', 'model/EndpointData', 'model/NotificationData', 'model/NotificationMessage', 'model/Presubscription', 'model/PresubscriptionArray', 'model/Resource', 'model/ResourcePath', 'model/ResourcesData', 'model/Webhook', 'api/DefaultApi', 'api/EndpointsApi', 'api/NotificationsApi', 'api/ResourcesApi', 'api/SubscriptionsApi'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('./ApiClient'), require('./model/AsyncID'), require('./model/AsyncIDResponse'), require('./model/Endpoint'), require('./model/EndpointData'), require('./model/NotificationData'), require('./model/NotificationMessage'), require('./model/Presubscription'), require('./model/PresubscriptionArray'), require('./model/Resource'), require('./model/ResourcePath'), require('./model/ResourcesData'), require('./model/Webhook'), require('./api/DefaultApi'), require('./api/EndpointsApi'), require('./api/NotificationsApi'), require('./api/ResourcesApi'), require('./api/SubscriptionsApi'));\n  }\n}(function(ApiClient, AsyncID, AsyncIDResponse, Endpoint, EndpointData, NotificationData, NotificationMessage, Presubscription, PresubscriptionArray, Resource, ResourcePath, ResourcesData, Webhook, DefaultApi, EndpointsApi, NotificationsApi, ResourcesApi, SubscriptionsApi) {\n  'use strict';\n\n  /**\n   * mbed_Cloud_Connect_REST_API_allows_web_applications_to_communicate_with_devices_.<br>\n   * The <code>index</code> module provides access to constructors for all the classes which comprise the public API.\n   * <p>\n   * An AMD (recommended!) or CommonJS application will generally do something equivalent to the following:\n   * <pre>\n   * var MbedCloudConnectRestApi = require('index'); // See note below*.\n   * var xxxSvc = new MbedCloudConnectRestApi.XxxApi(); // Allocate the API class we're going to use.\n   * var yyyModel = new MbedCloudConnectRestApi.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * <em>*NOTE: For a top-level AMD script, use require(['index'], function(){...})\n   * and put the application logic within the callback function.</em>\n   * </p>\n   * <p>\n   * A non-AMD browser application (discouraged) might do something like this:\n   * <pre>\n   * var xxxSvc = new MbedCloudConnectRestApi.XxxApi(); // Allocate the API class we're going to use.\n   * var yyy = new MbedCloudConnectRestApi.Yyy(); // Construct a model instance.\n   * yyyModel.someProperty = 'someValue';\n   * ...\n   * var zzz = xxxSvc.doSomething(yyyModel); // Invoke the service.\n   * ...\n   * </pre>\n   * </p>\n   * @module index\n   * @version 2\n   */\n  var exports = {\n    /**\n     * The ApiClient constructor.\n     * @property {module:ApiClient}\n     */\n    ApiClient: ApiClient,\n    /**\n     * The AsyncID model constructor.\n     * @property {module:model/AsyncID}\n     */\n    AsyncID: AsyncID,\n    /**\n     * The AsyncIDResponse model constructor.\n     * @property {module:model/AsyncIDResponse}\n     */\n    AsyncIDResponse: AsyncIDResponse,\n    /**\n     * The Endpoint model constructor.\n     * @property {module:model/Endpoint}\n     */\n    Endpoint: Endpoint,\n    /**\n     * The EndpointData model constructor.\n     * @property {module:model/EndpointData}\n     */\n    EndpointData: EndpointData,\n    /**\n     * The NotificationData model constructor.\n     * @property {module:model/NotificationData}\n     */\n    NotificationData: NotificationData,\n    /**\n     * The NotificationMessage model constructor.\n     * @property {module:model/NotificationMessage}\n     */\n    NotificationMessage: NotificationMessage,\n    /**\n     * The Presubscription model constructor.\n     * @property {module:model/Presubscription}\n     */\n    Presubscription: Presubscription,\n    /**\n     * The PresubscriptionArray model constructor.\n     * @property {module:model/PresubscriptionArray}\n     */\n    PresubscriptionArray: PresubscriptionArray,\n    /**\n     * The Resource model constructor.\n     * @property {module:model/Resource}\n     */\n    Resource: Resource,\n    /**\n     * The ResourcePath model constructor.\n     * @property {module:model/ResourcePath}\n     */\n    ResourcePath: ResourcePath,\n    /**\n     * The ResourcesData model constructor.\n     * @property {module:model/ResourcesData}\n     */\n    ResourcesData: ResourcesData,\n    /**\n     * The Webhook model constructor.\n     * @property {module:model/Webhook}\n     */\n    Webhook: Webhook,\n    /**\n     * The DefaultApi service constructor.\n     * @property {module:api/DefaultApi}\n     */\n    DefaultApi: DefaultApi,\n    /**\n     * The EndpointsApi service constructor.\n     * @property {module:api/EndpointsApi}\n     */\n    EndpointsApi: EndpointsApi,\n    /**\n     * The NotificationsApi service constructor.\n     * @property {module:api/NotificationsApi}\n     */\n    NotificationsApi: NotificationsApi,\n    /**\n     * The ResourcesApi service constructor.\n     * @property {module:api/ResourcesApi}\n     */\n    ResourcesApi: ResourcesApi,\n    /**\n     * The SubscriptionsApi service constructor.\n     * @property {module:api/SubscriptionsApi}\n     */\n    SubscriptionsApi: SubscriptionsApi\n  };\n\n  return exports;\n}));\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.AsyncID = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The AsyncID model module.\n   * @module model/AsyncID\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>AsyncID</code>.\n   * @alias module:model/AsyncID\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n  };\n\n  /**\n   * Constructs a <code>AsyncID</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/AsyncID} obj Optional instance to populate.\n   * @return {module:model/AsyncID} The populated <code>AsyncID</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('async-response-id')) {\n        obj['async-response-id'] = ApiClient.convertToType(data['async-response-id'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Asynchronous response unique ID.\n   * @member {String} async-response-id\n   */\n  exports.prototype['async-response-id'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.AsyncIDResponse = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The AsyncIDResponse model module.\n   * @module model/AsyncIDResponse\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>AsyncIDResponse</code>.\n   * @alias module:model/AsyncIDResponse\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>AsyncIDResponse</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/AsyncIDResponse} obj Optional instance to populate.\n   * @return {module:model/AsyncIDResponse} The populated <code>AsyncIDResponse</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'Integer');\n      }\n      if (data.hasOwnProperty('payload')) {\n        obj['payload'] = ApiClient.convertToType(data['payload'], 'String');\n      }\n      if (data.hasOwnProperty('max-age')) {\n        obj['max-age'] = ApiClient.convertToType(data['max-age'], 'String');\n      }\n      if (data.hasOwnProperty('error')) {\n        obj['error'] = ApiClient.convertToType(data['error'], 'String');\n      }\n      if (data.hasOwnProperty('id')) {\n        obj['id'] = ApiClient.convertToType(data['id'], 'String');\n      }\n      if (data.hasOwnProperty('ct')) {\n        obj['ct'] = ApiClient.convertToType(data['ct'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * HTTP status code, for example 200 for OK.\n   * @member {Integer} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * Requested data, base64 encoded.\n   * @member {String} payload\n   */\n  exports.prototype['payload'] = undefined;\n  /**\n   * Determines how long this value will be valid in cache, in seconds. 0 means that value won't be stored in cache.\n   * @member {String} max-age\n   */\n  exports.prototype['max-age'] = undefined;\n  /**\n   * Optional error message, describing error.\n   * @member {String} error\n   */\n  exports.prototype['error'] = undefined;\n  /**\n   * Asynchronous response unique ID.\n   * @member {String} id\n   */\n  exports.prototype['id'] = undefined;\n  /**\n   * Content type\n   * @member {String} ct\n   */\n  exports.prototype['ct'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.Endpoint = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Endpoint model module.\n   * @module model/Endpoint\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>Endpoint</code>.\n   * @alias module:model/Endpoint\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Endpoint</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Endpoint} obj Optional instance to populate.\n   * @return {module:model/Endpoint} The populated <code>Endpoint</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('status')) {\n        obj['status'] = ApiClient.convertToType(data['status'], 'String');\n      }\n      if (data.hasOwnProperty('q')) {\n        obj['q'] = ApiClient.convertToType(data['q'], 'Boolean');\n      }\n      if (data.hasOwnProperty('type')) {\n        obj['type'] = ApiClient.convertToType(data['type'], 'String');\n      }\n      if (data.hasOwnProperty('name')) {\n        obj['name'] = ApiClient.convertToType(data['name'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Possible values ACTIVE, STALE.\n   * @member {String} status\n   */\n  exports.prototype['status'] = undefined;\n  /**\n   * Determines whether the device is in queue mode. <br/><br/><b>Queue mode</b><br/> When an endpoint is in queue mode, messages sent to the endpoint do not wake up the physical device. The messages are queued and delivered when the device wakes up and connects to mbed Cloud Connect itself. You can also use the Queue mode when the device is behind a NAT and cannot be reached directly by mbed Cloud Connect. \n   * @member {Boolean} q\n   */\n  exports.prototype['q'] = undefined;\n  /**\n   * Type of endpoint. (Free text)\n   * @member {String} type\n   */\n  exports.prototype['type'] = undefined;\n  /**\n   * Unique identifier representing the endpoint.\n   * @member {String} name\n   */\n  exports.prototype['name'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/ResourcesData'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./ResourcesData'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.EndpointData = factory(root.MbedCloudConnectRestApi.ApiClient, root.MbedCloudConnectRestApi.ResourcesData);\n  }\n}(this, function(ApiClient, ResourcesData) {\n  'use strict';\n\n\n\n\n  /**\n   * The EndpointData model module.\n   * @module model/EndpointData\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>EndpointData</code>.\n   * @alias module:model/EndpointData\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>EndpointData</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/EndpointData} obj Optional instance to populate.\n   * @return {module:model/EndpointData} The populated <code>EndpointData</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('q')) {\n        obj['q'] = ApiClient.convertToType(data['q'], 'Boolean');\n      }\n      if (data.hasOwnProperty('ept')) {\n        obj['ept'] = ApiClient.convertToType(data['ept'], 'String');\n      }\n      if (data.hasOwnProperty('ep')) {\n        obj['ep'] = ApiClient.convertToType(data['ep'], 'String');\n      }\n      if (data.hasOwnProperty('resources')) {\n        obj['resources'] = ApiClient.convertToType(data['resources'], [ResourcesData]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Queue mode (default value is false)\n   * @member {Boolean} q\n   */\n  exports.prototype['q'] = undefined;\n  /**\n   * Endpoint type\n   * @member {String} ept\n   */\n  exports.prototype['ept'] = undefined;\n  /**\n   * Endpoint name\n   * @member {String} ep\n   */\n  exports.prototype['ep'] = undefined;\n  /**\n   * @member {Array.<module:model/ResourcesData>} resources\n   */\n  exports.prototype['resources'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.NotificationData = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The NotificationData model module.\n   * @module model/NotificationData\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>NotificationData</code>.\n   * @alias module:model/NotificationData\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>NotificationData</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/NotificationData} obj Optional instance to populate.\n   * @return {module:model/NotificationData} The populated <code>NotificationData</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('timestamp')) {\n        obj['timestamp'] = ApiClient.convertToType(data['timestamp'], 'String');\n      }\n      if (data.hasOwnProperty('payload')) {\n        obj['payload'] = ApiClient.convertToType(data['payload'], 'String');\n      }\n      if (data.hasOwnProperty('path')) {\n        obj['path'] = ApiClient.convertToType(data['path'], 'String');\n      }\n      if (data.hasOwnProperty('max-age')) {\n        obj['max-age'] = ApiClient.convertToType(data['max-age'], 'String');\n      }\n      if (data.hasOwnProperty('ep')) {\n        obj['ep'] = ApiClient.convertToType(data['ep'], 'String');\n      }\n      if (data.hasOwnProperty('ct')) {\n        obj['ct'] = ApiClient.convertToType(data['ct'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Timestamp\n   * @member {String} timestamp\n   */\n  exports.prototype['timestamp'] = undefined;\n  /**\n   * Base64 encoded payload\n   * @member {String} payload\n   */\n  exports.prototype['payload'] = undefined;\n  /**\n   * URI path\n   * @member {String} path\n   */\n  exports.prototype['path'] = undefined;\n  /**\n   * Max age\n   * @member {String} max-age\n   */\n  exports.prototype['max-age'] = undefined;\n  /**\n   * Endpoint name\n   * @member {String} ep\n   */\n  exports.prototype['ep'] = undefined;\n  /**\n   * Content type\n   * @member {String} ct\n   */\n  exports.prototype['ct'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/AsyncIDResponse', 'model/EndpointData', 'model/NotificationData'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./AsyncIDResponse'), require('./EndpointData'), require('./NotificationData'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.NotificationMessage = factory(root.MbedCloudConnectRestApi.ApiClient, root.MbedCloudConnectRestApi.AsyncIDResponse, root.MbedCloudConnectRestApi.EndpointData, root.MbedCloudConnectRestApi.NotificationData);\n  }\n}(this, function(ApiClient, AsyncIDResponse, EndpointData, NotificationData) {\n  'use strict';\n\n\n\n\n  /**\n   * The NotificationMessage model module.\n   * @module model/NotificationMessage\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>NotificationMessage</code>.\n   * @alias module:model/NotificationMessage\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>NotificationMessage</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/NotificationMessage} obj Optional instance to populate.\n   * @return {module:model/NotificationMessage} The populated <code>NotificationMessage</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('async-responses')) {\n        obj['async-responses'] = ApiClient.convertToType(data['async-responses'], [AsyncIDResponse]);\n      }\n      if (data.hasOwnProperty('de-registrations')) {\n        obj['de-registrations'] = ApiClient.convertToType(data['de-registrations'], ['String']);\n      }\n      if (data.hasOwnProperty('reg-updates')) {\n        obj['reg-updates'] = ApiClient.convertToType(data['reg-updates'], [EndpointData]);\n      }\n      if (data.hasOwnProperty('registrations')) {\n        obj['registrations'] = ApiClient.convertToType(data['registrations'], [EndpointData]);\n      }\n      if (data.hasOwnProperty('notifications')) {\n        obj['notifications'] = ApiClient.convertToType(data['notifications'], [NotificationData]);\n      }\n      if (data.hasOwnProperty('registrations-expired')) {\n        obj['registrations-expired'] = ApiClient.convertToType(data['registrations-expired'], ['String']);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {Array.<module:model/AsyncIDResponse>} async-responses\n   */\n  exports.prototype['async-responses'] = undefined;\n  /**\n   * @member {Array.<String>} de-registrations\n   */\n  exports.prototype['de-registrations'] = undefined;\n  /**\n   * @member {Array.<module:model/EndpointData>} reg-updates\n   */\n  exports.prototype['reg-updates'] = undefined;\n  /**\n   * @member {Array.<module:model/EndpointData>} registrations\n   */\n  exports.prototype['registrations'] = undefined;\n  /**\n   * @member {Array.<module:model/NotificationData>} notifications\n   */\n  exports.prototype['notifications'] = undefined;\n  /**\n   * @member {Array.<String>} registrations-expired\n   */\n  exports.prototype['registrations-expired'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/ResourcePath'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./ResourcePath'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.Presubscription = factory(root.MbedCloudConnectRestApi.ApiClient, root.MbedCloudConnectRestApi.ResourcePath);\n  }\n}(this, function(ApiClient, ResourcePath) {\n  'use strict';\n\n\n\n\n  /**\n   * The Presubscription model module.\n   * @module model/Presubscription\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>Presubscription</code>.\n   * @alias module:model/Presubscription\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Presubscription</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Presubscription} obj Optional instance to populate.\n   * @return {module:model/Presubscription} The populated <code>Presubscription</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('endpoint-name')) {\n        obj['endpoint-name'] = ApiClient.convertToType(data['endpoint-name'], 'String');\n      }\n      if (data.hasOwnProperty('endpoint-type')) {\n        obj['endpoint-type'] = ApiClient.convertToType(data['endpoint-type'], 'String');\n      }\n      if (data.hasOwnProperty('resource-path')) {\n        obj['resource-path'] = ApiClient.convertToType(data['resource-path'], [ResourcePath]);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * @member {String} endpoint-name\n   */\n  exports.prototype['endpoint-name'] = undefined;\n  /**\n   * @member {String} endpoint-type\n   */\n  exports.prototype['endpoint-type'] = undefined;\n  /**\n   * @member {Array.<module:model/ResourcePath>} resource-path\n   */\n  exports.prototype['resource-path'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient', 'model/Presubscription'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'), require('./Presubscription'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.PresubscriptionArray = factory(root.MbedCloudConnectRestApi.ApiClient, root.MbedCloudConnectRestApi.Presubscription);\n  }\n}(this, function(ApiClient, Presubscription) {\n  'use strict';\n\n\n\n\n  /**\n   * The PresubscriptionArray model module.\n   * @module model/PresubscriptionArray\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>PresubscriptionArray</code>.\n   * @alias module:model/PresubscriptionArray\n   * @class\n   * @extends Array\n   */\n  var exports = function() {\n    var _this = this;\n    _this = new Array();\n    Object.setPrototypeOf(_this, exports);\n\n    return _this;\n  };\n\n  /**\n   * Constructs a <code>PresubscriptionArray</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/PresubscriptionArray} obj Optional instance to populate.\n   * @return {module:model/PresubscriptionArray} The populated <code>PresubscriptionArray</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n      ApiClient.constructFromObject(data, obj, Presubscription);\n\n    }\n    return obj;\n  }\n\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.Resource = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Resource model module.\n   * @module model/Resource\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>Resource</code>.\n   * @alias module:model/Resource\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Resource</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Resource} obj Optional instance to populate.\n   * @return {module:model/Resource} The populated <code>Resource</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('rt')) {\n        obj['rt'] = ApiClient.convertToType(data['rt'], 'String');\n      }\n      if (data.hasOwnProperty('type')) {\n        obj['type'] = ApiClient.convertToType(data['type'], 'String');\n      }\n      if (data.hasOwnProperty('uri')) {\n        obj['uri'] = ApiClient.convertToType(data['uri'], 'String');\n      }\n      if (data.hasOwnProperty('obs')) {\n        obj['obs'] = ApiClient.convertToType(data['obs'], 'Boolean');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Resource's type\n   * @member {String} rt\n   */\n  exports.prototype['rt'] = undefined;\n  /**\n   * The content type of the resource. <br/><br/><b>Important</b><br/> You are encouraged to use the resource types listed in the LWM2M specification: http://technical.openmobilealliance.org/Technical/technical-information/omna/lightweight-m2m-lwm2m-object-registry \n   * @member {String} type\n   */\n  exports.prototype['type'] = undefined;\n  /**\n   * Resource's url.\n   * @member {String} uri\n   */\n  exports.prototype['uri'] = undefined;\n  /**\n   * Observable determines whether you can subscribe to changes for this resource. It can have values \\\"true\\\" or \\\"false\\\". \n   * @member {Boolean} obs\n   */\n  exports.prototype['obs'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.ResourcePath = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The ResourcePath model module.\n   * @module model/ResourcePath\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>ResourcePath</code>.\n   * @alias module:model/ResourcePath\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n  };\n\n  /**\n   * Constructs a <code>ResourcePath</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ResourcePath} obj Optional instance to populate.\n   * @return {module:model/ResourcePath} The populated <code>ResourcePath</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n    }\n    return obj;\n  }\n\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.ResourcesData = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The ResourcesData model module.\n   * @module model/ResourcesData\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>ResourcesData</code>.\n   * @alias module:model/ResourcesData\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n\n\n\n  };\n\n  /**\n   * Constructs a <code>ResourcesData</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/ResourcesData} obj Optional instance to populate.\n   * @return {module:model/ResourcesData} The populated <code>ResourcesData</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('path')) {\n        obj['path'] = ApiClient.convertToType(data['path'], 'String');\n      }\n      if (data.hasOwnProperty('rf')) {\n        obj['rf'] = ApiClient.convertToType(data['rf'], 'String');\n      }\n      if (data.hasOwnProperty('ct')) {\n        obj['ct'] = ApiClient.convertToType(data['ct'], 'String');\n      }\n      if (data.hasOwnProperty('obs')) {\n        obj['obs'] = ApiClient.convertToType(data['obs'], 'Boolean');\n      }\n      if (data.hasOwnProperty('if')) {\n        obj['if'] = ApiClient.convertToType(data['if'], 'String');\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * Resource's URI path\n   * @member {String} path\n   */\n  exports.prototype['path'] = undefined;\n  /**\n   * Resource type\n   * @member {String} rf\n   */\n  exports.prototype['rf'] = undefined;\n  /**\n   * Content type\n   * @member {String} ct\n   */\n  exports.prototype['ct'] = undefined;\n  /**\n   * Whether the resource is observable or not (true/false)\n   * @member {Boolean} obs\n   */\n  exports.prototype['obs'] = undefined;\n  /**\n   * Interface description\n   * @member {String} if\n   */\n  exports.prototype['if'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/**\n * mbed Cloud Connect REST API\n * mbed Cloud Connect REST API allows web applications to communicate with devices.\n *\n * OpenAPI spec version: 2\n * \n *\n * NOTE: This class is auto generated by the swagger code generator program.\n * https://github.com/swagger-api/swagger-codegen.git\n * Do not edit the class manually.\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n * http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n(function(root, factory) {\n  if (typeof define === 'function' && define.amd) {\n    // AMD. Register as an anonymous module.\n    define(['ApiClient'], factory);\n  } else if (typeof module === 'object' && module.exports) {\n    // CommonJS-like environments that support module.exports, like Node.\n    module.exports = factory(require('../ApiClient'));\n  } else {\n    // Browser globals (root is window)\n    if (!root.MbedCloudConnectRestApi) {\n      root.MbedCloudConnectRestApi = {};\n    }\n    root.MbedCloudConnectRestApi.Webhook = factory(root.MbedCloudConnectRestApi.ApiClient);\n  }\n}(this, function(ApiClient) {\n  'use strict';\n\n\n\n\n  /**\n   * The Webhook model module.\n   * @module model/Webhook\n   * @version 2\n   */\n\n  /**\n   * Constructs a new <code>Webhook</code>.\n   * @alias module:model/Webhook\n   * @class\n   */\n  var exports = function() {\n    var _this = this;\n\n\n\n  };\n\n  /**\n   * Constructs a <code>Webhook</code> from a plain JavaScript object, optionally creating a new instance.\n   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.\n   * @param {Object} data The plain JavaScript object bearing properties of interest.\n   * @param {module:model/Webhook} obj Optional instance to populate.\n   * @return {module:model/Webhook} The populated <code>Webhook</code> instance.\n   */\n  exports.constructFromObject = function(data, obj) {\n    if (data) {\n      obj = obj || new exports();\n\n      if (data.hasOwnProperty('url')) {\n        obj['url'] = ApiClient.convertToType(data['url'], 'String');\n      }\n      if (data.hasOwnProperty('headers')) {\n        obj['headers'] = ApiClient.convertToType(data['headers'], Object);\n      }\n    }\n    return obj;\n  }\n\n  /**\n   * The URL to which the notifications must be sent. We recommend that you serve this URL over HTTPS.\n   * @member {String} url\n   */\n  exports.prototype['url'] = undefined;\n  /**\n   * Headers (key/value) that must be sent with the request. Optional.\n   * @member {Object} headers\n   */\n  exports.prototype['headers'] = undefined;\n\n\n\n  return exports;\n}));\n\n\n","/*\n* mbed Cloud SDK\n* Copyright 2017 ARM Limited\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\"use strict\";\nvar mds = require(\"../_backends/mds\");\nvar Resource = (function () {\n    function Resource(client, options) {\n        this.client = client;\n        this.obs = options.obs;\n        this.rt = options.rt;\n        this.type = options.type;\n        this.uri = options.uri;\n    }\n    Resource.prototype.getValue = function () {\n        return new Promise(function (resolve, reject) {\n            resolve(\"value - \" + this.uri);\n        }.bind(this));\n    };\n    ;\n    return Resource;\n}());\nvar Endpoint = (function () {\n    function Endpoint(client, options) {\n        this.client = client;\n        this.name = options.name;\n        this.status = options.status;\n        this.type = options.type;\n    }\n    Endpoint.prototype.listResources = function () {\n        return new Promise(function (resolve, reject) {\n            var api = new mds.EndpointsApi(this.client);\n            api.v2EndpointsEndpointNameGet(this.name, function (err, resources) {\n                if (err)\n                    return reject(err);\n                resources = resources.map(function (resource) {\n                    return new Resource(this.client, resource);\n                }.bind(this));\n                resolve(resources);\n            }.bind(this));\n        }.bind(this));\n    };\n    return Endpoint;\n}());\nvar Devices = (function () {\n    function Devices(options) {\n        this.client = new mds.ApiClient();\n        if (options.host)\n            this.client.basePath = options.host;\n        if (options.key)\n            this.client.authentications.Bearer.apiKey = options.key;\n        this.client.authentications.Bearer.apiKeyPrefix = 'Bearer';\n    }\n    Devices.prototype.listEndpoints = function () {\n        return new Promise(function (resolve, reject) {\n            var api = new mds.EndpointsApi(this.client);\n            api.v2EndpointsGet(null, function (err, endpoints) {\n                if (err)\n                    return reject(err);\n                endpoints = endpoints.map(function (endpoint) {\n                    return new Endpoint(this.client, endpoint);\n                }.bind(this));\n                resolve(endpoints);\n            }.bind(this));\n        }.bind(this));\n    };\n    return Devices;\n}());\nmodule.exports = Devices;\n/*\npromises and callbacks based on callback passed\npublish docs to s3\n\nmds.NotificationsApi.v2NotificationCallbackPut\nmds.NotificationsApi.v2NotificationPullGet\nmds.DefaultApi.v2NotificationCallbackDelete\nmds.DefaultApi.v2NotificationCallbackGet\nmds.ResourcesApi.v2EndpointsEndpointNameResourcePathDelete\nmds.ResourcesApi.v2EndpointsEndpointNameResourcePathGet\nmds.ResourcesApi.v2EndpointsEndpointNameResourcePathPost\nmds.ResourcesApi.v2EndpointsEndpointNameResourcePathPut\nmds.SubscriptionsApi.v2SubscriptionsGet\nmds.SubscriptionsApi.v2SubscriptionsPut\nmds.SubscriptionsApi.v2SubscriptionsDelete\nmds.SubscriptionsApi.v2SubscriptionsEndpointNameDelete\nmds.SubscriptionsApi.v2SubscriptionsEndpointNameGet\nmds.SubscriptionsApi.v2SubscriptionsEndpointNameResourcePathDelete\nmds.SubscriptionsApi.v2SubscriptionsEndpointNameResourcePathGet\nmds.SubscriptionsApi.v2SubscriptionsEndpointNameResourcePathPut\n*/\n","/**\n * Root reference for iframes.\n */\n\nvar root;\nif (typeof window !== 'undefined') { // Browser window\n  root = window;\n} else if (typeof self !== 'undefined') { // Web Worker\n  root = self;\n} else { // Other environments\n  console.warn(\"Using browser-only version of superagent in non-browser environment\");\n  root = this;\n}\n\nvar Emitter = require('emitter');\nvar RequestBase = require('./request-base');\nvar isObject = require('./is-object');\nvar isFunction = require('./is-function');\nvar ResponseBase = require('./response-base');\n\n/**\n * Noop.\n */\n\nfunction noop(){};\n\n/**\n * Expose `request`.\n */\n\nvar request = exports = module.exports = function(method, url) {\n  // callback\n  if ('function' == typeof url) {\n    return new exports.Request('GET', method).end(url);\n  }\n\n  // url first\n  if (1 == arguments.length) {\n    return new exports.Request('GET', method);\n  }\n\n  return new exports.Request(method, url);\n}\n\nexports.Request = Request;\n\n/**\n * Determine XHR.\n */\n\nrequest.getXHR = function () {\n  if (root.XMLHttpRequest\n      && (!root.location || 'file:' != root.location.protocol\n          || !root.ActiveXObject)) {\n    return new XMLHttpRequest;\n  } else {\n    try { return new ActiveXObject('Microsoft.XMLHTTP'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.6.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP.3.0'); } catch(e) {}\n    try { return new ActiveXObject('Msxml2.XMLHTTP'); } catch(e) {}\n  }\n  throw Error(\"Browser-only verison of superagent could not find XHR\");\n};\n\n/**\n * Removes leading and trailing whitespace, added to support IE.\n *\n * @param {String} s\n * @return {String}\n * @api private\n */\n\nvar trim = ''.trim\n  ? function(s) { return s.trim(); }\n  : function(s) { return s.replace(/(^\\s*|\\s*$)/g, ''); };\n\n/**\n * Serialize the given `obj`.\n *\n * @param {Object} obj\n * @return {String}\n * @api private\n */\n\nfunction serialize(obj) {\n  if (!isObject(obj)) return obj;\n  var pairs = [];\n  for (var key in obj) {\n    pushEncodedKeyValuePair(pairs, key, obj[key]);\n  }\n  return pairs.join('&');\n}\n\n/**\n * Helps 'serialize' with serializing arrays.\n * Mutates the pairs array.\n *\n * @param {Array} pairs\n * @param {String} key\n * @param {Mixed} val\n */\n\nfunction pushEncodedKeyValuePair(pairs, key, val) {\n  if (val != null) {\n    if (Array.isArray(val)) {\n      val.forEach(function(v) {\n        pushEncodedKeyValuePair(pairs, key, v);\n      });\n    } else if (isObject(val)) {\n      for(var subkey in val) {\n        pushEncodedKeyValuePair(pairs, key + '[' + subkey + ']', val[subkey]);\n      }\n    } else {\n      pairs.push(encodeURIComponent(key)\n        + '=' + encodeURIComponent(val));\n    }\n  } else if (val === null) {\n    pairs.push(encodeURIComponent(key));\n  }\n}\n\n/**\n * Expose serialization method.\n */\n\n request.serializeObject = serialize;\n\n /**\n  * Parse the given x-www-form-urlencoded `str`.\n  *\n  * @param {String} str\n  * @return {Object}\n  * @api private\n  */\n\nfunction parseString(str) {\n  var obj = {};\n  var pairs = str.split('&');\n  var pair;\n  var pos;\n\n  for (var i = 0, len = pairs.length; i < len; ++i) {\n    pair = pairs[i];\n    pos = pair.indexOf('=');\n    if (pos == -1) {\n      obj[decodeURIComponent(pair)] = '';\n    } else {\n      obj[decodeURIComponent(pair.slice(0, pos))] =\n        decodeURIComponent(pair.slice(pos + 1));\n    }\n  }\n\n  return obj;\n}\n\n/**\n * Expose parser.\n */\n\nrequest.parseString = parseString;\n\n/**\n * Default MIME type map.\n *\n *     superagent.types.xml = 'application/xml';\n *\n */\n\nrequest.types = {\n  html: 'text/html',\n  json: 'application/json',\n  xml: 'application/xml',\n  urlencoded: 'application/x-www-form-urlencoded',\n  'form': 'application/x-www-form-urlencoded',\n  'form-data': 'application/x-www-form-urlencoded'\n};\n\n/**\n * Default serialization map.\n *\n *     superagent.serialize['application/xml'] = function(obj){\n *       return 'generated xml here';\n *     };\n *\n */\n\n request.serialize = {\n   'application/x-www-form-urlencoded': serialize,\n   'application/json': JSON.stringify\n };\n\n /**\n  * Default parsers.\n  *\n  *     superagent.parse['application/xml'] = function(str){\n  *       return { object parsed from str };\n  *     };\n  *\n  */\n\nrequest.parse = {\n  'application/x-www-form-urlencoded': parseString,\n  'application/json': JSON.parse\n};\n\n/**\n * Parse the given header `str` into\n * an object containing the mapped fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nfunction parseHeader(str) {\n  var lines = str.split(/\\r?\\n/);\n  var fields = {};\n  var index;\n  var line;\n  var field;\n  var val;\n\n  lines.pop(); // trailing CRLF\n\n  for (var i = 0, len = lines.length; i < len; ++i) {\n    line = lines[i];\n    index = line.indexOf(':');\n    field = line.slice(0, index).toLowerCase();\n    val = trim(line.slice(index + 1));\n    fields[field] = val;\n  }\n\n  return fields;\n}\n\n/**\n * Check if `mime` is json or has +json structured syntax suffix.\n *\n * @param {String} mime\n * @return {Boolean}\n * @api private\n */\n\nfunction isJSON(mime) {\n  return /[\\/+]json\\b/.test(mime);\n}\n\n/**\n * Initialize a new `Response` with the given `xhr`.\n *\n *  - set flags (.ok, .error, etc)\n *  - parse header\n *\n * Examples:\n *\n *  Aliasing `superagent` as `request` is nice:\n *\n *      request = superagent;\n *\n *  We can use the promise-like API, or pass callbacks:\n *\n *      request.get('/').end(function(res){});\n *      request.get('/', function(res){});\n *\n *  Sending data can be chained:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' })\n *        .end(function(res){});\n *\n *  Or passed to `.send()`:\n *\n *      request\n *        .post('/user')\n *        .send({ name: 'tj' }, function(res){});\n *\n *  Or passed to `.post()`:\n *\n *      request\n *        .post('/user', { name: 'tj' })\n *        .end(function(res){});\n *\n * Or further reduced to a single call for simple cases:\n *\n *      request\n *        .post('/user', { name: 'tj' }, function(res){});\n *\n * @param {XMLHTTPRequest} xhr\n * @param {Object} options\n * @api private\n */\n\nfunction Response(req, options) {\n  options = options || {};\n  this.req = req;\n  this.xhr = this.req.xhr;\n  // responseText is accessible only if responseType is '' or 'text' and on older browsers\n  this.text = ((this.req.method !='HEAD' && (this.xhr.responseType === '' || this.xhr.responseType === 'text')) || typeof this.xhr.responseType === 'undefined')\n     ? this.xhr.responseText\n     : null;\n  this.statusText = this.req.xhr.statusText;\n  var status = this.xhr.status;\n  // handle IE9 bug: http://stackoverflow.com/questions/10046972/msie-returns-status-code-of-1223-for-ajax-request\n  if (status === 1223) {\n      status = 204;\n  }\n  this._setStatusProperties(status);\n  this.header = this.headers = parseHeader(this.xhr.getAllResponseHeaders());\n  // getAllResponseHeaders sometimes falsely returns \"\" for CORS requests, but\n  // getResponseHeader still works. so we get content-type even if getting\n  // other headers fails.\n  this.header['content-type'] = this.xhr.getResponseHeader('content-type');\n  this._setHeaderProperties(this.header);\n\n  if (null === this.text && req._responseType) {\n    this.body = this.xhr.response;\n  } else {\n    this.body = this.req.method != 'HEAD'\n      ? this._parseBody(this.text ? this.text : this.xhr.response)\n      : null;\n  }\n}\n\nResponseBase(Response.prototype);\n\n/**\n * Parse the given body `str`.\n *\n * Used for auto-parsing of bodies. Parsers\n * are defined on the `superagent.parse` object.\n *\n * @param {String} str\n * @return {Mixed}\n * @api private\n */\n\nResponse.prototype._parseBody = function(str){\n  var parse = request.parse[this.type];\n  if(this.req._parser) {\n    return this.req._parser(this, str);\n  }\n  if (!parse && isJSON(this.type)) {\n    parse = request.parse['application/json'];\n  }\n  return parse && str && (str.length || str instanceof Object)\n    ? parse(str)\n    : null;\n};\n\n/**\n * Return an `Error` representative of this response.\n *\n * @return {Error}\n * @api public\n */\n\nResponse.prototype.toError = function(){\n  var req = this.req;\n  var method = req.method;\n  var url = req.url;\n\n  var msg = 'cannot ' + method + ' ' + url + ' (' + this.status + ')';\n  var err = new Error(msg);\n  err.status = this.status;\n  err.method = method;\n  err.url = url;\n\n  return err;\n};\n\n/**\n * Expose `Response`.\n */\n\nrequest.Response = Response;\n\n/**\n * Initialize a new `Request` with the given `method` and `url`.\n *\n * @param {String} method\n * @param {String} url\n * @api public\n */\n\nfunction Request(method, url) {\n  var self = this;\n  this._query = this._query || [];\n  this.method = method;\n  this.url = url;\n  this.header = {}; // preserves header name case\n  this._header = {}; // coerces header names to lowercase\n  this.on('end', function(){\n    var err = null;\n    var res = null;\n\n    try {\n      res = new Response(self);\n    } catch(e) {\n      err = new Error('Parser is unable to parse the response');\n      err.parse = true;\n      err.original = e;\n      // issue #675: return the raw response if the response parsing fails\n      if (self.xhr) {\n        // ie9 doesn't have 'response' property\n        err.rawResponse = typeof self.xhr.responseType == 'undefined' ? self.xhr.responseText : self.xhr.response;\n        // issue #876: return the http status code if the response parsing fails\n        err.status = self.xhr.status ? self.xhr.status : null;\n        err.statusCode = err.status; // backwards-compat only\n      } else {\n        err.rawResponse = null;\n        err.status = null;\n      }\n\n      return self.callback(err);\n    }\n\n    self.emit('response', res);\n\n    var new_err;\n    try {\n      if (!self._isResponseOK(res)) {\n        new_err = new Error(res.statusText || 'Unsuccessful HTTP response');\n        new_err.original = err;\n        new_err.response = res;\n        new_err.status = res.status;\n      }\n    } catch(e) {\n      new_err = e; // #985 touching res may cause INVALID_STATE_ERR on old Android\n    }\n\n    // #1000 don't catch errors from the callback to avoid double calling it\n    if (new_err) {\n      self.callback(new_err, res);\n    } else {\n      self.callback(null, res);\n    }\n  });\n}\n\n/**\n * Mixin `Emitter` and `RequestBase`.\n */\n\nEmitter(Request.prototype);\nRequestBase(Request.prototype);\n\n/**\n * Set Content-Type to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.xml = 'application/xml';\n *\n *      request.post('/')\n *        .type('xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n *      request.post('/')\n *        .type('application/xml')\n *        .send(xmlstring)\n *        .end(callback);\n *\n * @param {String} type\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.type = function(type){\n  this.set('Content-Type', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Accept to `type`, mapping values from `request.types`.\n *\n * Examples:\n *\n *      superagent.types.json = 'application/json';\n *\n *      request.get('/agent')\n *        .accept('json')\n *        .end(callback);\n *\n *      request.get('/agent')\n *        .accept('application/json')\n *        .end(callback);\n *\n * @param {String} accept\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.accept = function(type){\n  this.set('Accept', request.types[type] || type);\n  return this;\n};\n\n/**\n * Set Authorization field value with `user` and `pass`.\n *\n * @param {String} user\n * @param {String} pass\n * @param {Object} options with 'type' property 'auto' or 'basic' (default 'basic')\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.auth = function(user, pass, options){\n  if (!options) {\n    options = {\n      type: 'function' === typeof btoa ? 'basic' : 'auto',\n    }\n  }\n\n  switch (options.type) {\n    case 'basic':\n      this.set('Authorization', 'Basic ' + btoa(user + ':' + pass));\n    break;\n\n    case 'auto':\n      this.username = user;\n      this.password = pass;\n    break;\n  }\n  return this;\n};\n\n/**\n* Add query-string `val`.\n*\n* Examples:\n*\n*   request.get('/shoes')\n*     .query('size=10')\n*     .query({ color: 'blue' })\n*\n* @param {Object|String} val\n* @return {Request} for chaining\n* @api public\n*/\n\nRequest.prototype.query = function(val){\n  if ('string' != typeof val) val = serialize(val);\n  if (val) this._query.push(val);\n  return this;\n};\n\n/**\n * Queue the given `file` as an attachment to the specified `field`,\n * with optional `options` (or filename).\n *\n * ``` js\n * request.post('/upload')\n *   .attach('content', new Blob(['<a id=\"a\"><b id=\"b\">hey!</b></a>'], { type: \"text/html\"}))\n *   .end(callback);\n * ```\n *\n * @param {String} field\n * @param {Blob|File} file\n * @param {String|Object} options\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.attach = function(field, file, options){\n  if (this._data) {\n    throw Error(\"superagent can't mix .send() and .attach()\");\n  }\n\n  this._getFormData().append(field, file, options || file.name);\n  return this;\n};\n\nRequest.prototype._getFormData = function(){\n  if (!this._formData) {\n    this._formData = new root.FormData();\n  }\n  return this._formData;\n};\n\n/**\n * Invoke the callback with `err` and `res`\n * and handle arity check.\n *\n * @param {Error} err\n * @param {Response} res\n * @api private\n */\n\nRequest.prototype.callback = function(err, res){\n  var fn = this._callback;\n  this.clearTimeout();\n\n  if (err) {\n    this.emit('error', err);\n  }\n\n  fn(err, res);\n};\n\n/**\n * Invoke callback with x-domain error.\n *\n * @api private\n */\n\nRequest.prototype.crossDomainError = function(){\n  var err = new Error('Request has been terminated\\nPossible causes: the network is offline, Origin is not allowed by Access-Control-Allow-Origin, the page is being unloaded, etc.');\n  err.crossDomain = true;\n\n  err.status = this.status;\n  err.method = this.method;\n  err.url = this.url;\n\n  this.callback(err);\n};\n\n// This only warns, because the request is still likely to work\nRequest.prototype.buffer = Request.prototype.ca = Request.prototype.agent = function(){\n  console.warn(\"This is not supported in browser version of superagent\");\n  return this;\n};\n\n// This throws, because it can't send/receive data as expected\nRequest.prototype.pipe = Request.prototype.write = function(){\n  throw Error(\"Streaming is not supported in browser version of superagent\");\n};\n\n/**\n * Compose querystring to append to req.url\n *\n * @api private\n */\n\nRequest.prototype._appendQueryString = function(){\n  var query = this._query.join('&');\n  if (query) {\n    this.url += (this.url.indexOf('?') >= 0 ? '&' : '?') + query;\n  }\n\n  if (this._sort) {\n    var index = this.url.indexOf('?');\n    if (index >= 0) {\n      var queryArr = this.url.substring(index + 1).split('&');\n      if (isFunction(this._sort)) {\n        queryArr.sort(this._sort);\n      } else {\n        queryArr.sort();\n      }\n      this.url = this.url.substring(0, index) + '?' + queryArr.join('&');\n    }\n  }\n};\n\n/**\n * Check if `obj` is a host object,\n * we don't want to serialize these :)\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\nRequest.prototype._isHost = function _isHost(obj) {\n  // Native objects stringify to [object File], [object Blob], [object FormData], etc.\n  return obj && 'object' === typeof obj && !Array.isArray(obj) && Object.prototype.toString.call(obj) !== '[object Object]';\n}\n\n/**\n * Initiate request, invoking callback `fn(res)`\n * with an instanceof `Response`.\n *\n * @param {Function} fn\n * @return {Request} for chaining\n * @api public\n */\n\nRequest.prototype.end = function(fn){\n  var self = this;\n  var xhr = this.xhr = request.getXHR();\n  var data = this._formData || this._data;\n\n  if (this._endCalled) {\n    console.warn(\"Warning: .end() was called twice. This is not supported in superagent\");\n  }\n  this._endCalled = true;\n\n  // store callback\n  this._callback = fn || noop;\n\n  // state change\n  xhr.onreadystatechange = function(){\n    var readyState = xhr.readyState;\n    if (readyState >= 2 && self._responseTimeoutTimer) {\n      clearTimeout(self._responseTimeoutTimer);\n    }\n    if (4 != readyState) {\n      return;\n    }\n\n    // In IE9, reads to any property (e.g. status) off of an aborted XHR will\n    // result in the error \"Could not complete the operation due to error c00c023f\"\n    var status;\n    try { status = xhr.status } catch(e) { status = 0; }\n\n    if (!status) {\n      if (self.timedout || self._aborted) return;\n      return self.crossDomainError();\n    }\n    self.emit('end');\n  };\n\n  // progress\n  var handleProgress = function(direction, e) {\n    if (e.total > 0) {\n      e.percent = e.loaded / e.total * 100;\n    }\n    e.direction = direction;\n    self.emit('progress', e);\n  }\n  if (this.hasListeners('progress')) {\n    try {\n      xhr.onprogress = handleProgress.bind(null, 'download');\n      if (xhr.upload) {\n        xhr.upload.onprogress = handleProgress.bind(null, 'upload');\n      }\n    } catch(e) {\n      // Accessing xhr.upload fails in IE from a web worker, so just pretend it doesn't exist.\n      // Reported here:\n      // https://connect.microsoft.com/IE/feedback/details/837245/xmlhttprequest-upload-throws-invalid-argument-when-used-from-web-worker-context\n    }\n  }\n\n  // querystring\n  this._appendQueryString();\n\n  this._setTimeouts();\n\n  // initiate request\n  if (this.username && this.password) {\n    xhr.open(this.method, this.url, true, this.username, this.password);\n  } else {\n    xhr.open(this.method, this.url, true);\n  }\n\n  // CORS\n  if (this._withCredentials) xhr.withCredentials = true;\n\n  // body\n  if (!this._formData && 'GET' != this.method && 'HEAD' != this.method && 'string' != typeof data && !this._isHost(data)) {\n    // serialize stuff\n    var contentType = this._header['content-type'];\n    var serialize = this._serializer || request.serialize[contentType ? contentType.split(';')[0] : ''];\n    if (!serialize && isJSON(contentType)) {\n      serialize = request.serialize['application/json'];\n    }\n    if (serialize) data = serialize(data);\n  }\n\n  // set header fields\n  for (var field in this.header) {\n    if (null == this.header[field]) continue;\n    xhr.setRequestHeader(field, this.header[field]);\n  }\n\n  if (this._responseType) {\n    xhr.responseType = this._responseType;\n  }\n\n  // send stuff\n  this.emit('request', this);\n\n  // IE11 xhr.send(undefined) sends 'undefined' string as POST payload (instead of nothing)\n  // We need null here if data is undefined\n  xhr.send(typeof data !== 'undefined' ? data : null);\n  return this;\n};\n\n/**\n * GET `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.get = function(url, data, fn){\n  var req = request('GET', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.query(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * HEAD `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.head = function(url, data, fn){\n  var req = request('HEAD', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * OPTIONS query to `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.options = function(url, data, fn){\n  var req = request('OPTIONS', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * DELETE `url` with optional callback `fn(res)`.\n *\n * @param {String} url\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nfunction del(url, fn){\n  var req = request('DELETE', url);\n  if (fn) req.end(fn);\n  return req;\n};\n\nrequest['del'] = del;\nrequest['delete'] = del;\n\n/**\n * PATCH `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.patch = function(url, data, fn){\n  var req = request('PATCH', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * POST `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed} [data]\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.post = function(url, data, fn){\n  var req = request('POST', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n\n/**\n * PUT `url` with optional `data` and callback `fn(res)`.\n *\n * @param {String} url\n * @param {Mixed|Function} [data] or fn\n * @param {Function} [fn]\n * @return {Request}\n * @api public\n */\n\nrequest.put = function(url, data, fn){\n  var req = request('PUT', url);\n  if ('function' == typeof data) fn = data, data = null;\n  if (data) req.send(data);\n  if (fn) req.end(fn);\n  return req;\n};\n","/**\n * Check if `fn` is a function.\n *\n * @param {Function} fn\n * @return {Boolean}\n * @api private\n */\nvar isObject = require('./is-object');\n\nfunction isFunction(fn) {\n  var tag = isObject(fn) ? Object.prototype.toString.call(fn) : '';\n  return tag === '[object Function]';\n}\n\nmodule.exports = isFunction;\n","/**\n * Check if `obj` is an object.\n *\n * @param {Object} obj\n * @return {Boolean}\n * @api private\n */\n\nfunction isObject(obj) {\n  return null !== obj && 'object' === typeof obj;\n}\n\nmodule.exports = isObject;\n","/**\n * Module of mixed-in functions shared between node and client code\n */\nvar isObject = require('./is-object');\n\n/**\n * Expose `RequestBase`.\n */\n\nmodule.exports = RequestBase;\n\n/**\n * Initialize a new `RequestBase`.\n *\n * @api public\n */\n\nfunction RequestBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in RequestBase.prototype) {\n    obj[key] = RequestBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Clear previous timeout.\n *\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.clearTimeout = function _clearTimeout(){\n  this._timeout = 0;\n  this._responseTimeout = 0;\n  clearTimeout(this._timer);\n  clearTimeout(this._responseTimeoutTimer);\n  return this;\n};\n\n/**\n * Override default response body parser\n *\n * This function will be called to convert incoming data into request.body\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.parse = function parse(fn){\n  this._parser = fn;\n  return this;\n};\n\n/**\n * Set format of binary response body.\n * In browser valid formats are 'blob' and 'arraybuffer',\n * which return Blob and ArrayBuffer, respectively.\n *\n * In Node all values result in Buffer.\n *\n * Examples:\n *\n *      req.get('/')\n *        .responseType('blob')\n *        .end(callback);\n *\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.responseType = function(val){\n  this._responseType = val;\n  return this;\n};\n\n/**\n * Override default request body serializer\n *\n * This function will be called to convert data set via .send or .attach into payload to send\n *\n * @param {Function}\n * @api public\n */\n\nRequestBase.prototype.serialize = function serialize(fn){\n  this._serializer = fn;\n  return this;\n};\n\n/**\n * Set timeouts.\n *\n * - response timeout is time between sending request and receiving the first byte of the response. Includes DNS and connection time.\n * - deadline is the time from start of the request to receiving response body in full. If the deadline is too short large files may not load at all on slow connections.\n *\n * Value of 0 or false means no timeout.\n *\n * @param {Number|Object} ms or {response, read, deadline}\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.timeout = function timeout(options){\n  if (!options || 'object' !== typeof options) {\n    this._timeout = options;\n    this._responseTimeout = 0;\n    return this;\n  }\n\n  if ('undefined' !== typeof options.deadline) {\n    this._timeout = options.deadline;\n  }\n  if ('undefined' !== typeof options.response) {\n    this._responseTimeout = options.response;\n  }\n  return this;\n};\n\n/**\n * Promise support\n *\n * @param {Function} resolve\n * @param {Function} reject\n * @return {Request}\n */\n\nRequestBase.prototype.then = function then(resolve, reject) {\n  if (!this._fullfilledPromise) {\n    var self = this;\n    if (this._endCalled) {\n      console.warn(\"Warning: superagent request was sent twice, because both .end() and .then() were called. Never call .end() if you use promises\");\n    }\n    this._fullfilledPromise = new Promise(function(innerResolve, innerReject){\n      self.end(function(err, res){\n        if (err) innerReject(err); else innerResolve(res);\n      });\n    });\n  }\n  return this._fullfilledPromise.then(resolve, reject);\n}\n\nRequestBase.prototype.catch = function(cb) {\n  return this.then(undefined, cb);\n};\n\n/**\n * Allow for extension\n */\n\nRequestBase.prototype.use = function use(fn) {\n  fn(this);\n  return this;\n}\n\nRequestBase.prototype.ok = function(cb) {\n  if ('function' !== typeof cb) throw Error(\"Callback required\");\n  this._okCallback = cb;\n  return this;\n};\n\nRequestBase.prototype._isResponseOK = function(res) {\n  if (!res) {\n    return false;\n  }\n\n  if (this._okCallback) {\n    return this._okCallback(res);\n  }\n\n  return res.status >= 200 && res.status < 300;\n};\n\n\n/**\n * Get request header `field`.\n * Case-insensitive.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nRequestBase.prototype.get = function(field){\n  return this._header[field.toLowerCase()];\n};\n\n/**\n * Get case-insensitive header `field` value.\n * This is a deprecated internal API. Use `.get(field)` instead.\n *\n * (getHeader is no longer used internally by the superagent code base)\n *\n * @param {String} field\n * @return {String}\n * @api private\n * @deprecated\n */\n\nRequestBase.prototype.getHeader = RequestBase.prototype.get;\n\n/**\n * Set header `field` to `val`, or multiple fields with one object.\n * Case-insensitive.\n *\n * Examples:\n *\n *      req.get('/')\n *        .set('Accept', 'application/json')\n *        .set('X-API-Key', 'foobar')\n *        .end(callback);\n *\n *      req.get('/')\n *        .set({ Accept: 'application/json', 'X-API-Key': 'foobar' })\n *        .end(callback);\n *\n * @param {String|Object} field\n * @param {String} val\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.set = function(field, val){\n  if (isObject(field)) {\n    for (var key in field) {\n      this.set(key, field[key]);\n    }\n    return this;\n  }\n  this._header[field.toLowerCase()] = val;\n  this.header[field] = val;\n  return this;\n};\n\n/**\n * Remove header `field`.\n * Case-insensitive.\n *\n * Example:\n *\n *      req.get('/')\n *        .unset('User-Agent')\n *        .end(callback);\n *\n * @param {String} field\n */\nRequestBase.prototype.unset = function(field){\n  delete this._header[field.toLowerCase()];\n  delete this.header[field];\n  return this;\n};\n\n/**\n * Write the field `name` and `val`, or multiple fields with one object\n * for \"multipart/form-data\" request bodies.\n *\n * ``` js\n * request.post('/upload')\n *   .field('foo', 'bar')\n *   .end(callback);\n *\n * request.post('/upload')\n *   .field({ foo: 'bar', baz: 'qux' })\n *   .end(callback);\n * ```\n *\n * @param {String|Object} name\n * @param {String|Blob|File|Buffer|fs.ReadStream} val\n * @return {Request} for chaining\n * @api public\n */\nRequestBase.prototype.field = function(name, val) {\n\n  // name should be either a string or an object.\n  if (null === name ||  undefined === name) {\n    throw new Error('.field(name, val) name can not be empty');\n  }\n\n  if (isObject(name)) {\n    for (var key in name) {\n      this.field(key, name[key]);\n    }\n    return this;\n  }\n\n  if (Array.isArray(val)) {\n    for (var i in val) {\n      this.field(name, val[i]);\n    }\n    return this;\n  }\n\n  // val should be defined now\n  if (null === val || undefined === val) {\n    throw new Error('.field(name, val) val can not be empty');\n  }\n  if ('boolean' === typeof val) {\n    val = '' + val;\n  }\n  this._getFormData().append(name, val);\n  return this;\n};\n\n/**\n * Abort the request, and clear potential timeout.\n *\n * @return {Request}\n * @api public\n */\nRequestBase.prototype.abort = function(){\n  if (this._aborted) {\n    return this;\n  }\n  this._aborted = true;\n  this.xhr && this.xhr.abort(); // browser\n  this.req && this.req.abort(); // node\n  this.clearTimeout();\n  this.emit('abort');\n  return this;\n};\n\n/**\n * Enable transmission of cookies with x-domain requests.\n *\n * Note that for this to work the origin must not be\n * using \"Access-Control-Allow-Origin\" with a wildcard,\n * and also must set \"Access-Control-Allow-Credentials\"\n * to \"true\".\n *\n * @api public\n */\n\nRequestBase.prototype.withCredentials = function(){\n  // This is browser-only functionality. Node side is no-op.\n  this._withCredentials = true;\n  return this;\n};\n\n/**\n * Set the max redirects to `n`. Does noting in browser XHR implementation.\n *\n * @param {Number} n\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.redirects = function(n){\n  this._maxRedirects = n;\n  return this;\n};\n\n/**\n * Convert to a plain javascript object (not JSON string) of scalar properties.\n * Note as this method is designed to return a useful non-this value,\n * it cannot be chained.\n *\n * @return {Object} describing method, url, and data of this request\n * @api public\n */\n\nRequestBase.prototype.toJSON = function(){\n  return {\n    method: this.method,\n    url: this.url,\n    data: this._data,\n    headers: this._header\n  };\n};\n\n\n/**\n * Send `data` as the request body, defaulting the `.type()` to \"json\" when\n * an object is given.\n *\n * Examples:\n *\n *       // manual json\n *       request.post('/user')\n *         .type('json')\n *         .send('{\"name\":\"tj\"}')\n *         .end(callback)\n *\n *       // auto json\n *       request.post('/user')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // manual x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send('name=tj')\n *         .end(callback)\n *\n *       // auto x-www-form-urlencoded\n *       request.post('/user')\n *         .type('form')\n *         .send({ name: 'tj' })\n *         .end(callback)\n *\n *       // defaults to x-www-form-urlencoded\n *      request.post('/user')\n *        .send('name=tobi')\n *        .send('species=ferret')\n *        .end(callback)\n *\n * @param {String|Object} data\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.send = function(data){\n  var isObj = isObject(data);\n  var type = this._header['content-type'];\n\n  if (isObj && !this._data) {\n    if (Array.isArray(data)) {\n      this._data = [];\n    } else if (!this._isHost(data)) {\n      this._data = {};\n    }\n  } else if (data && this._data && this._isHost(this._data)) {\n    throw Error(\"Can't merge these send calls\");\n  }\n\n  // merge\n  if (isObj && isObject(this._data)) {\n    for (var key in data) {\n      this._data[key] = data[key];\n    }\n  } else if ('string' == typeof data) {\n    // default to x-www-form-urlencoded\n    if (!type) this.type('form');\n    type = this._header['content-type'];\n    if ('application/x-www-form-urlencoded' == type) {\n      this._data = this._data\n        ? this._data + '&' + data\n        : data;\n    } else {\n      this._data = (this._data || '') + data;\n    }\n  } else {\n    this._data = data;\n  }\n\n  if (!isObj || this._isHost(data)) {\n    return this;\n  }\n\n  // default to json\n  if (!type) this.type('json');\n  return this;\n};\n\n\n/**\n * Sort `querystring` by the sort function\n *\n *\n * Examples:\n *\n *       // default order\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery()\n *         .end(callback)\n *\n *       // customized sort function\n *       request.get('/user')\n *         .query('name=Nick')\n *         .query('search=Manny')\n *         .sortQuery(function(a, b){\n *           return a.length - b.length;\n *         })\n *         .end(callback)\n *\n *\n * @param {Function} sort\n * @return {Request} for chaining\n * @api public\n */\n\nRequestBase.prototype.sortQuery = function(sort) {\n  // _sort default to true but otherwise can be a function or boolean\n  this._sort = typeof sort === 'undefined' ? true : sort;\n  return this;\n};\n\n/**\n * Invoke callback with timeout error.\n *\n * @api private\n */\n\nRequestBase.prototype._timeoutError = function(reason, timeout){\n  if (this._aborted) {\n    return;\n  }\n  var err = new Error(reason + timeout + 'ms exceeded');\n  err.timeout = timeout;\n  err.code = 'ECONNABORTED';\n  this.timedout = true;\n  this.abort();\n  this.callback(err);\n};\n\nRequestBase.prototype._setTimeouts = function() {\n  var self = this;\n\n  // deadline\n  if (this._timeout && !this._timer) {\n    this._timer = setTimeout(function(){\n      self._timeoutError('Timeout of ', self._timeout);\n    }, this._timeout);\n  }\n  // response timeout\n  if (this._responseTimeout && !this._responseTimeoutTimer) {\n    this._responseTimeoutTimer = setTimeout(function(){\n      self._timeoutError('Response timeout of ', self._responseTimeout);\n    }, this._responseTimeout);\n  }\n}\n","\n/**\n * Module dependencies.\n */\n\nvar utils = require('./utils');\n\n/**\n * Expose `ResponseBase`.\n */\n\nmodule.exports = ResponseBase;\n\n/**\n * Initialize a new `ResponseBase`.\n *\n * @api public\n */\n\nfunction ResponseBase(obj) {\n  if (obj) return mixin(obj);\n}\n\n/**\n * Mixin the prototype properties.\n *\n * @param {Object} obj\n * @return {Object}\n * @api private\n */\n\nfunction mixin(obj) {\n  for (var key in ResponseBase.prototype) {\n    obj[key] = ResponseBase.prototype[key];\n  }\n  return obj;\n}\n\n/**\n * Get case-insensitive `field` value.\n *\n * @param {String} field\n * @return {String}\n * @api public\n */\n\nResponseBase.prototype.get = function(field){\n    return this.header[field.toLowerCase()];\n};\n\n/**\n * Set header related properties:\n *\n *   - `.type` the content type without params\n *\n * A response of \"Content-Type: text/plain; charset=utf-8\"\n * will provide you with a `.type` of \"text/plain\".\n *\n * @param {Object} header\n * @api private\n */\n\nResponseBase.prototype._setHeaderProperties = function(header){\n    // TODO: moar!\n    // TODO: make this a util\n\n    // content-type\n    var ct = header['content-type'] || '';\n    this.type = utils.type(ct);\n\n    // params\n    var params = utils.params(ct);\n    for (var key in params) this[key] = params[key];\n\n    this.links = {};\n\n    // links\n    try {\n        if (header.link) {\n            this.links = utils.parseLinks(header.link);\n        }\n    } catch (err) {\n        // ignore\n    }\n};\n\n/**\n * Set flags such as `.ok` based on `status`.\n *\n * For example a 2xx response will give you a `.ok` of __true__\n * whereas 5xx will be __false__ and `.error` will be __true__. The\n * `.clientError` and `.serverError` are also available to be more\n * specific, and `.statusType` is the class of error ranging from 1..5\n * sometimes useful for mapping respond colors etc.\n *\n * \"sugar\" properties are also defined for common cases. Currently providing:\n *\n *   - .noContent\n *   - .badRequest\n *   - .unauthorized\n *   - .notAcceptable\n *   - .notFound\n *\n * @param {Number} status\n * @api private\n */\n\nResponseBase.prototype._setStatusProperties = function(status){\n    var type = status / 100 | 0;\n\n    // status / class\n    this.status = this.statusCode = status;\n    this.statusType = type;\n\n    // basics\n    this.info = 1 == type;\n    this.ok = 2 == type;\n    this.redirect = 3 == type;\n    this.clientError = 4 == type;\n    this.serverError = 5 == type;\n    this.error = (4 == type || 5 == type)\n        ? this.toError()\n        : false;\n\n    // sugar\n    this.accepted = 202 == status;\n    this.noContent = 204 == status;\n    this.badRequest = 400 == status;\n    this.unauthorized = 401 == status;\n    this.notAcceptable = 406 == status;\n    this.forbidden = 403 == status;\n    this.notFound = 404 == status;\n};\n","\n/**\n * Return the mime type for the given `str`.\n *\n * @param {String} str\n * @return {String}\n * @api private\n */\n\nexports.type = function(str){\n  return str.split(/ *; */).shift();\n};\n\n/**\n * Return header field parameters.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.params = function(str){\n  return str.split(/ *; */).reduce(function(obj, str){\n    var parts = str.split(/ *= */);\n    var key = parts.shift();\n    var val = parts.shift();\n\n    if (key && val) obj[key] = val;\n    return obj;\n  }, {});\n};\n\n/**\n * Parse Link header fields.\n *\n * @param {String} str\n * @return {Object}\n * @api private\n */\n\nexports.parseLinks = function(str){\n  return str.split(/ *, */).reduce(function(obj, str){\n    var parts = str.split(/ *; */);\n    var url = parts[0].slice(1, -1);\n    var rel = parts[1].split(/ *= */)[1].slice(1, -1);\n    obj[rel] = url;\n    return obj;\n  }, {});\n};\n\n/**\n * Strip content related fields from `header`.\n *\n * @param {Object} header\n * @return {Object} header\n * @api private\n */\n\nexports.cleanHeader = function(header, shouldStripCookie){\n  delete header['content-type'];\n  delete header['content-length'];\n  delete header['transfer-encoding'];\n  delete header['host'];\n  if (shouldStripCookie) {\n    delete header['cookie'];\n  }\n  return header;\n};\n","\r\n/**\r\n * Expose `Emitter`.\r\n */\r\n\r\nif (typeof module !== 'undefined') {\r\n  module.exports = Emitter;\r\n}\r\n\r\n/**\r\n * Initialize a new `Emitter`.\r\n *\r\n * @api public\r\n */\r\n\r\nfunction Emitter(obj) {\r\n  if (obj) return mixin(obj);\r\n};\r\n\r\n/**\r\n * Mixin the emitter properties.\r\n *\r\n * @param {Object} obj\r\n * @return {Object}\r\n * @api private\r\n */\r\n\r\nfunction mixin(obj) {\r\n  for (var key in Emitter.prototype) {\r\n    obj[key] = Emitter.prototype[key];\r\n  }\r\n  return obj;\r\n}\r\n\r\n/**\r\n * Listen on the given `event` with `fn`.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.on =\r\nEmitter.prototype.addEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n  (this._callbacks['$' + event] = this._callbacks['$' + event] || [])\r\n    .push(fn);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Adds an `event` listener that will be invoked a single\r\n * time then automatically removed.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.once = function(event, fn){\r\n  function on() {\r\n    this.off(event, on);\r\n    fn.apply(this, arguments);\r\n  }\r\n\r\n  on.fn = fn;\r\n  this.on(event, on);\r\n  return this;\r\n};\r\n\r\n/**\r\n * Remove the given callback for `event` or all\r\n * registered callbacks.\r\n *\r\n * @param {String} event\r\n * @param {Function} fn\r\n * @return {Emitter}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.off =\r\nEmitter.prototype.removeListener =\r\nEmitter.prototype.removeAllListeners =\r\nEmitter.prototype.removeEventListener = function(event, fn){\r\n  this._callbacks = this._callbacks || {};\r\n\r\n  // all\r\n  if (0 == arguments.length) {\r\n    this._callbacks = {};\r\n    return this;\r\n  }\r\n\r\n  // specific event\r\n  var callbacks = this._callbacks['$' + event];\r\n  if (!callbacks) return this;\r\n\r\n  // remove all handlers\r\n  if (1 == arguments.length) {\r\n    delete this._callbacks['$' + event];\r\n    return this;\r\n  }\r\n\r\n  // remove specific handler\r\n  var cb;\r\n  for (var i = 0; i < callbacks.length; i++) {\r\n    cb = callbacks[i];\r\n    if (cb === fn || cb.fn === fn) {\r\n      callbacks.splice(i, 1);\r\n      break;\r\n    }\r\n  }\r\n  return this;\r\n};\r\n\r\n/**\r\n * Emit `event` with the given args.\r\n *\r\n * @param {String} event\r\n * @param {Mixed} ...\r\n * @return {Emitter}\r\n */\r\n\r\nEmitter.prototype.emit = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  var args = [].slice.call(arguments, 1)\r\n    , callbacks = this._callbacks['$' + event];\r\n\r\n  if (callbacks) {\r\n    callbacks = callbacks.slice(0);\r\n    for (var i = 0, len = callbacks.length; i < len; ++i) {\r\n      callbacks[i].apply(this, args);\r\n    }\r\n  }\r\n\r\n  return this;\r\n};\r\n\r\n/**\r\n * Return array of callbacks for `event`.\r\n *\r\n * @param {String} event\r\n * @return {Array}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.listeners = function(event){\r\n  this._callbacks = this._callbacks || {};\r\n  return this._callbacks['$' + event] || [];\r\n};\r\n\r\n/**\r\n * Check if this emitter has `event` handlers.\r\n *\r\n * @param {String} event\r\n * @return {Boolean}\r\n * @api public\r\n */\r\n\r\nEmitter.prototype.hasListeners = function(event){\r\n  return !! this.listeners(event).length;\r\n};\r\n"]}