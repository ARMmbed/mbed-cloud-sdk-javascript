{"version":3,"sources":["_tests/apiResponse.ts"],"names":[],"mappings":"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","file":"apiResponse.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nconst { suite, test, beforeEach } = intern.getInterface(\"tdd\");\nconst { assert } = intern.getPlugin(\"chai\");\n\nimport { ApiBase } from \"../common/apiBase\";\nimport { SDKError } from \"../common/sdkError\";\n\nclass Api extends ApiBase {\n    public complete(error: any, response: any, acceptHeader: string, callback?: (sdkError: SDKError, data) => any) {\n        return super.complete(error, response, acceptHeader, callback);\n    }\n}\n\nsuite(\"apiBase\", () => {\n\n    let api: Api;\n\n    beforeEach(() => {\n        api = new Api();\n    });\n\n    test(\"should execute callback\", () => {\n\n        api.complete(null, null, null, (_error, _data) => {\n            assert(true);\n        });\n    });\n\n    test(\"should return body\", () => {\n\n        const body = \"body\";\n        const text = \"text\";\n\n        api.complete(null, {\n            body: body,\n            text: text\n        }, null, (_error, data) => {\n            assert.strictEqual(data, body);\n        });\n    });\n\n    test(\"should return text\", () => {\n\n        const text = \"text\";\n\n        api.complete(null, {\n            text: text\n        }, \"application/json\", (_error, data) => {\n            assert.strictEqual(data, text);\n        });\n    });\n\n    test(\"should make date\", () => {\n\n        const date = \"1977-01-12T14:49:20.869Z\";\n\n        api.complete(null, {\n            body: {\n                birthday: date\n            }\n        }, \"application/json\", (_error, data) => {\n            assert.typeOf(data.birthday, \"date\");\n            assert.strictEqual(data.birthday.getDate(), 12);\n            assert.strictEqual(data.birthday.getMonth(), 0);\n            assert.strictEqual(data.birthday.getFullYear(), 1977);\n        });\n    });\n\n    test(\"should not make date with application/json\", () => {\n\n        const date = \"nineteen-seventy-seven\";\n\n        api.complete(null, {\n            body: {\n                birthday: date\n            }\n        }, \"application/json\", (_error, data) => {\n            assert.typeOf(data.birthday, \"string\");\n            assert.strictEqual(data.birthday, date);\n        });\n    });\n\n    test(\"should not make date without application/json\", () => {\n\n        const date = \"nineteen-seventy-seven\";\n\n        api.complete(null, {\n            body: {\n                birthday: date\n            }\n        }, null, (_error, data) => {\n            assert.typeOf(data.birthday, \"string\");\n            assert.notEqual(data, date);\n        });\n    });\n\n    test(\"should raise error\", () => {\n\n        const message = \"abort!\";\n\n        api.complete({\n            message: message\n        }, null, null, error => {\n            assert.strictEqual(error.message, message);\n        });\n    });\n\n    test(\"should have error details\", () => {\n\n        const message = \"abort!\";\n        const details = \"more details\";\n\n        api.complete({\n            message: message\n        }, {\n            body: details\n        }, null, error => {\n            assert.strictEqual(error.message, message);\n            assert.strictEqual(error.details, details);\n        });\n    });\n\n    test(\"should raise error from response\", () => {\n\n        const message = \"abort!\";\n        const responseError = \"error!\";\n        const details = \"more details\";\n\n        api.complete({\n            message: message\n        }, {\n            body: details,\n            error: {\n                message: responseError\n            }\n        }, null, error => {\n            assert.strictEqual(error.message, responseError);\n            assert.strictEqual(error.details, details);\n        });\n    });\n\n    test(\"should raise error from body\", () => {\n\n        const message = \"abort!\";\n        const bodyError = \"error!\";\n\n        api.complete({\n            message: message\n        }, {\n            body: {\n                message: bodyError\n            }\n        }, null, error => {\n            assert.strictEqual(error.message, bodyError);\n        });\n    });\n\n    test(\"should raise error from body message\", () => {\n\n        const message = \"abort!\";\n        const bodyError = \"error!\";\n\n        api.complete({\n            message: message\n        }, {\n            body: {\n                message: {\n                    error: bodyError\n                }\n            }\n        }, null, error => {\n            assert.strictEqual(error.message, bodyError);\n        });\n    });\n});\n"]}