{"version":3,"sources":["_tests/caseFunctions.ts"],"names":[],"mappings":";AAAA;;;;;;;;;;;;;;;EAeE;;AAEI,IAAA,+BAA4C,EAA1C,gBAAK,EAAE,cAAI,CAAgC;AAC3C,IAAA,wCAAM,CAA8B;AAE5C,iDAAiE;AAEjE,KAAK,CAAC,cAAc,EAAE;IAElB,IAAI,CAAC,iBAAiB,EAAE;QACpB,IAAM,MAAM,GAAG,mBAAmB,CAAC;QACnC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,eAAe,EAAE;QAClB,IAAM,MAAM,GAAG,oBAAoB,CAAC;QACpC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,aAAa,EAAE;QAChB,IAAM,MAAM,GAAG,oBAAoB,CAAC;QACpC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,iBAAiB,CAAC,CAAC;IAClD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,wBAAwB,EAAE;QAC3B,IAAM,MAAM,GAAG,oBAAoB,CAAC;QACpC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,oBAAoB,EAAE;QACvB,IAAM,MAAM,GAAG,mBAAmB,CAAC;QACnC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,gBAAgB,CAAC,CAAC;IACjD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC;AAEH,KAAK,CAAC,cAAc,EAAE;IAElB,IAAI,CAAC,iBAAiB,EAAE;QACpB,IAAM,MAAM,GAAG,gBAAgB,CAAC;QAChC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,mBAAmB,CAAC,CAAC;IACpD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,qBAAqB,EAAE;QACxB,IAAM,MAAM,GAAG,gBAAgB,CAAC;QAChC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,mBAAmB,EAAE;QACtB,IAAM,MAAM,GAAG,gBAAgB,CAAC;QAChC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,wBAAwB,EAAE;QAC3B,IAAM,MAAM,GAAG,gBAAgB,CAAC;QAChC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,oBAAoB,CAAC,CAAC;IACrD,CAAC,CAAC,CAAC;IAEH,IAAI,CAAC,aAAa,EAAE;QAChB,IAAM,MAAM,GAAG,kBAAkB,CAAC;QAClC,IAAM,MAAM,GAAG,wBAAY,CAAC,MAAM,CAAC,CAAC;QACpC,MAAM,CAAC,WAAW,CAAC,MAAM,EAAE,qBAAqB,CAAC,CAAC;IACtD,CAAC,CAAC,CAAC;AACP,CAAC,CAAC,CAAC","file":"caseFunctions.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nconst { suite, test } = intern.getInterface(\"tdd\");\nconst { assert } = intern.getPlugin(\"chai\");\n\nimport { snakeToCamel, camelToSnake } from \"../common/functions\";\n\nsuite(\"snakeToCamel\", () => {\n\n    test(\"should be camel\", () => {\n        const string = \"im_really_a_camel\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"imReallyACamel\");\n    });\n\n    test(\"begins with _\", () => {\n        const string = \"_im_really_a_camel\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"ImReallyACamel\");\n    });\n\n    test(\"ends with _\", () => {\n        const string = \"im_really_a_camel_\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"imReallyACamel_\");\n    });\n\n    test(\"creates capital at end\", () => {\n        const string = \"im_really_a_came_l\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"imReallyACameL\");\n    });\n\n    test(\"preserves capitals\", () => {\n        const string = \"iM_reAlly_a_caMel\";\n        const result = snakeToCamel(string);\n        assert.strictEqual(result, \"iMReAllyACaMel\");\n    });\n});\n\nsuite(\"camelToSnake\", () => {\n\n    test(\"should be snake\", () => {\n        const string = \"imReallyASnake\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"im_really_a_snake\");\n    });\n\n    test(\"begins with capital\", () => {\n        const string = \"ImReallyASnake\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"_im_really_a_snake\");\n    });\n\n    test(\"ends with capital\", () => {\n        const string = \"imReallyASnakE\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"im_really_a_snak_e\");\n    });\n\n    test(\"creates _ at beginning\", () => {\n        const string = \"ImReallyASnake\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"_im_really_a_snake\");\n    });\n\n    test(\"preserves _\", () => {\n        const string = \"imRe_allyA_Snake\";\n        const result = camelToSnake(string);\n        assert.strictEqual(result, \"im_re_ally_a__snake\");\n    });\n});\n"]}