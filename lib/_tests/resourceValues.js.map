{"version":3,"sources":["_tests/resourceValues.ts"],"names":[],"mappings":"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","file":"resourceValues.js","sourcesContent":["/*\n* Mbed Cloud JavaScript SDK\n* Copyright Arm Limited 2017\n*\n* Licensed under the Apache License, Version 2.0 (the \"License\");\n* you may not use this file except in compliance with the License.\n* You may obtain a copy of the License at\n*\n* http://www.apache.org/licenses/LICENSE-2.0\n*\n* Unless required by applicable law or agreed to in writing, software\n* distributed under the License is distributed on an \"AS IS\" BASIS,\n* WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n* See the License for the specific language governing permissions and\n* limitations under the License.\n*/\n\nconst { suite, test } = intern.getInterface(\"tdd\");\nconst { assert } = intern.getPlugin(\"chai\");\nimport { Subscribe } from \"../subscribe/subscribe\";\nimport { PresubscriptionObject, NotificationData } from \"../connect/types\";\n\nsuite(\"testResourceValues\", () => {\n\n    test(\"presubscriptionConstruction\", () => {\n        const subscribe = new Subscribe();\n        const observer = subscribe.resourceValues({ deviceId: \"2\", resourcePaths: [ \"3/0/*\", \"4/0/1\" ] });\n        const presub: PresubscriptionObject = { deviceId: \"2\", resourcePaths: [ \"3/0/*\", \"4/0/1\" ] };\n        assert.deepEqual(presub, observer.localPresubscriptions[0]);\n    });\n\n    test(\"multiplePresubscriptionConstruction\", () => {\n        const subscribe = new Subscribe();\n        const observer = subscribe.resourceValues({ deviceId: [ \"2\", \"3\" ], resourcePaths: [ \"3/0/*\", \"4/0/1\" ] });\n        const presubs: Array<PresubscriptionObject> = [ { deviceId: \"2\", resourcePaths: [ \"3/0/*\", \"4/0/1\" ] }, { deviceId: \"3\", resourcePaths: [ \"3/0/*\", \"4/0/1\" ] } ];\n        assert.deepEqual(presubs, observer.localPresubscriptions);\n    });\n\n    test(\"subscribingToOneDevice\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ deviceId: \"1\" });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 3);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 6);\n    });\n\n    test(\"subscribingToMultipleDevices\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ deviceId: [ \"1\", \"2\" ] });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 6);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 12);\n    });\n\n    test(\"subscribingToResourcePath\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ resourcePaths: [ \"/3/0/0\" ] });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 5);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 10);\n    });\n\n    test(\"subscribingToOneDeviceAndResourcePath\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ deviceId: \"2\", resourcePaths: [ \"/3/0/0\" ] });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 1);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 2);\n    });\n\n    test(\"subscribingToOneDeviceAndResourcePaths\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ deviceId: \"2\", resourcePaths: [ \"/3/0/0\", \"/3/0/1\" ] });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 2);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 4);\n    });\n\n    test(\"subscribingToMultipleDevicesAndResourcePath\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ deviceId: [ \"2\", \"3\" ], resourcePaths: [ \"/3/0/0\" ] });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 2);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 4);\n    });\n\n    test(\"subscribingToMultipleDevicesAndResourcePaths\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ deviceId: [ \"2\", \"3\" ], resourcePaths: [ \"/3/0/0\", \"/3/0/1\" ] });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 4);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 8);\n    });\n\n    test(\"subscribingToOneDeviceWildcard\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ deviceId: \"*\" });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 15);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 30);\n    });\n\n    test(\"subscribingToOneDeviceAndResourcePathWildcard\", () => {\n        const subscribe = new Subscribe();\n        const items: Array<NotificationData> = [];\n        const observer = subscribe.resourceValues({ deviceId: \"2\", resourcePaths: [ \"/3/*\" ] });\n        observer.addListener(res => items.push(res));\n        mockNotify(subscribe);\n        assert.lengthOf(items, 3);\n        mockNotify(subscribe);\n        assert.lengthOf(items, 6);\n    });\n});\n\nexport function mockNotify(subscribe: Subscribe): void {\n    const notificationList: Array<NotificationData> = [\n        { deviceId: \"1\", path: \"/3/0/0\", payload: \"SGK=\" },\n        { deviceId: \"1\", path: \"/3/0/1\", payload: \"SGK=\" },\n        { deviceId: \"1\", path: \"/3/0/2\", payload: \"SGK=\" },\n        { deviceId: \"2\", path: \"/3/0/0\", payload: \"SGK=\" },\n        { deviceId: \"2\", path: \"/3/0/1\", payload: \"SGK=\" },\n        { deviceId: \"2\", path: \"/3/0/2\", payload: \"SGK=\" },\n        { deviceId: \"3\", path: \"/3/0/0\", payload: \"SGK=\" },\n        { deviceId: \"3\", path: \"/3/0/1\", payload: \"SGK=\" },\n        { deviceId: \"3\", path: \"/3/0/2\", payload: \"SGK=\" },\n        { deviceId: \"4\", path: \"/3/0/0\", payload: \"SGK=\" },\n        { deviceId: \"4\", path: \"/3/0/1\", payload: \"SGK=\" },\n        { deviceId: \"4\", path: \"/3/0/2\", payload: \"SGK=\" },\n        { deviceId: \"5\", path: \"/3/0/0\", payload: \"SGK=\" },\n        { deviceId: \"5\", path: \"/3/0/1\", payload: \"SGK=\" },\n        { deviceId: \"5\", path: \"/3/0/2\", payload: \"SGK=\" }\n    ];\n\n    notificationList.forEach(item => subscribe.notifyResourceValues(item));\n}\n"],"sourceRoot":"../../src"}